// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="stream,hls_ip_2017_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.043250,HLS_SYN_LAT=1843204,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=1940,HLS_SYN_LUT=2681}" *)

module stream (
        ap_clk,
        ap_rst_n,
        src_TDATA,
        src_TVALID,
        src_TREADY,
        src_TKEEP,
        src_TSTRB,
        src_TUSER,
        src_TLAST,
        src_TID,
        src_TDEST,
        dst_TDATA,
        dst_TVALID,
        dst_TREADY,
        dst_TKEEP,
        dst_TSTRB,
        dst_TUSER,
        dst_TLAST,
        dst_TID,
        dst_TDEST
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_pp0_stage0 = 34'd2;
parameter    ap_ST_fsm_pp0_stage1 = 34'd4;
parameter    ap_ST_fsm_pp0_stage2 = 34'd8;
parameter    ap_ST_fsm_pp0_stage3 = 34'd16;
parameter    ap_ST_fsm_pp0_stage4 = 34'd32;
parameter    ap_ST_fsm_pp0_stage5 = 34'd64;
parameter    ap_ST_fsm_pp0_stage6 = 34'd128;
parameter    ap_ST_fsm_pp0_stage7 = 34'd256;
parameter    ap_ST_fsm_pp0_stage8 = 34'd512;
parameter    ap_ST_fsm_pp0_stage9 = 34'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 34'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 34'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 34'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 34'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 34'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 34'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 34'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 34'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 34'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 34'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 34'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 34'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 34'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 34'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 34'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 34'd67108864;
parameter    ap_ST_fsm_pp0_stage26 = 34'd134217728;
parameter    ap_ST_fsm_pp0_stage27 = 34'd268435456;
parameter    ap_ST_fsm_pp0_stage28 = 34'd536870912;
parameter    ap_ST_fsm_pp0_stage29 = 34'd1073741824;
parameter    ap_ST_fsm_pp0_stage30 = 34'd2147483648;
parameter    ap_ST_fsm_pp0_stage31 = 34'd4294967296;
parameter    ap_ST_fsm_state37 = 34'd8589934592;

input   ap_clk;
input   ap_rst_n;
input  [31:0] src_TDATA;
input   src_TVALID;
output   src_TREADY;
input  [3:0] src_TKEEP;
input  [3:0] src_TSTRB;
input  [0:0] src_TUSER;
input  [0:0] src_TLAST;
input  [0:0] src_TID;
input  [0:0] src_TDEST;
output  [31:0] dst_TDATA;
output   dst_TVALID;
input   dst_TREADY;
output  [3:0] dst_TKEEP;
output  [3:0] dst_TSTRB;
output  [0:0] dst_TUSER;
output  [0:0] dst_TLAST;
output  [0:0] dst_TID;
output  [0:0] dst_TDEST;

reg    ap_rst_n_inv;
reg   [31:0] src_V_data_V_0_data_out;
wire    src_V_data_V_0_vld_in;
wire    src_V_data_V_0_vld_out;
wire    src_V_data_V_0_ack_in;
reg    src_V_data_V_0_ack_out;
reg   [31:0] src_V_data_V_0_payload_A;
reg   [31:0] src_V_data_V_0_payload_B;
reg    src_V_data_V_0_sel_rd;
reg    src_V_data_V_0_sel_wr;
wire    src_V_data_V_0_sel;
wire    src_V_data_V_0_load_A;
wire    src_V_data_V_0_load_B;
reg   [1:0] src_V_data_V_0_state;
wire    src_V_data_V_0_state_cmp_full;
wire    src_V_dest_V_0_vld_in;
reg    src_V_dest_V_0_ack_out;
reg   [1:0] src_V_dest_V_0_state;
reg   [31:0] dst_V_data_V_1_data_in;
reg   [31:0] dst_V_data_V_1_data_out;
reg    dst_V_data_V_1_vld_in;
wire    dst_V_data_V_1_vld_out;
wire    dst_V_data_V_1_ack_in;
wire    dst_V_data_V_1_ack_out;
reg   [31:0] dst_V_data_V_1_payload_A;
reg   [31:0] dst_V_data_V_1_payload_B;
reg    dst_V_data_V_1_sel_rd;
reg    dst_V_data_V_1_sel_wr;
wire    dst_V_data_V_1_sel;
wire    dst_V_data_V_1_load_A;
wire    dst_V_data_V_1_load_B;
reg   [1:0] dst_V_data_V_1_state;
wire    dst_V_data_V_1_state_cmp_full;
wire   [3:0] dst_V_keep_V_1_data_out;
reg    dst_V_keep_V_1_vld_in;
wire    dst_V_keep_V_1_vld_out;
wire    dst_V_keep_V_1_ack_in;
wire    dst_V_keep_V_1_ack_out;
reg    dst_V_keep_V_1_sel_rd;
wire    dst_V_keep_V_1_sel;
reg   [1:0] dst_V_keep_V_1_state;
wire   [3:0] dst_V_strb_V_1_data_out;
reg    dst_V_strb_V_1_vld_in;
wire    dst_V_strb_V_1_vld_out;
wire    dst_V_strb_V_1_ack_in;
wire    dst_V_strb_V_1_ack_out;
reg    dst_V_strb_V_1_sel_rd;
wire    dst_V_strb_V_1_sel;
reg   [1:0] dst_V_strb_V_1_state;
wire   [0:0] dst_V_user_V_1_data_out;
reg    dst_V_user_V_1_vld_in;
wire    dst_V_user_V_1_vld_out;
wire    dst_V_user_V_1_ack_in;
wire    dst_V_user_V_1_ack_out;
reg    dst_V_user_V_1_sel_rd;
wire    dst_V_user_V_1_sel;
reg   [1:0] dst_V_user_V_1_state;
wire   [0:0] dst_V_last_V_1_data_out;
reg    dst_V_last_V_1_vld_in;
wire    dst_V_last_V_1_vld_out;
wire    dst_V_last_V_1_ack_in;
wire    dst_V_last_V_1_ack_out;
reg    dst_V_last_V_1_sel_rd;
wire    dst_V_last_V_1_sel;
reg   [1:0] dst_V_last_V_1_state;
wire   [0:0] dst_V_id_V_1_data_out;
reg    dst_V_id_V_1_vld_in;
wire    dst_V_id_V_1_vld_out;
wire    dst_V_id_V_1_ack_in;
wire    dst_V_id_V_1_ack_out;
reg    dst_V_id_V_1_sel_rd;
wire    dst_V_id_V_1_sel;
reg   [1:0] dst_V_id_V_1_state;
wire   [0:0] dst_V_dest_V_1_data_out;
reg    dst_V_dest_V_1_vld_in;
wire    dst_V_dest_V_1_vld_out;
wire    dst_V_dest_V_1_ack_in;
wire    dst_V_dest_V_1_ack_out;
reg    dst_V_dest_V_1_sel_rd;
wire    dst_V_dest_V_1_sel;
reg   [1:0] dst_V_dest_V_1_state;
reg   [15:0] x;
reg   [15:0] y;
reg    src_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage2;
reg   [0:0] exitcond_reg_1265;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
reg    dst_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] ap_reg_pp0_iter1_exitcond_reg_1265;
reg   [0:0] x_flag_reg_374;
reg   [15:0] x_loc_reg_388;
reg   [0:0] y_flag_reg_398;
reg   [15:0] y_new_reg_410;
reg   [15:0] y_loc_reg_422;
reg   [19:0] pixels_reg_432;
wire   [31:0] lb_val_0_q0;
reg   [31:0] reg_448;
reg    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state36_pp0_stage2_iter1;
reg    ap_block_state36_io;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state18_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state20_pp0_stage18_iter0;
reg    ap_block_state20_io;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state22_pp0_stage20_iter0;
reg    ap_block_state22_io;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state24_pp0_stage22_iter0;
reg    ap_block_state24_io;
reg    ap_block_pp0_stage22_11001;
wire    ap_block_state26_pp0_stage24_iter0;
reg    ap_block_state26_io;
reg    ap_block_pp0_stage24_11001;
wire    ap_block_state28_pp0_stage26_iter0;
reg    ap_block_state28_io;
reg    ap_block_pp0_stage26_11001;
wire    ap_block_state30_pp0_stage28_iter0;
reg    ap_block_state30_io;
reg    ap_block_pp0_stage28_11001;
wire    ap_block_state32_pp0_stage30_iter0;
reg    ap_block_state32_io;
reg    ap_block_pp0_stage30_11001;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state34_pp0_stage0_iter1;
reg    ap_block_state34_io;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] lb_val_1_q0;
reg   [31:0] reg_453;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg    ap_block_state21_pp0_stage19_iter0;
reg    ap_block_state21_io;
reg    ap_block_pp0_stage19_11001;
wire    ap_block_state29_pp0_stage27_iter0;
reg    ap_block_state29_io;
reg    ap_block_pp0_stage27_11001;
wire    ap_block_state33_pp0_stage31_iter0;
reg    ap_block_state33_io;
reg    ap_block_pp0_stage31_11001;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state35_pp0_stage1_iter1;
reg    ap_block_state35_io;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_458;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg    ap_block_state23_pp0_stage21_iter0;
reg    ap_block_state23_io;
reg    ap_block_pp0_stage21_11001;
wire    ap_block_state31_pp0_stage29_iter0;
reg    ap_block_state31_io;
reg    ap_block_pp0_stage29_11001;
reg   [31:0] reg_463;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg    ap_block_state25_pp0_stage23_iter0;
reg    ap_block_state25_io;
reg    ap_block_pp0_stage23_11001;
reg   [31:0] reg_468;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_state27_pp0_stage25_iter0;
reg    ap_block_state27_io;
reg    ap_block_pp0_stage25_11001;
reg   [31:0] reg_473;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg   [31:0] reg_478;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_state1;
wire   [0:0] exitcond_fu_491_p2;
wire   [19:0] pixels_1_s_fu_497_p2;
reg   [19:0] pixels_1_s_reg_1269;
reg   [10:0] lb_val_1_addr_reg_1274;
reg   [10:0] lb_val_0_addr_reg_1279;
wire   [0:0] tmp_4_fu_509_p2;
reg   [0:0] tmp_4_reg_1284;
wire   [10:0] tmp_2_fu_515_p1;
reg   [10:0] tmp_2_reg_1291;
wire   [10:0] tmp_3_cast_fu_519_p2;
reg   [10:0] tmp_3_cast_reg_1296;
wire   [10:0] x_loc_1_fu_524_p3;
reg   [10:0] x_loc_1_reg_1301;
reg   [10:0] lb_val_1_addr_1_reg_1307;
reg   [10:0] lb_val_0_addr_1_reg_1312;
wire   [0:0] tmp_4_1_fu_536_p2;
reg   [0:0] tmp_4_1_reg_1317;
wire   [10:0] tmp_3_1_fu_541_p2;
reg   [10:0] tmp_3_1_reg_1325;
wire   [10:0] x_loc_2_fu_546_p3;
reg   [10:0] x_loc_2_reg_1330;
reg   [10:0] lb_val_1_addr_2_reg_1336;
reg   [10:0] lb_val_0_addr_2_reg_1341;
wire   [0:0] tmp_4_2_fu_558_p2;
reg   [0:0] tmp_4_2_reg_1346;
wire   [10:0] tmp_3_2_fu_563_p2;
reg   [10:0] tmp_3_2_reg_1353;
wire   [10:0] x_loc_3_fu_568_p3;
reg   [10:0] x_loc_3_reg_1358;
reg   [10:0] lb_val_1_addr_3_reg_1364;
reg   [10:0] lb_val_0_addr_3_reg_1369;
wire   [0:0] tmp_4_3_fu_580_p2;
reg   [0:0] tmp_4_3_reg_1374;
wire   [10:0] tmp_3_3_fu_585_p2;
reg   [10:0] tmp_3_3_reg_1382;
wire   [10:0] x_loc_4_fu_590_p3;
reg   [10:0] x_loc_4_reg_1387;
reg   [10:0] lb_val_1_addr_4_reg_1393;
reg   [10:0] lb_val_0_addr_4_reg_1398;
wire   [0:0] tmp_4_4_fu_602_p2;
reg   [0:0] tmp_4_4_reg_1403;
wire   [10:0] tmp_3_4_fu_607_p2;
reg   [10:0] tmp_3_4_reg_1410;
reg   [31:0] tmp_data_V_23_reg_1415;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [10:0] x_loc_5_fu_612_p3;
reg   [10:0] x_loc_5_reg_1420;
reg   [10:0] lb_val_1_addr_5_reg_1426;
reg   [10:0] lb_val_0_addr_5_reg_1431;
wire   [0:0] tmp_4_5_fu_624_p2;
reg   [0:0] tmp_4_5_reg_1436;
wire   [10:0] tmp_3_5_fu_629_p2;
reg   [10:0] tmp_3_5_reg_1444;
reg   [31:0] tmp_data_V_25_reg_1449;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire   [10:0] x_loc_6_fu_634_p3;
reg   [10:0] x_loc_6_reg_1454;
reg   [10:0] lb_val_1_addr_6_reg_1460;
reg   [10:0] lb_val_0_addr_6_reg_1465;
wire   [0:0] tmp_4_6_fu_646_p2;
reg   [0:0] tmp_4_6_reg_1470;
wire   [10:0] tmp_3_6_fu_651_p2;
reg   [10:0] tmp_3_6_reg_1477;
wire   [15:0] tmp_s_fu_656_p2;
reg   [15:0] tmp_s_reg_1482;
wire   [15:0] y_loc_1_fu_662_p3;
reg   [15:0] y_loc_1_reg_1487;
reg   [31:0] tmp_data_V_27_reg_1493;
wire   [10:0] x_loc_7_fu_669_p3;
reg   [10:0] x_loc_7_reg_1498;
reg   [10:0] lb_val_1_addr_7_reg_1504;
reg   [10:0] lb_val_0_addr_7_reg_1509;
wire   [15:0] y_loc_2_fu_686_p3;
reg   [15:0] y_loc_2_reg_1514;
wire   [15:0] tmp_2_8_fu_692_p2;
reg   [15:0] tmp_2_8_reg_1519;
wire   [0:0] tmp_4_7_fu_698_p2;
reg   [0:0] tmp_4_7_reg_1525;
wire   [10:0] tmp_3_7_fu_703_p2;
reg   [10:0] tmp_3_7_reg_1533;
wire   [15:0] newSel7_fu_708_p3;
reg   [15:0] newSel7_reg_1538;
wire   [15:0] y_loc_4_fu_725_p3;
reg   [15:0] y_loc_4_reg_1543;
reg   [31:0] tmp_data_V_29_reg_1549;
wire   [10:0] x_loc_8_fu_732_p3;
reg   [10:0] x_loc_8_reg_1554;
reg   [10:0] lb_val_1_addr_8_reg_1560;
reg   [10:0] lb_val_0_addr_8_reg_1565;
wire   [0:0] tmp4_fu_744_p2;
reg   [0:0] tmp4_reg_1570;
wire   [15:0] newSel11_fu_754_p3;
reg   [15:0] newSel11_reg_1575;
wire   [15:0] tmp_4_11_fu_761_p2;
reg   [15:0] tmp_4_11_reg_1580;
wire   [15:0] y_loc_5_fu_766_p3;
reg   [15:0] y_loc_5_reg_1585;
wire   [15:0] tmp_5_fu_772_p2;
reg   [15:0] tmp_5_reg_1590;
wire   [0:0] tmp_4_8_fu_778_p2;
reg   [0:0] tmp_4_8_reg_1596;
wire   [10:0] tmp_3_8_fu_783_p2;
reg   [10:0] tmp_3_8_reg_1603;
wire   [15:0] tmp_6_fu_793_p2;
reg   [15:0] tmp_6_reg_1608;
wire   [15:0] y_loc_7_fu_799_p3;
reg   [15:0] y_loc_7_reg_1613;
wire   [10:0] x_loc_9_fu_806_p3;
reg   [10:0] x_loc_9_reg_1619;
reg   [10:0] lb_val_1_addr_9_reg_1625;
reg   [10:0] lb_val_0_addr_9_reg_1630;
reg   [31:0] tmp_data_V_36_reg_1635;
wire   [0:0] tmp7_fu_822_p2;
reg   [0:0] tmp7_reg_1640;
wire   [0:0] tmp5_fu_826_p2;
reg   [0:0] tmp5_reg_1645;
wire   [15:0] newSel5_fu_832_p3;
reg   [15:0] newSel5_reg_1651;
wire   [15:0] y_loc_8_fu_842_p3;
reg   [15:0] y_loc_8_reg_1656;
wire   [0:0] tmp_4_9_fu_848_p2;
reg   [0:0] tmp_4_9_reg_1662;
wire   [10:0] tmp_3_9_fu_853_p2;
reg   [10:0] tmp_3_9_reg_1670;
wire   [15:0] newSel13_fu_870_p3;
reg   [15:0] newSel13_reg_1675;
wire   [15:0] tmp_8_fu_876_p2;
reg   [15:0] tmp_8_reg_1680;
wire   [15:0] y_loc_9_fu_881_p3;
reg   [15:0] y_loc_9_reg_1685;
wire   [10:0] x_loc_s_fu_887_p3;
reg   [10:0] x_loc_s_reg_1691;
reg   [10:0] lb_val_1_addr_10_reg_1697;
reg   [10:0] lb_val_0_addr_10_reg_1702;
reg   [31:0] tmp_data_V_40_reg_1707;
wire   [15:0] y_loc_s_fu_904_p3;
reg   [15:0] y_loc_s_reg_1712;
wire   [0:0] tmp_4_s_fu_910_p2;
reg   [0:0] tmp_4_s_reg_1717;
wire   [15:0] tmp_s_19_fu_915_p2;
reg   [15:0] tmp_s_19_reg_1724;
wire   [10:0] tmp_3_s_fu_921_p2;
reg   [10:0] tmp_3_s_reg_1730;
wire   [15:0] newSel3_fu_926_p3;
reg   [15:0] newSel3_reg_1735;
reg   [10:0] lb_val_1_addr_11_reg_1740;
reg   [10:0] lb_val_0_addr_11_reg_1745;
wire   [10:0] x_loc_11_fu_967_p3;
reg   [10:0] x_loc_11_reg_1750;
wire   [15:0] y_loc_11_fu_975_p3;
reg   [15:0] y_loc_11_reg_1757;
reg   [31:0] tmp_data_V_44_reg_1763;
wire   [0:0] tmp11_fu_983_p2;
reg   [0:0] tmp11_reg_1768;
wire   [15:0] newSel9_fu_995_p3;
reg   [15:0] newSel9_reg_1773;
wire   [0:0] tmp_4_11_22_fu_1002_p2;
reg   [0:0] tmp_4_11_22_reg_1778;
wire   [15:0] tmp_11_fu_1007_p2;
reg   [15:0] tmp_11_reg_1783;
wire   [10:0] x_loc_12_fu_1017_p3;
reg   [10:0] x_loc_12_reg_1788;
wire   [15:0] y_loc_12_fu_1025_p3;
reg   [15:0] y_loc_12_reg_1793;
wire   [0:0] tmp_4_12_fu_1032_p2;
reg   [0:0] tmp_4_12_reg_1798;
wire   [15:0] tmp_12_fu_1038_p2;
reg   [15:0] tmp_12_reg_1806;
wire   [10:0] tmp_3_12_fu_1044_p2;
reg   [10:0] tmp_3_12_reg_1812;
reg   [10:0] lb_val_1_addr_12_reg_1817;
reg   [10:0] lb_val_0_addr_12_reg_1822;
wire   [10:0] x_loc_13_fu_1055_p3;
reg   [10:0] x_loc_13_reg_1827;
wire   [0:0] tmp_4_13_fu_1066_p2;
reg   [0:0] tmp_4_13_reg_1832;
wire   [15:0] tmp_13_fu_1072_p2;
reg   [15:0] tmp_13_reg_1837;
wire   [10:0] x_loc_14_fu_1084_p3;
reg   [10:0] x_loc_14_reg_1842;
wire   [15:0] y_loc_14_fu_1092_p3;
reg   [15:0] y_loc_14_reg_1849;
wire   [15:0] newSel1_fu_1100_p3;
reg   [15:0] newSel1_reg_1855;
wire   [15:0] x_new_1_cast_fu_1128_p1;
reg   [15:0] x_new_1_cast_reg_1860;
wire   [0:0] tmp_3_26_fu_1176_p2;
reg   [0:0] tmp_3_26_reg_1865;
wire   [15:0] newSel14_fu_1203_p3;
reg   [15:0] newSel14_reg_1871;
wire   [15:0] y_loc_15_fu_1210_p3;
reg   [15:0] y_loc_15_reg_1876;
reg   [10:0] lb_val_1_addr_13_reg_1881;
reg   [10:0] lb_val_0_addr_13_reg_1886;
wire   [0:0] y_flag_s_fu_1222_p2;
reg   [0:0] y_flag_s_reg_1891;
wire   [15:0] newSel15_fu_1227_p3;
reg   [15:0] newSel15_reg_1896;
reg   [10:0] lb_val_1_addr_14_reg_1901;
reg   [10:0] lb_val_0_addr_14_reg_1906;
reg   [10:0] lb_val_1_addr_15_reg_1911;
reg   [10:0] lb_val_0_addr_15_reg_1916;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage31_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [10:0] lb_val_0_address0;
reg    lb_val_0_ce0;
reg    lb_val_0_we0;
reg   [31:0] lb_val_0_d0;
reg   [10:0] lb_val_1_address0;
reg    lb_val_1_ce0;
reg    lb_val_1_we0;
reg   [15:0] ap_phi_mux_x_loc_phi_fu_391_p4;
reg   [19:0] ap_phi_mux_pixels_phi_fu_436_p4;
wire   [63:0] tmp_1_fu_503_p1;
wire   [63:0] tmp_1_1_fu_530_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_1_2_fu_552_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_1_3_fu_574_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_1_4_fu_596_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] tmp_1_5_fu_618_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] tmp_1_6_14_fu_640_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] tmp_1_7_fu_675_p1;
wire   [63:0] tmp_1_8_fu_738_p1;
wire   [63:0] tmp_1_9_fu_812_p1;
wire   [63:0] tmp_1_s_fu_893_p1;
wire   [63:0] tmp_1_10_fu_943_p1;
wire   [63:0] tmp_1_11_fu_1050_p1;
wire   [63:0] tmp_1_12_fu_1217_p1;
wire   [63:0] tmp_1_13_fu_1233_p1;
wire   [63:0] tmp_1_14_fu_1238_p1;
wire    ap_CS_fsm_state37;
reg    ap_block_state37;
reg    ap_block_pp0_stage18_01001;
reg    ap_block_pp0_stage19_01001;
reg    ap_block_pp0_stage20_01001;
reg    ap_block_pp0_stage21_01001;
reg    ap_block_pp0_stage22_01001;
reg    ap_block_pp0_stage23_01001;
wire    ap_block_pp0_stage24_01001;
wire    ap_block_pp0_stage25_01001;
wire    ap_block_pp0_stage26_01001;
wire    ap_block_pp0_stage27_01001;
wire    ap_block_pp0_stage28_01001;
wire    ap_block_pp0_stage29_01001;
wire    ap_block_pp0_stage30_01001;
wire    ap_block_pp0_stage31_01001;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
wire   [15:0] tmp_1_6_fu_681_p2;
wire   [15:0] y_loc_3_fu_714_p3;
wire   [15:0] tmp_3_fu_719_p2;
wire   [15:0] newSel6_fu_748_p3;
wire   [15:0] y_loc_6_fu_788_p3;
wire   [0:0] tmp6_fu_818_p2;
wire   [15:0] tmp_7_fu_837_p2;
wire   [15:0] newSel4_fu_858_p3;
wire   [15:0] newSel10_fu_864_p3;
wire   [15:0] tmp_9_fu_899_p2;
wire   [10:0] x_loc_10_fu_932_p3;
wire   [15:0] y_loc_10_fu_938_p3;
wire   [0:0] tmp_4_10_fu_949_p2;
wire   [10:0] tmp_3_10_fu_961_p2;
wire   [15:0] tmp_10_fu_955_p2;
wire   [15:0] newSel2_fu_988_p3;
wire   [10:0] tmp_3_11_fu_1012_p2;
wire   [15:0] y_loc_13_fu_1061_p3;
wire   [10:0] tmp_3_13_fu_1078_p2;
wire   [0:0] tmp_4_14_fu_1105_p2;
wire   [10:0] tmp_3_14_fu_1115_p2;
wire   [10:0] x_new_1_fu_1120_p3;
wire   [0:0] tmp3_fu_1132_p2;
wire   [0:0] tmp2_fu_1136_p2;
wire   [0:0] tmp10_fu_1146_p2;
wire   [0:0] tmp14_fu_1159_p2;
wire   [0:0] tmp13_fu_1155_p2;
wire   [0:0] tmp12_fu_1164_p2;
wire   [0:0] tmp9_fu_1150_p2;
wire   [0:0] tmp8_fu_1170_p2;
wire   [0:0] tmp1_fu_1141_p2;
wire   [15:0] tmp_14_fu_1110_p2;
wire   [15:0] newSel_fu_1182_p3;
wire   [15:0] newSel8_fu_1189_p3;
wire   [15:0] newSel12_fu_1196_p3;
reg   [33:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 src_V_data_V_0_sel_rd = 1'b0;
#0 src_V_data_V_0_sel_wr = 1'b0;
#0 src_V_data_V_0_state = 2'd0;
#0 src_V_dest_V_0_state = 2'd0;
#0 dst_V_data_V_1_sel_rd = 1'b0;
#0 dst_V_data_V_1_sel_wr = 1'b0;
#0 dst_V_data_V_1_state = 2'd0;
#0 dst_V_keep_V_1_sel_rd = 1'b0;
#0 dst_V_keep_V_1_state = 2'd0;
#0 dst_V_strb_V_1_sel_rd = 1'b0;
#0 dst_V_strb_V_1_state = 2'd0;
#0 dst_V_user_V_1_sel_rd = 1'b0;
#0 dst_V_user_V_1_state = 2'd0;
#0 dst_V_last_V_1_sel_rd = 1'b0;
#0 dst_V_last_V_1_state = 2'd0;
#0 dst_V_id_V_1_sel_rd = 1'b0;
#0 dst_V_id_V_1_state = 2'd0;
#0 dst_V_dest_V_1_sel_rd = 1'b0;
#0 dst_V_dest_V_1_state = 2'd0;
#0 x = 16'd0;
#0 y = 16'd0;
#0 ap_CS_fsm = 34'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

stream_lb_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
lb_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lb_val_0_address0),
    .ce0(lb_val_0_ce0),
    .we0(lb_val_0_we0),
    .d0(lb_val_0_d0),
    .q0(lb_val_0_q0)
);

stream_lb_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
lb_val_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lb_val_1_address0),
    .ce0(lb_val_1_ce0),
    .we0(lb_val_1_we0),
    .d0(reg_448),
    .q0(lb_val_1_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_subdone == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_data_V_1_ack_out) & (1'b1 == dst_V_data_V_1_vld_out))) begin
            dst_V_data_V_1_sel_rd <= ~dst_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_data_V_1_ack_in) & (1'b1 == dst_V_data_V_1_vld_in))) begin
            dst_V_data_V_1_sel_wr <= ~dst_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_data_V_1_state) & (1'b0 == dst_V_data_V_1_vld_in)) | ((2'd3 == dst_V_data_V_1_state) & (1'b0 == dst_V_data_V_1_vld_in) & (1'b1 == dst_V_data_V_1_ack_out)))) begin
            dst_V_data_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_data_V_1_state) & (1'b0 == dst_V_data_V_1_ack_out)) | ((2'd3 == dst_V_data_V_1_state) & (1'b0 == dst_V_data_V_1_ack_out) & (1'b1 == dst_V_data_V_1_vld_in)))) begin
            dst_V_data_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_data_V_1_vld_in) & (1'b1 == dst_V_data_V_1_ack_out)) & ~((1'b0 == dst_V_data_V_1_ack_out) & (1'b1 == dst_V_data_V_1_vld_in)) & (2'd3 == dst_V_data_V_1_state)) | ((2'd1 == dst_V_data_V_1_state) & (1'b1 == dst_V_data_V_1_ack_out)) | ((2'd2 == dst_V_data_V_1_state) & (1'b1 == dst_V_data_V_1_vld_in)))) begin
            dst_V_data_V_1_state <= 2'd3;
        end else begin
            dst_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_dest_V_1_ack_out) & (1'b1 == dst_V_dest_V_1_vld_out))) begin
            dst_V_dest_V_1_sel_rd <= ~dst_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_dest_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_dest_V_1_state) & (1'b0 == dst_V_dest_V_1_vld_in)) | ((2'd3 == dst_V_dest_V_1_state) & (1'b0 == dst_V_dest_V_1_vld_in) & (1'b1 == dst_V_dest_V_1_ack_out)))) begin
            dst_V_dest_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_dest_V_1_state) & (1'b0 == dst_V_dest_V_1_ack_out)) | ((2'd3 == dst_V_dest_V_1_state) & (1'b0 == dst_V_dest_V_1_ack_out) & (1'b1 == dst_V_dest_V_1_vld_in)))) begin
            dst_V_dest_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_dest_V_1_vld_in) & (1'b1 == dst_V_dest_V_1_ack_out)) & ~((1'b0 == dst_V_dest_V_1_ack_out) & (1'b1 == dst_V_dest_V_1_vld_in)) & (2'd3 == dst_V_dest_V_1_state)) | ((2'd1 == dst_V_dest_V_1_state) & (1'b1 == dst_V_dest_V_1_ack_out)) | ((2'd2 == dst_V_dest_V_1_state) & (1'b1 == dst_V_dest_V_1_vld_in)))) begin
            dst_V_dest_V_1_state <= 2'd3;
        end else begin
            dst_V_dest_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_id_V_1_ack_out) & (1'b1 == dst_V_id_V_1_vld_out))) begin
            dst_V_id_V_1_sel_rd <= ~dst_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_id_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_id_V_1_state) & (1'b0 == dst_V_id_V_1_vld_in)) | ((2'd3 == dst_V_id_V_1_state) & (1'b0 == dst_V_id_V_1_vld_in) & (1'b1 == dst_V_id_V_1_ack_out)))) begin
            dst_V_id_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_id_V_1_state) & (1'b0 == dst_V_id_V_1_ack_out)) | ((2'd3 == dst_V_id_V_1_state) & (1'b0 == dst_V_id_V_1_ack_out) & (1'b1 == dst_V_id_V_1_vld_in)))) begin
            dst_V_id_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_id_V_1_vld_in) & (1'b1 == dst_V_id_V_1_ack_out)) & ~((1'b0 == dst_V_id_V_1_ack_out) & (1'b1 == dst_V_id_V_1_vld_in)) & (2'd3 == dst_V_id_V_1_state)) | ((2'd1 == dst_V_id_V_1_state) & (1'b1 == dst_V_id_V_1_ack_out)) | ((2'd2 == dst_V_id_V_1_state) & (1'b1 == dst_V_id_V_1_vld_in)))) begin
            dst_V_id_V_1_state <= 2'd3;
        end else begin
            dst_V_id_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_keep_V_1_ack_out) & (1'b1 == dst_V_keep_V_1_vld_out))) begin
            dst_V_keep_V_1_sel_rd <= ~dst_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_keep_V_1_state) & (1'b0 == dst_V_keep_V_1_vld_in)) | ((2'd3 == dst_V_keep_V_1_state) & (1'b0 == dst_V_keep_V_1_vld_in) & (1'b1 == dst_V_keep_V_1_ack_out)))) begin
            dst_V_keep_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_keep_V_1_state) & (1'b0 == dst_V_keep_V_1_ack_out)) | ((2'd3 == dst_V_keep_V_1_state) & (1'b0 == dst_V_keep_V_1_ack_out) & (1'b1 == dst_V_keep_V_1_vld_in)))) begin
            dst_V_keep_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_keep_V_1_vld_in) & (1'b1 == dst_V_keep_V_1_ack_out)) & ~((1'b0 == dst_V_keep_V_1_ack_out) & (1'b1 == dst_V_keep_V_1_vld_in)) & (2'd3 == dst_V_keep_V_1_state)) | ((2'd1 == dst_V_keep_V_1_state) & (1'b1 == dst_V_keep_V_1_ack_out)) | ((2'd2 == dst_V_keep_V_1_state) & (1'b1 == dst_V_keep_V_1_vld_in)))) begin
            dst_V_keep_V_1_state <= 2'd3;
        end else begin
            dst_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_last_V_1_ack_out) & (1'b1 == dst_V_last_V_1_vld_out))) begin
            dst_V_last_V_1_sel_rd <= ~dst_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_last_V_1_state) & (1'b0 == dst_V_last_V_1_vld_in)) | ((2'd3 == dst_V_last_V_1_state) & (1'b0 == dst_V_last_V_1_vld_in) & (1'b1 == dst_V_last_V_1_ack_out)))) begin
            dst_V_last_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_last_V_1_state) & (1'b0 == dst_V_last_V_1_ack_out)) | ((2'd3 == dst_V_last_V_1_state) & (1'b0 == dst_V_last_V_1_ack_out) & (1'b1 == dst_V_last_V_1_vld_in)))) begin
            dst_V_last_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_last_V_1_vld_in) & (1'b1 == dst_V_last_V_1_ack_out)) & ~((1'b0 == dst_V_last_V_1_ack_out) & (1'b1 == dst_V_last_V_1_vld_in)) & (2'd3 == dst_V_last_V_1_state)) | ((2'd1 == dst_V_last_V_1_state) & (1'b1 == dst_V_last_V_1_ack_out)) | ((2'd2 == dst_V_last_V_1_state) & (1'b1 == dst_V_last_V_1_vld_in)))) begin
            dst_V_last_V_1_state <= 2'd3;
        end else begin
            dst_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_strb_V_1_ack_out) & (1'b1 == dst_V_strb_V_1_vld_out))) begin
            dst_V_strb_V_1_sel_rd <= ~dst_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_strb_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_strb_V_1_state) & (1'b0 == dst_V_strb_V_1_vld_in)) | ((2'd3 == dst_V_strb_V_1_state) & (1'b0 == dst_V_strb_V_1_vld_in) & (1'b1 == dst_V_strb_V_1_ack_out)))) begin
            dst_V_strb_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_strb_V_1_state) & (1'b0 == dst_V_strb_V_1_ack_out)) | ((2'd3 == dst_V_strb_V_1_state) & (1'b0 == dst_V_strb_V_1_ack_out) & (1'b1 == dst_V_strb_V_1_vld_in)))) begin
            dst_V_strb_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_strb_V_1_vld_in) & (1'b1 == dst_V_strb_V_1_ack_out)) & ~((1'b0 == dst_V_strb_V_1_ack_out) & (1'b1 == dst_V_strb_V_1_vld_in)) & (2'd3 == dst_V_strb_V_1_state)) | ((2'd1 == dst_V_strb_V_1_state) & (1'b1 == dst_V_strb_V_1_ack_out)) | ((2'd2 == dst_V_strb_V_1_state) & (1'b1 == dst_V_strb_V_1_vld_in)))) begin
            dst_V_strb_V_1_state <= 2'd3;
        end else begin
            dst_V_strb_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == dst_V_user_V_1_ack_out) & (1'b1 == dst_V_user_V_1_vld_out))) begin
            dst_V_user_V_1_sel_rd <= ~dst_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dst_V_user_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == dst_V_user_V_1_state) & (1'b0 == dst_V_user_V_1_vld_in)) | ((2'd3 == dst_V_user_V_1_state) & (1'b0 == dst_V_user_V_1_vld_in) & (1'b1 == dst_V_user_V_1_ack_out)))) begin
            dst_V_user_V_1_state <= 2'd2;
        end else if ((((2'd1 == dst_V_user_V_1_state) & (1'b0 == dst_V_user_V_1_ack_out)) | ((2'd3 == dst_V_user_V_1_state) & (1'b0 == dst_V_user_V_1_ack_out) & (1'b1 == dst_V_user_V_1_vld_in)))) begin
            dst_V_user_V_1_state <= 2'd1;
        end else if (((~((1'b0 == dst_V_user_V_1_vld_in) & (1'b1 == dst_V_user_V_1_ack_out)) & ~((1'b0 == dst_V_user_V_1_ack_out) & (1'b1 == dst_V_user_V_1_vld_in)) & (2'd3 == dst_V_user_V_1_state)) | ((2'd1 == dst_V_user_V_1_state) & (1'b1 == dst_V_user_V_1_ack_out)) | ((2'd2 == dst_V_user_V_1_state) & (1'b1 == dst_V_user_V_1_vld_in)))) begin
            dst_V_user_V_1_state <= 2'd3;
        end else begin
            dst_V_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        src_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == src_V_data_V_0_ack_out) & (1'b1 == src_V_data_V_0_vld_out))) begin
            src_V_data_V_0_sel_rd <= ~src_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        src_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == src_V_data_V_0_ack_in) & (1'b1 == src_V_data_V_0_vld_in))) begin
            src_V_data_V_0_sel_wr <= ~src_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        src_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((src_V_data_V_0_state == 2'd2) & (1'b0 == src_V_data_V_0_vld_in)) | ((src_V_data_V_0_state == 2'd3) & (1'b0 == src_V_data_V_0_vld_in) & (1'b1 == src_V_data_V_0_ack_out)))) begin
            src_V_data_V_0_state <= 2'd2;
        end else if ((((src_V_data_V_0_state == 2'd1) & (1'b0 == src_V_data_V_0_ack_out)) | ((src_V_data_V_0_state == 2'd3) & (1'b0 == src_V_data_V_0_ack_out) & (1'b1 == src_V_data_V_0_vld_in)))) begin
            src_V_data_V_0_state <= 2'd1;
        end else if (((~((1'b0 == src_V_data_V_0_vld_in) & (1'b1 == src_V_data_V_0_ack_out)) & ~((1'b0 == src_V_data_V_0_ack_out) & (1'b1 == src_V_data_V_0_vld_in)) & (src_V_data_V_0_state == 2'd3)) | ((src_V_data_V_0_state == 2'd1) & (1'b1 == src_V_data_V_0_ack_out)) | ((src_V_data_V_0_state == 2'd2) & (1'b1 == src_V_data_V_0_vld_in)))) begin
            src_V_data_V_0_state <= 2'd3;
        end else begin
            src_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        src_V_dest_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == src_V_dest_V_0_state) & (1'b0 == src_V_dest_V_0_vld_in)) | ((2'd3 == src_V_dest_V_0_state) & (1'b0 == src_V_dest_V_0_vld_in) & (1'b1 == src_V_dest_V_0_ack_out)))) begin
            src_V_dest_V_0_state <= 2'd2;
        end else if ((((2'd1 == src_V_dest_V_0_state) & (1'b0 == src_V_dest_V_0_ack_out)) | ((2'd3 == src_V_dest_V_0_state) & (1'b0 == src_V_dest_V_0_ack_out) & (1'b1 == src_V_dest_V_0_vld_in)))) begin
            src_V_dest_V_0_state <= 2'd1;
        end else if (((~((1'b0 == src_V_dest_V_0_vld_in) & (1'b1 == src_V_dest_V_0_ack_out)) & ~((1'b0 == src_V_dest_V_0_ack_out) & (1'b1 == src_V_dest_V_0_vld_in)) & (2'd3 == src_V_dest_V_0_state)) | ((2'd1 == src_V_dest_V_0_state) & (1'b1 == src_V_dest_V_0_ack_out)) | ((2'd2 == src_V_dest_V_0_state) & (1'b1 == src_V_dest_V_0_vld_in)))) begin
            src_V_dest_V_0_state <= 2'd3;
        end else begin
            src_V_dest_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        pixels_reg_432 <= pixels_1_s_reg_1269;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        pixels_reg_432 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        x_flag_reg_374 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        x_flag_reg_374 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        x_loc_reg_388 <= x_new_1_cast_reg_1860;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        x_loc_reg_388 <= x;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        y_flag_reg_398 <= y_flag_s_reg_1891;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        y_flag_reg_398 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        y_loc_reg_422 <= y_loc_15_reg_1876;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        y_loc_reg_422 <= y;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_reg_1265 <= exitcond_reg_1265;
        exitcond_reg_1265 <= exitcond_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == dst_V_data_V_1_load_A)) begin
        dst_V_data_V_1_payload_A <= dst_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == dst_V_data_V_1_load_B)) begin
        dst_V_data_V_1_payload_B <= dst_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0))) begin
        lb_val_0_addr_10_reg_1702 <= tmp_1_s_fu_893_p1;
        lb_val_1_addr_10_reg_1697 <= tmp_1_s_fu_893_p1;
        tmp_8_reg_1680 <= tmp_8_fu_876_p2;
        x_loc_s_reg_1691 <= x_loc_s_fu_887_p3;
        y_loc_9_reg_1685 <= y_loc_9_fu_881_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0))) begin
        lb_val_0_addr_11_reg_1745 <= tmp_1_10_fu_943_p1;
        lb_val_1_addr_11_reg_1740 <= tmp_1_10_fu_943_p1;
        newSel9_reg_1773 <= newSel9_fu_995_p3;
        tmp11_reg_1768 <= tmp11_fu_983_p2;
        x_loc_11_reg_1750 <= x_loc_11_fu_967_p3;
        y_loc_11_reg_1757 <= y_loc_11_fu_975_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0))) begin
        lb_val_0_addr_12_reg_1822 <= tmp_1_11_fu_1050_p1;
        lb_val_1_addr_12_reg_1817 <= tmp_1_11_fu_1050_p1;
        newSel1_reg_1855 <= newSel1_fu_1100_p3;
        tmp_13_reg_1837 <= tmp_13_fu_1072_p2;
        tmp_4_13_reg_1832 <= tmp_4_13_fu_1066_p2;
        x_loc_13_reg_1827 <= x_loc_13_fu_1055_p3;
        x_loc_14_reg_1842 <= x_loc_14_fu_1084_p3;
        y_loc_14_reg_1849 <= y_loc_14_fu_1092_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0))) begin
        lb_val_0_addr_13_reg_1886 <= tmp_1_12_fu_1217_p1;
        lb_val_1_addr_13_reg_1881 <= tmp_1_12_fu_1217_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0))) begin
        lb_val_0_addr_14_reg_1906 <= tmp_1_13_fu_1233_p1;
        lb_val_1_addr_14_reg_1901 <= tmp_1_13_fu_1233_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0))) begin
        lb_val_0_addr_15_reg_1916 <= tmp_1_14_fu_1238_p1;
        lb_val_1_addr_15_reg_1911 <= tmp_1_14_fu_1238_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        lb_val_0_addr_1_reg_1312 <= tmp_1_1_fu_530_p1;
        lb_val_1_addr_1_reg_1307 <= tmp_1_1_fu_530_p1;
        x_loc_1_reg_1301 <= x_loc_1_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        lb_val_0_addr_2_reg_1341 <= tmp_1_2_fu_552_p1;
        lb_val_1_addr_2_reg_1336 <= tmp_1_2_fu_552_p1;
        x_loc_2_reg_1330 <= x_loc_2_fu_546_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0))) begin
        lb_val_0_addr_3_reg_1369 <= tmp_1_3_fu_574_p1;
        lb_val_1_addr_3_reg_1364 <= tmp_1_3_fu_574_p1;
        x_loc_3_reg_1358 <= x_loc_3_fu_568_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        lb_val_0_addr_4_reg_1398 <= tmp_1_4_fu_596_p1;
        lb_val_1_addr_4_reg_1393 <= tmp_1_4_fu_596_p1;
        x_loc_4_reg_1387 <= x_loc_4_fu_590_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        lb_val_0_addr_5_reg_1431 <= tmp_1_5_fu_618_p1;
        lb_val_1_addr_5_reg_1426 <= tmp_1_5_fu_618_p1;
        x_loc_5_reg_1420 <= x_loc_5_fu_612_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0))) begin
        lb_val_0_addr_6_reg_1465 <= tmp_1_6_14_fu_640_p1;
        lb_val_1_addr_6_reg_1460 <= tmp_1_6_14_fu_640_p1;
        x_loc_6_reg_1454 <= x_loc_6_fu_634_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0))) begin
        lb_val_0_addr_7_reg_1509 <= tmp_1_7_fu_675_p1;
        lb_val_1_addr_7_reg_1504 <= tmp_1_7_fu_675_p1;
        tmp_s_reg_1482 <= tmp_s_fu_656_p2;
        x_loc_7_reg_1498 <= x_loc_7_fu_669_p3;
        y_loc_1_reg_1487 <= y_loc_1_fu_662_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0))) begin
        lb_val_0_addr_8_reg_1565 <= tmp_1_8_fu_738_p1;
        lb_val_1_addr_8_reg_1560 <= tmp_1_8_fu_738_p1;
        newSel11_reg_1575 <= newSel11_fu_754_p3;
        tmp4_reg_1570 <= tmp4_fu_744_p2;
        x_loc_8_reg_1554 <= x_loc_8_fu_732_p3;
        y_loc_4_reg_1543 <= y_loc_4_fu_725_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        lb_val_0_addr_9_reg_1630 <= tmp_1_9_fu_812_p1;
        lb_val_1_addr_9_reg_1625 <= tmp_1_9_fu_812_p1;
        newSel5_reg_1651 <= newSel5_fu_832_p3;
        tmp5_reg_1645 <= tmp5_fu_826_p2;
        tmp7_reg_1640 <= tmp7_fu_822_p2;
        tmp_6_reg_1608 <= tmp_6_fu_793_p2;
        x_loc_9_reg_1619 <= x_loc_9_fu_806_p3;
        y_loc_7_reg_1613 <= y_loc_7_fu_799_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        lb_val_0_addr_reg_1279 <= tmp_1_fu_503_p1;
        lb_val_1_addr_reg_1274 <= tmp_1_fu_503_p1;
        tmp_2_reg_1291 <= tmp_2_fu_515_p1;
        tmp_4_reg_1284 <= tmp_4_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0))) begin
        newSel13_reg_1675 <= newSel13_fu_870_p3;
        tmp_3_9_reg_1670 <= tmp_3_9_fu_853_p2;
        tmp_4_9_reg_1662 <= tmp_4_9_fu_848_p2;
        y_loc_8_reg_1656 <= y_loc_8_fu_842_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0))) begin
        newSel14_reg_1871 <= newSel14_fu_1203_p3;
        tmp_3_26_reg_1865 <= tmp_3_26_fu_1176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0))) begin
        newSel15_reg_1896 <= newSel15_fu_1227_p3;
        y_flag_s_reg_1891 <= y_flag_s_fu_1222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0))) begin
        newSel3_reg_1735 <= newSel3_fu_926_p3;
        tmp_3_s_reg_1730 <= tmp_3_s_fu_921_p2;
        tmp_4_s_reg_1717 <= tmp_4_s_fu_910_p2;
        tmp_s_19_reg_1724 <= tmp_s_19_fu_915_p2;
        y_loc_s_reg_1712 <= y_loc_s_fu_904_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        newSel7_reg_1538 <= newSel7_fu_708_p3;
        tmp_2_8_reg_1519 <= tmp_2_8_fu_692_p2;
        tmp_3_7_reg_1533 <= tmp_3_7_fu_703_p2;
        tmp_4_7_reg_1525 <= tmp_4_7_fu_698_p2;
        y_loc_2_reg_1514 <= y_loc_2_fu_686_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_fu_491_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        pixels_1_s_reg_1269 <= pixels_1_s_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)))) begin
        reg_448 <= lb_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        reg_453 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)))) begin
        reg_458 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)))) begin
        reg_463 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)))) begin
        reg_468 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)))) begin
        reg_473 <= src_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)))) begin
        reg_478 <= src_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == src_V_data_V_0_load_A)) begin
        src_V_data_V_0_payload_A <= src_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == src_V_data_V_0_load_B)) begin
        src_V_data_V_0_payload_B <= src_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0))) begin
        tmp_11_reg_1783 <= tmp_11_fu_1007_p2;
        tmp_12_reg_1806 <= tmp_12_fu_1038_p2;
        tmp_3_12_reg_1812 <= tmp_3_12_fu_1044_p2;
        tmp_4_11_22_reg_1778 <= tmp_4_11_22_fu_1002_p2;
        tmp_4_12_reg_1798 <= tmp_4_12_fu_1032_p2;
        x_loc_12_reg_1788 <= x_loc_12_fu_1017_p3;
        y_loc_12_reg_1793 <= y_loc_12_fu_1025_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        tmp_3_1_reg_1325 <= tmp_3_1_fu_541_p2;
        tmp_4_1_reg_1317 <= tmp_4_1_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0))) begin
        tmp_3_2_reg_1353 <= tmp_3_2_fu_563_p2;
        tmp_4_2_reg_1346 <= tmp_4_2_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        tmp_3_3_reg_1382 <= tmp_3_3_fu_585_p2;
        tmp_4_3_reg_1374 <= tmp_4_3_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        tmp_3_4_reg_1410 <= tmp_3_4_fu_607_p2;
        tmp_4_4_reg_1403 <= tmp_4_4_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0))) begin
        tmp_3_5_reg_1444 <= tmp_3_5_fu_629_p2;
        tmp_4_5_reg_1436 <= tmp_4_5_fu_624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0))) begin
        tmp_3_6_reg_1477 <= tmp_3_6_fu_651_p2;
        tmp_4_6_reg_1470 <= tmp_4_6_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0))) begin
        tmp_3_8_reg_1603 <= tmp_3_8_fu_783_p2;
        tmp_4_11_reg_1580 <= tmp_4_11_fu_761_p2;
        tmp_4_8_reg_1596 <= tmp_4_8_fu_778_p2;
        tmp_5_reg_1590 <= tmp_5_fu_772_p2;
        y_loc_5_reg_1585 <= y_loc_5_fu_766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'd0 == tmp_4_reg_1284) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        tmp_3_cast_reg_1296 <= tmp_3_cast_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        tmp_data_V_23_reg_1415 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0))) begin
        tmp_data_V_25_reg_1449 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0))) begin
        tmp_data_V_27_reg_1493 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0))) begin
        tmp_data_V_29_reg_1549 <= lb_val_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        tmp_data_V_36_reg_1635 <= src_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0))) begin
        tmp_data_V_40_reg_1707 <= src_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0))) begin
        tmp_data_V_44_reg_1763 <= src_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == dst_V_dest_V_1_ack_in) | (1'b0 == dst_V_id_V_1_ack_in) | (1'b0 == dst_V_last_V_1_ack_in) | (1'b0 == dst_V_user_V_1_ack_in) | (1'b0 == dst_V_strb_V_1_ack_in) | (1'b0 == dst_V_keep_V_1_ack_in) | (1'b0 == dst_V_data_V_1_ack_in)) & (1'd1 == x_flag_reg_374) & (1'b1 == ap_CS_fsm_state37))) begin
        x <= x_loc_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0))) begin
        x_new_1_cast_reg_1860[10 : 0] <= x_new_1_cast_fu_1128_p1[10 : 0];
        y_loc_15_reg_1876 <= y_loc_15_fu_1210_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == dst_V_dest_V_1_ack_in) | (1'b0 == dst_V_id_V_1_ack_in) | (1'b0 == dst_V_last_V_1_ack_in) | (1'b0 == dst_V_user_V_1_ack_in) | (1'b0 == dst_V_strb_V_1_ack_in) | (1'b0 == dst_V_keep_V_1_ack_in) | (1'b0 == dst_V_data_V_1_ack_in)) & (1'd1 == y_flag_reg_398) & (1'b1 == ap_CS_fsm_state37))) begin
        y <= y_new_reg_410;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        y_new_reg_410 <= newSel15_reg_1896;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_fu_491_p2)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0))) begin
        ap_phi_mux_pixels_phi_fu_436_p4 = pixels_1_s_reg_1269;
    end else begin
        ap_phi_mux_pixels_phi_fu_436_p4 = pixels_reg_432;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0))) begin
        ap_phi_mux_x_loc_phi_fu_391_p4 = x_new_1_cast_reg_1860;
    end else begin
        ap_phi_mux_x_loc_phi_fu_391_p4 = x_loc_reg_388;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0)) | ((ap_block_pp0_stage19 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage18 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0)) | ((ap_block_pp0_stage2 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0)))) begin
        dst_TDATA_blk_n = dst_V_data_V_1_state[1'd1];
    end else begin
        dst_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (ap_block_pp0_stage1_01001 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dst_V_data_V_1_data_in = lb_val_1_q0;
    end else if (((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage25_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        dst_V_data_V_1_data_in = tmp_data_V_29_reg_1549;
    end else if (((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage24_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        dst_V_data_V_1_data_in = tmp_data_V_27_reg_1493;
    end else if (((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage23_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        dst_V_data_V_1_data_in = tmp_data_V_25_reg_1449;
    end else if (((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_01001 == 1'b0))) begin
        dst_V_data_V_1_data_in = tmp_data_V_23_reg_1415;
    end else if ((((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage29_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_01001 == 1'b0)))) begin
        dst_V_data_V_1_data_in = reg_468;
    end else if ((((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage28_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_01001 == 1'b0)))) begin
        dst_V_data_V_1_data_in = reg_463;
    end else if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_01001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage31_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage27_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)))) begin
        dst_V_data_V_1_data_in = reg_458;
    end else if ((((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage0_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_01001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage30_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'd0 == exitcond_reg_1265) & (ap_block_pp0_stage26_01001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
        dst_V_data_V_1_data_in = reg_453;
    end else begin
        dst_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == dst_V_data_V_1_sel)) begin
        dst_V_data_V_1_data_out = dst_V_data_V_1_payload_B;
    end else begin
        dst_V_data_V_1_data_out = dst_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_data_V_1_vld_in = 1'b1;
    end else begin
        dst_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_dest_V_1_vld_in = 1'b1;
    end else begin
        dst_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_id_V_1_vld_in = 1'b1;
    end else begin
        dst_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_keep_V_1_vld_in = 1'b1;
    end else begin
        dst_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_last_V_1_vld_in = 1'b1;
    end else begin
        dst_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_strb_V_1_vld_in = 1'b1;
    end else begin
        dst_V_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        dst_V_user_V_1_vld_in = 1'b1;
    end else begin
        dst_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_15_reg_1916;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_14_fu_1238_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_14_reg_1906;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_13_fu_1233_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_13_reg_1886;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_12_fu_1217_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_12_reg_1822;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_11_fu_1050_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_11_reg_1745;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_10_fu_943_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_10_reg_1702;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_s_fu_893_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0))) begin
        lb_val_0_address0 = lb_val_0_addr_9_reg_1630;
    end else if (((ap_block_pp0_stage19 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = tmp_1_9_fu_812_p1;
    end else if (((ap_block_pp0_stage18 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_8_reg_1565;
    end else if (((ap_block_pp0_stage17 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = tmp_1_8_fu_738_p1;
    end else if (((ap_block_pp0_stage16 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_7_reg_1509;
    end else if (((ap_block_pp0_stage15 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = tmp_1_7_fu_675_p1;
    end else if (((ap_block_pp0_stage14 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_6_reg_1465;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_6_14_fu_640_p1;
    end else if (((ap_block_pp0_stage12 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_5_reg_1431;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_5_fu_618_p1;
    end else if (((ap_block_pp0_stage10 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_4_reg_1398;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_4_fu_596_p1;
    end else if (((ap_block_pp0_stage8 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_3_reg_1369;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_3_fu_574_p1;
    end else if (((ap_block_pp0_stage6 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_2_reg_1341;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_2_fu_552_p1;
    end else if (((ap_block_pp0_stage4 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        lb_val_0_address0 = lb_val_0_addr_1_reg_1312;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_1_fu_530_p1;
    end else if (((ap_block_pp0_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lb_val_0_address0 = lb_val_0_addr_reg_1279;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
        lb_val_0_address0 = tmp_1_fu_503_p1;
    end else begin
        lb_val_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        lb_val_0_ce0 = 1'b1;
    end else begin
        lb_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0))) begin
        lb_val_0_d0 = tmp_data_V_44_reg_1763;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28 == 1'b0))) begin
        lb_val_0_d0 = tmp_data_V_40_reg_1707;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24 == 1'b0))) begin
        lb_val_0_d0 = tmp_data_V_36_reg_1635;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0)))) begin
        lb_val_0_d0 = reg_478;
    end else if ((((ap_block_pp0_stage18 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage16 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0)))) begin
        lb_val_0_d0 = reg_473;
    end else if ((((ap_block_pp0_stage14 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage12 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage10 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage8 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage6 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage4 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lb_val_0_d0 = src_V_data_V_0_data_out;
    end else begin
        lb_val_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)))) begin
        lb_val_0_we0 = 1'b1;
    end else begin
        lb_val_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_15_reg_1911;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_14_reg_1901;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_13_reg_1881;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_12_reg_1817;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_11_reg_1740;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_10_reg_1697;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_9_reg_1625;
    end else if ((((ap_block_pp0_stage19 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage18 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0)))) begin
        lb_val_1_address0 = lb_val_1_addr_8_reg_1560;
    end else if ((((ap_block_pp0_stage17 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage16 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0)))) begin
        lb_val_1_address0 = lb_val_1_addr_7_reg_1504;
    end else if ((((ap_block_pp0_stage15 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage14 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0)))) begin
        lb_val_1_address0 = lb_val_1_addr_6_reg_1460;
    end else if ((((ap_block_pp0_stage12 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_5_reg_1426;
    end else if ((((ap_block_pp0_stage10 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_4_reg_1393;
    end else if ((((ap_block_pp0_stage8 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_3_reg_1364;
    end else if ((((ap_block_pp0_stage6 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_2_reg_1336;
    end else if ((((ap_block_pp0_stage4 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0)))) begin
        lb_val_1_address0 = lb_val_1_addr_1_reg_1307;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0)) | ((ap_block_pp0_stage2 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lb_val_1_address0 = lb_val_1_addr_reg_1274;
    end else begin
        lb_val_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        lb_val_1_ce0 = 1'b1;
    end else begin
        lb_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_11001 == 1'b0)))) begin
        lb_val_1_we0 = 1'b1;
    end else begin
        lb_val_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage19 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage18 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage17 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage16 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage15 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage14 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage12 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage10 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage8 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage6 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_block_pp0_stage4 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0)) | ((ap_block_pp0_stage2 == 1'b0) & (1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        src_TDATA_blk_n = src_V_data_V_0_state[1'd0];
    end else begin
        src_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)))) begin
        src_V_data_V_0_ack_out = 1'b1;
    end else begin
        src_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == src_V_data_V_0_sel)) begin
        src_V_data_V_0_data_out = src_V_data_V_0_payload_B;
    end else begin
        src_V_data_V_0_data_out = src_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'd0 == exitcond_reg_1265) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)))) begin
        src_V_dest_V_0_ack_out = 1'b1;
    end else begin
        src_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'd1 == exitcond_fu_491_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (ap_block_pp0_stage0_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'd1 == exitcond_fu_491_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_subdone == 1'b0)) & (ap_block_pp0_stage2_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage2_subdone == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((ap_block_pp0_stage10_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((ap_block_pp0_stage11_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((ap_block_pp0_stage12_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((ap_block_pp0_stage13_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((ap_block_pp0_stage14_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((ap_block_pp0_stage15_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((ap_block_pp0_stage16_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((ap_block_pp0_stage17_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((ap_block_pp0_stage18_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((ap_block_pp0_stage19_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((ap_block_pp0_stage20_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((ap_block_pp0_stage21_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((ap_block_pp0_stage22_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((ap_block_pp0_stage23_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((ap_block_pp0_stage24_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((ap_block_pp0_stage25_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((ap_block_pp0_stage26_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((ap_block_pp0_stage27_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((ap_block_pp0_stage28_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((ap_block_pp0_stage29_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((ap_block_pp0_stage30_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((ap_block_pp0_stage31_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state37 : begin
            if ((~((1'b0 == dst_V_dest_V_1_ack_in) | (1'b0 == dst_V_id_V_1_ack_in) | (1'b0 == dst_V_last_V_1_ack_in) | (1'b0 == dst_V_user_V_1_ack_in) | (1'b0 == dst_V_strb_V_1_ack_in) | (1'b0 == dst_V_keep_V_1_ack_in) | (1'b0 == dst_V_data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd33];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state34_io) & (1'b1 == ap_enable_reg_pp0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state34_io) & (1'b1 == ap_enable_reg_pp0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state20_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state20_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state21_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state21_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_block_state35_io) & (1'b1 == ap_enable_reg_pp0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_block_state35_io) & (1'b1 == ap_enable_reg_pp0_iter1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state22_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state22_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state23_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state23_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state24_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state24_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state25_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & ((1'b1 == ap_block_state25_io) | ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out))));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((1'b1 == ap_block_state26_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((1'b1 == ap_block_state26_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((1'b1 == ap_block_state27_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((1'b1 == ap_block_state27_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((1'b1 == ap_block_state28_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((1'b1 == ap_block_state28_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((1'b1 == ap_block_state29_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((1'b1 == ap_block_state29_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((1'b1 == ap_block_state30_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((1'b1 == ap_block_state30_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((1'b1 == ap_block_state31_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((1'b1 == ap_block_state31_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_block_state36_io) & (1'b1 == ap_enable_reg_pp0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_block_state36_io) & (1'b1 == ap_enable_reg_pp0_iter1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((1'b1 == ap_block_state32_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((1'b1 == ap_block_state32_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((1'b1 == ap_block_state33_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((1'b1 == ap_block_state33_io) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state20_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state20_pp0_stage18_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state21_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state21_pp0_stage19_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state22_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state22_pp0_stage20_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state23_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state23_pp0_stage21_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state24_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state24_pp0_stage22_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state25_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state25_pp0_stage23_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

always @ (*) begin
    ap_block_state26_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state27_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state28_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state29_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state30_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state31_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state32_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state33_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_io = ((1'd0 == exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state34_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state35_io = ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state35_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_io = ((1'd0 == ap_reg_pp0_iter1_exitcond_reg_1265) & (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state36_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37 = ((1'b0 == dst_V_dest_V_1_ack_in) | (1'b0 == dst_V_id_V_1_ack_in) | (1'b0 == dst_V_last_V_1_ack_in) | (1'b0 == dst_V_user_V_1_ack_in) | (1'b0 == dst_V_strb_V_1_ack_in) | (1'b0 == dst_V_keep_V_1_ack_in) | (1'b0 == dst_V_data_V_1_ack_in));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = ((1'd0 == exitcond_reg_1265) & (1'b0 == src_V_data_V_0_vld_out));
end

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dst_TDATA = dst_V_data_V_1_data_out;

assign dst_TDEST = dst_V_dest_V_1_data_out;

assign dst_TID = dst_V_id_V_1_data_out;

assign dst_TKEEP = dst_V_keep_V_1_data_out;

assign dst_TLAST = dst_V_last_V_1_data_out;

assign dst_TSTRB = dst_V_strb_V_1_data_out;

assign dst_TUSER = dst_V_user_V_1_data_out;

assign dst_TVALID = dst_V_dest_V_1_state[1'd0];

assign dst_V_data_V_1_ack_in = dst_V_data_V_1_state[1'd1];

assign dst_V_data_V_1_ack_out = dst_TREADY;

assign dst_V_data_V_1_load_A = (~dst_V_data_V_1_sel_wr & dst_V_data_V_1_state_cmp_full);

assign dst_V_data_V_1_load_B = (dst_V_data_V_1_state_cmp_full & dst_V_data_V_1_sel_wr);

assign dst_V_data_V_1_sel = dst_V_data_V_1_sel_rd;

assign dst_V_data_V_1_state_cmp_full = ((dst_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign dst_V_data_V_1_vld_out = dst_V_data_V_1_state[1'd0];

assign dst_V_dest_V_1_ack_in = dst_V_dest_V_1_state[1'd1];

assign dst_V_dest_V_1_ack_out = dst_TREADY;

assign dst_V_dest_V_1_data_out = 1'd0;

assign dst_V_dest_V_1_sel = dst_V_dest_V_1_sel_rd;

assign dst_V_dest_V_1_vld_out = dst_V_dest_V_1_state[1'd0];

assign dst_V_id_V_1_ack_in = dst_V_id_V_1_state[1'd1];

assign dst_V_id_V_1_ack_out = dst_TREADY;

assign dst_V_id_V_1_data_out = 1'd0;

assign dst_V_id_V_1_sel = dst_V_id_V_1_sel_rd;

assign dst_V_id_V_1_vld_out = dst_V_id_V_1_state[1'd0];

assign dst_V_keep_V_1_ack_in = dst_V_keep_V_1_state[1'd1];

assign dst_V_keep_V_1_ack_out = dst_TREADY;

assign dst_V_keep_V_1_data_out = 4'd0;

assign dst_V_keep_V_1_sel = dst_V_keep_V_1_sel_rd;

assign dst_V_keep_V_1_vld_out = dst_V_keep_V_1_state[1'd0];

assign dst_V_last_V_1_ack_in = dst_V_last_V_1_state[1'd1];

assign dst_V_last_V_1_ack_out = dst_TREADY;

assign dst_V_last_V_1_data_out = 1'd0;

assign dst_V_last_V_1_sel = dst_V_last_V_1_sel_rd;

assign dst_V_last_V_1_vld_out = dst_V_last_V_1_state[1'd0];

assign dst_V_strb_V_1_ack_in = dst_V_strb_V_1_state[1'd1];

assign dst_V_strb_V_1_ack_out = dst_TREADY;

assign dst_V_strb_V_1_data_out = 4'd0;

assign dst_V_strb_V_1_sel = dst_V_strb_V_1_sel_rd;

assign dst_V_strb_V_1_vld_out = dst_V_strb_V_1_state[1'd0];

assign dst_V_user_V_1_ack_in = dst_V_user_V_1_state[1'd1];

assign dst_V_user_V_1_ack_out = dst_TREADY;

assign dst_V_user_V_1_data_out = 1'd0;

assign dst_V_user_V_1_sel = dst_V_user_V_1_sel_rd;

assign dst_V_user_V_1_vld_out = dst_V_user_V_1_state[1'd0];

assign exitcond_fu_491_p2 = ((ap_phi_mux_pixels_phi_fu_436_p4 == 20'd921600) ? 1'b1 : 1'b0);

assign newSel10_fu_864_p3 = ((tmp7_reg_1640[0:0] === 1'b1) ? newSel4_fu_858_p3 : newSel5_reg_1651);

assign newSel11_fu_754_p3 = ((tmp4_fu_744_p2[0:0] === 1'b1) ? newSel6_fu_748_p3 : newSel7_reg_1538);

assign newSel12_fu_1196_p3 = ((tmp12_fu_1164_p2[0:0] === 1'b1) ? newSel8_fu_1189_p3 : newSel9_reg_1773);

assign newSel13_fu_870_p3 = ((tmp5_reg_1645[0:0] === 1'b1) ? newSel10_fu_864_p3 : newSel11_reg_1575);

assign newSel14_fu_1203_p3 = ((tmp8_fu_1170_p2[0:0] === 1'b1) ? newSel12_fu_1196_p3 : newSel13_reg_1675);

assign newSel15_fu_1227_p3 = ((tmp_3_26_reg_1865[0:0] === 1'b1) ? newSel14_reg_1871 : y_new_reg_410);

assign newSel1_fu_1100_p3 = ((tmp_4_12_reg_1798[0:0] === 1'b1) ? tmp_12_reg_1806 : tmp_11_reg_1783);

assign newSel2_fu_988_p3 = ((tmp_4_10_fu_949_p2[0:0] === 1'b1) ? tmp_10_fu_955_p2 : tmp_s_19_reg_1724);

assign newSel3_fu_926_p3 = ((tmp_4_9_reg_1662[0:0] === 1'b1) ? tmp_9_fu_899_p2 : tmp_8_reg_1680);

assign newSel4_fu_858_p3 = ((tmp_4_7_reg_1525[0:0] === 1'b1) ? tmp_7_fu_837_p2 : tmp_6_reg_1608);

assign newSel5_fu_832_p3 = ((tmp_4_5_reg_1436[0:0] === 1'b1) ? tmp_5_reg_1590 : tmp_4_11_reg_1580);

assign newSel6_fu_748_p3 = ((tmp_4_3_reg_1374[0:0] === 1'b1) ? tmp_3_fu_719_p2 : tmp_2_8_reg_1519);

assign newSel7_fu_708_p3 = ((tmp_4_1_reg_1317[0:0] === 1'b1) ? tmp_1_6_fu_681_p2 : tmp_s_reg_1482);

assign newSel8_fu_1189_p3 = ((tmp14_fu_1159_p2[0:0] === 1'b1) ? newSel_fu_1182_p3 : newSel1_reg_1855);

assign newSel9_fu_995_p3 = ((tmp11_fu_983_p2[0:0] === 1'b1) ? newSel2_fu_988_p3 : newSel3_reg_1735);

assign newSel_fu_1182_p3 = ((tmp_4_14_fu_1105_p2[0:0] === 1'b1) ? tmp_14_fu_1110_p2 : tmp_13_reg_1837);

assign pixels_1_s_fu_497_p2 = (20'd16 + ap_phi_mux_pixels_phi_fu_436_p4);

assign src_TREADY = src_V_dest_V_0_state[1'd1];

assign src_V_data_V_0_ack_in = src_V_data_V_0_state[1'd1];

assign src_V_data_V_0_load_A = (src_V_data_V_0_state_cmp_full & ~src_V_data_V_0_sel_wr);

assign src_V_data_V_0_load_B = (src_V_data_V_0_state_cmp_full & src_V_data_V_0_sel_wr);

assign src_V_data_V_0_sel = src_V_data_V_0_sel_rd;

assign src_V_data_V_0_state_cmp_full = ((src_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign src_V_data_V_0_vld_in = src_TVALID;

assign src_V_data_V_0_vld_out = src_V_data_V_0_state[1'd0];

assign src_V_dest_V_0_vld_in = src_TVALID;

assign tmp10_fu_1146_p2 = (tmp_4_9_reg_1662 | tmp_4_8_reg_1596);

assign tmp11_fu_983_p2 = (tmp_4_s_reg_1717 | tmp_4_10_fu_949_p2);

assign tmp12_fu_1164_p2 = (tmp14_fu_1159_p2 | tmp13_fu_1155_p2);

assign tmp13_fu_1155_p2 = (tmp_4_12_reg_1798 | tmp_4_11_22_reg_1778);

assign tmp14_fu_1159_p2 = (tmp_4_14_fu_1105_p2 | tmp_4_13_reg_1832);

assign tmp1_fu_1141_p2 = (tmp5_reg_1645 | tmp2_fu_1136_p2);

assign tmp2_fu_1136_p2 = (tmp4_reg_1570 | tmp3_fu_1132_p2);

assign tmp3_fu_1132_p2 = (tmp_4_reg_1284 | tmp_4_1_reg_1317);

assign tmp4_fu_744_p2 = (tmp_4_3_reg_1374 | tmp_4_2_reg_1346);

assign tmp5_fu_826_p2 = (tmp7_fu_822_p2 | tmp6_fu_818_p2);

assign tmp6_fu_818_p2 = (tmp_4_5_reg_1436 | tmp_4_4_reg_1403);

assign tmp7_fu_822_p2 = (tmp_4_7_reg_1525 | tmp_4_6_reg_1470);

assign tmp8_fu_1170_p2 = (tmp9_fu_1150_p2 | tmp12_fu_1164_p2);

assign tmp9_fu_1150_p2 = (tmp11_reg_1768 | tmp10_fu_1146_p2);

assign tmp_10_fu_955_p2 = (16'd1 + y_loc_10_fu_938_p3);

assign tmp_11_fu_1007_p2 = (16'd1 + y_loc_11_reg_1757);

assign tmp_12_fu_1038_p2 = (16'd1 + y_loc_12_fu_1025_p3);

assign tmp_13_fu_1072_p2 = (16'd1 + y_loc_13_fu_1061_p3);

assign tmp_14_fu_1110_p2 = (16'd1 + y_loc_14_reg_1849);

assign tmp_1_10_fu_943_p1 = x_loc_10_fu_932_p3;

assign tmp_1_11_fu_1050_p1 = x_loc_11_reg_1750;

assign tmp_1_12_fu_1217_p1 = x_loc_12_reg_1788;

assign tmp_1_13_fu_1233_p1 = x_loc_13_reg_1827;

assign tmp_1_14_fu_1238_p1 = x_loc_14_reg_1842;

assign tmp_1_1_fu_530_p1 = x_loc_1_fu_524_p3;

assign tmp_1_2_fu_552_p1 = x_loc_2_fu_546_p3;

assign tmp_1_3_fu_574_p1 = x_loc_3_fu_568_p3;

assign tmp_1_4_fu_596_p1 = x_loc_4_fu_590_p3;

assign tmp_1_5_fu_618_p1 = x_loc_5_fu_612_p3;

assign tmp_1_6_14_fu_640_p1 = x_loc_6_fu_634_p3;

assign tmp_1_6_fu_681_p2 = (16'd1 + y_loc_1_reg_1487);

assign tmp_1_7_fu_675_p1 = x_loc_7_fu_669_p3;

assign tmp_1_8_fu_738_p1 = x_loc_8_fu_732_p3;

assign tmp_1_9_fu_812_p1 = x_loc_9_fu_806_p3;

assign tmp_1_fu_503_p1 = ap_phi_mux_x_loc_phi_fu_391_p4;

assign tmp_1_s_fu_893_p1 = x_loc_s_fu_887_p3;

assign tmp_2_8_fu_692_p2 = (16'd1 + y_loc_2_fu_686_p3);

assign tmp_2_fu_515_p1 = ap_phi_mux_x_loc_phi_fu_391_p4[10:0];

assign tmp_3_10_fu_961_p2 = (11'd1 + x_loc_10_fu_932_p3);

assign tmp_3_11_fu_1012_p2 = (11'd1 + x_loc_11_reg_1750);

assign tmp_3_12_fu_1044_p2 = (11'd1 + x_loc_12_fu_1017_p3);

assign tmp_3_13_fu_1078_p2 = (11'd1 + x_loc_13_fu_1055_p3);

assign tmp_3_14_fu_1115_p2 = (11'd1 + x_loc_14_reg_1842);

assign tmp_3_1_fu_541_p2 = (11'd1 + x_loc_1_reg_1301);

assign tmp_3_26_fu_1176_p2 = (tmp8_fu_1170_p2 | tmp1_fu_1141_p2);

assign tmp_3_2_fu_563_p2 = (11'd1 + x_loc_2_reg_1330);

assign tmp_3_3_fu_585_p2 = (11'd1 + x_loc_3_reg_1358);

assign tmp_3_4_fu_607_p2 = (11'd1 + x_loc_4_reg_1387);

assign tmp_3_5_fu_629_p2 = (11'd1 + x_loc_5_reg_1420);

assign tmp_3_6_fu_651_p2 = (11'd1 + x_loc_6_reg_1454);

assign tmp_3_7_fu_703_p2 = (11'd1 + x_loc_7_reg_1498);

assign tmp_3_8_fu_783_p2 = (11'd1 + x_loc_8_reg_1554);

assign tmp_3_9_fu_853_p2 = (11'd1 + x_loc_9_reg_1619);

assign tmp_3_cast_fu_519_p2 = (11'd1 + tmp_2_reg_1291);

assign tmp_3_fu_719_p2 = (16'd1 + y_loc_3_fu_714_p3);

assign tmp_3_s_fu_921_p2 = (11'd1 + x_loc_s_reg_1691);

assign tmp_4_10_fu_949_p2 = ((x_loc_10_fu_932_p3 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_11_22_fu_1002_p2 = ((x_loc_11_reg_1750 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_11_fu_761_p2 = (16'd1 + y_loc_4_reg_1543);

assign tmp_4_12_fu_1032_p2 = ((x_loc_12_fu_1017_p3 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_13_fu_1066_p2 = ((x_loc_13_fu_1055_p3 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_14_fu_1105_p2 = ((x_loc_14_reg_1842 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_1_fu_536_p2 = ((x_loc_1_reg_1301 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_2_fu_558_p2 = ((x_loc_2_reg_1330 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_3_fu_580_p2 = ((x_loc_3_reg_1358 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_4_fu_602_p2 = ((x_loc_4_reg_1387 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_5_fu_624_p2 = ((x_loc_5_reg_1420 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_6_fu_646_p2 = ((x_loc_6_reg_1454 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_7_fu_698_p2 = ((x_loc_7_reg_1498 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_8_fu_778_p2 = ((x_loc_8_reg_1554 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_9_fu_848_p2 = ((x_loc_9_reg_1619 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_4_fu_509_p2 = ((ap_phi_mux_x_loc_phi_fu_391_p4 > 16'd1278) ? 1'b1 : 1'b0);

assign tmp_4_s_fu_910_p2 = ((x_loc_s_reg_1691 > 11'd1278) ? 1'b1 : 1'b0);

assign tmp_5_fu_772_p2 = (16'd1 + y_loc_5_fu_766_p3);

assign tmp_6_fu_793_p2 = (16'd1 + y_loc_6_fu_788_p3);

assign tmp_7_fu_837_p2 = (16'd1 + y_loc_7_reg_1613);

assign tmp_8_fu_876_p2 = (16'd1 + y_loc_8_reg_1656);

assign tmp_9_fu_899_p2 = (16'd1 + y_loc_9_reg_1685);

assign tmp_s_19_fu_915_p2 = (16'd1 + y_loc_s_fu_904_p3);

assign tmp_s_fu_656_p2 = (16'd1 + y_loc_reg_422);

assign x_loc_10_fu_932_p3 = ((tmp_4_s_reg_1717[0:0] === 1'b1) ? 11'd0 : tmp_3_s_reg_1730);

assign x_loc_11_fu_967_p3 = ((tmp_4_10_fu_949_p2[0:0] === 1'b1) ? 11'd0 : tmp_3_10_fu_961_p2);

assign x_loc_12_fu_1017_p3 = ((tmp_4_11_22_fu_1002_p2[0:0] === 1'b1) ? 11'd0 : tmp_3_11_fu_1012_p2);

assign x_loc_13_fu_1055_p3 = ((tmp_4_12_reg_1798[0:0] === 1'b1) ? 11'd0 : tmp_3_12_reg_1812);

assign x_loc_14_fu_1084_p3 = ((tmp_4_13_fu_1066_p2[0:0] === 1'b1) ? 11'd0 : tmp_3_13_fu_1078_p2);

assign x_loc_1_fu_524_p3 = ((tmp_4_reg_1284[0:0] === 1'b1) ? 11'd0 : tmp_3_cast_reg_1296);

assign x_loc_2_fu_546_p3 = ((tmp_4_1_reg_1317[0:0] === 1'b1) ? 11'd0 : tmp_3_1_reg_1325);

assign x_loc_3_fu_568_p3 = ((tmp_4_2_reg_1346[0:0] === 1'b1) ? 11'd0 : tmp_3_2_reg_1353);

assign x_loc_4_fu_590_p3 = ((tmp_4_3_reg_1374[0:0] === 1'b1) ? 11'd0 : tmp_3_3_reg_1382);

assign x_loc_5_fu_612_p3 = ((tmp_4_4_reg_1403[0:0] === 1'b1) ? 11'd0 : tmp_3_4_reg_1410);

assign x_loc_6_fu_634_p3 = ((tmp_4_5_reg_1436[0:0] === 1'b1) ? 11'd0 : tmp_3_5_reg_1444);

assign x_loc_7_fu_669_p3 = ((tmp_4_6_reg_1470[0:0] === 1'b1) ? 11'd0 : tmp_3_6_reg_1477);

assign x_loc_8_fu_732_p3 = ((tmp_4_7_reg_1525[0:0] === 1'b1) ? 11'd0 : tmp_3_7_reg_1533);

assign x_loc_9_fu_806_p3 = ((tmp_4_8_reg_1596[0:0] === 1'b1) ? 11'd0 : tmp_3_8_reg_1603);

assign x_loc_s_fu_887_p3 = ((tmp_4_9_reg_1662[0:0] === 1'b1) ? 11'd0 : tmp_3_9_reg_1670);

assign x_new_1_cast_fu_1128_p1 = x_new_1_fu_1120_p3;

assign x_new_1_fu_1120_p3 = ((tmp_4_14_fu_1105_p2[0:0] === 1'b1) ? 11'd0 : tmp_3_14_fu_1115_p2);

assign y_flag_s_fu_1222_p2 = (y_flag_reg_398 | tmp_3_26_reg_1865);

assign y_loc_10_fu_938_p3 = ((tmp_4_s_reg_1717[0:0] === 1'b1) ? tmp_s_19_reg_1724 : y_loc_s_reg_1712);

assign y_loc_11_fu_975_p3 = ((tmp_4_10_fu_949_p2[0:0] === 1'b1) ? tmp_10_fu_955_p2 : y_loc_10_fu_938_p3);

assign y_loc_12_fu_1025_p3 = ((tmp_4_11_22_fu_1002_p2[0:0] === 1'b1) ? tmp_11_fu_1007_p2 : y_loc_11_reg_1757);

assign y_loc_13_fu_1061_p3 = ((tmp_4_12_reg_1798[0:0] === 1'b1) ? tmp_12_reg_1806 : y_loc_12_reg_1793);

assign y_loc_14_fu_1092_p3 = ((tmp_4_13_fu_1066_p2[0:0] === 1'b1) ? tmp_13_fu_1072_p2 : y_loc_13_fu_1061_p3);

assign y_loc_15_fu_1210_p3 = ((tmp_4_14_fu_1105_p2[0:0] === 1'b1) ? tmp_14_fu_1110_p2 : y_loc_14_reg_1849);

assign y_loc_1_fu_662_p3 = ((tmp_4_reg_1284[0:0] === 1'b1) ? tmp_s_fu_656_p2 : y_loc_reg_422);

assign y_loc_2_fu_686_p3 = ((tmp_4_1_reg_1317[0:0] === 1'b1) ? tmp_1_6_fu_681_p2 : y_loc_1_reg_1487);

assign y_loc_3_fu_714_p3 = ((tmp_4_2_reg_1346[0:0] === 1'b1) ? tmp_2_8_reg_1519 : y_loc_2_reg_1514);

assign y_loc_4_fu_725_p3 = ((tmp_4_3_reg_1374[0:0] === 1'b1) ? tmp_3_fu_719_p2 : y_loc_3_fu_714_p3);

assign y_loc_5_fu_766_p3 = ((tmp_4_4_reg_1403[0:0] === 1'b1) ? tmp_4_11_fu_761_p2 : y_loc_4_reg_1543);

assign y_loc_6_fu_788_p3 = ((tmp_4_5_reg_1436[0:0] === 1'b1) ? tmp_5_reg_1590 : y_loc_5_reg_1585);

assign y_loc_7_fu_799_p3 = ((tmp_4_6_reg_1470[0:0] === 1'b1) ? tmp_6_fu_793_p2 : y_loc_6_fu_788_p3);

assign y_loc_8_fu_842_p3 = ((tmp_4_7_reg_1525[0:0] === 1'b1) ? tmp_7_fu_837_p2 : y_loc_7_reg_1613);

assign y_loc_9_fu_881_p3 = ((tmp_4_8_reg_1596[0:0] === 1'b1) ? tmp_8_fu_876_p2 : y_loc_8_reg_1656);

assign y_loc_s_fu_904_p3 = ((tmp_4_9_reg_1662[0:0] === 1'b1) ? tmp_9_fu_899_p2 : y_loc_9_reg_1685);

always @ (posedge ap_clk) begin
    x_new_1_cast_reg_1860[15:11] <= 5'b00000;
end

endmodule //stream
