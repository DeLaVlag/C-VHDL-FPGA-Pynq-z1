-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;

entity stream_top is
    generic (
        RESET_ACTIVE_LOW :  integer := 1
    );
    port (
        aresetn : in  std_logic;
        aclk : in  std_logic;
        src_TDATA : in  std_logic_vector(32 - 1 downto 0);
        src_TKEEP : in  std_logic_vector(4 - 1 downto 0);
        src_TSTRB : in  std_logic_vector(4 - 1 downto 0);
        src_TUSER : in  std_logic_vector(1 - 1 downto 0);
        src_TLAST : in  std_logic_vector(1 - 1 downto 0);
        src_TID : in  std_logic_vector(1 - 1 downto 0);
        src_TVALID : in  std_logic;
        src_TREADY : out  std_logic;
        src_TDEST : in  std_logic_vector(1 - 1 downto 0);
        dst_TDATA : out  std_logic_vector(32 - 1 downto 0);
        dst_TKEEP : out  std_logic_vector(4 - 1 downto 0);
        dst_TSTRB : out  std_logic_vector(4 - 1 downto 0);
        dst_TUSER : out  std_logic_vector(1 - 1 downto 0);
        dst_TLAST : out  std_logic_vector(1 - 1 downto 0);
        dst_TID : out  std_logic_vector(1 - 1 downto 0);
        dst_TVALID : out  std_logic;
        dst_TREADY : in  std_logic;
        dst_TDEST : out  std_logic_vector(1 - 1 downto 0)
    );

-- attributes begin
-- attributes end
end entity;

architecture behav of stream_top is
    component stream is
        port (
            ap_rst_n : in  std_logic;
            ap_clk : in  std_logic;
            src_TDATA : in  std_logic_vector(32 - 1 downto 0);
            src_TKEEP : in  std_logic_vector(4 - 1 downto 0);
            src_TSTRB : in  std_logic_vector(4 - 1 downto 0);
            src_TUSER : in  std_logic_vector(1 - 1 downto 0);
            src_TLAST : in  std_logic_vector(1 - 1 downto 0);
            src_TID : in  std_logic_vector(1 - 1 downto 0);
            src_TVALID : in  std_logic;
            src_TREADY : out  std_logic;
            src_TDEST : in  std_logic_vector(1 - 1 downto 0);
            dst_TDATA : out  std_logic_vector(32 - 1 downto 0);
            dst_TKEEP : out  std_logic_vector(4 - 1 downto 0);
            dst_TSTRB : out  std_logic_vector(4 - 1 downto 0);
            dst_TUSER : out  std_logic_vector(1 - 1 downto 0);
            dst_TLAST : out  std_logic_vector(1 - 1 downto 0);
            dst_TID : out  std_logic_vector(1 - 1 downto 0);
            dst_TVALID : out  std_logic;
            dst_TREADY : in  std_logic;
            dst_TDEST : out  std_logic_vector(1 - 1 downto 0)
        );
    end component;

    component stream_ap_rst_n_if is
        generic (
            RESET_ACTIVE_LOW :  integer);
        port (
            dout :  out std_logic;
            din :  in std_logic);
    end component;

    signal sig_stream_ap_rst_n :  std_logic;

    signal sig_stream_src_TUSER :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_src_TLAST :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_src_TID :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_src_TDEST :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_dst_TUSER :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_dst_TLAST :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_dst_TID :  std_logic_vector(1 - 1 downto 0);
    signal sig_stream_dst_TDEST :  std_logic_vector(1 - 1 downto 0);
begin
    stream_U  : component stream
        port map (
            ap_rst_n => sig_stream_ap_rst_n,
            ap_clk => aclk,
            src_TDATA => src_TDATA,
            src_TKEEP => src_TKEEP,
            src_TSTRB => src_TSTRB,
            src_TUSER => src_TUSER,
            src_TLAST => src_TLAST,
            src_TID => src_TID,
            src_TVALID => src_TVALID,
            src_TREADY => src_TREADY,
            src_TDEST => src_TDEST,
            dst_TDATA => dst_TDATA,
            dst_TKEEP => dst_TKEEP,
            dst_TSTRB => dst_TSTRB,
            dst_TUSER => dst_TUSER,
            dst_TLAST => dst_TLAST,
            dst_TID => dst_TID,
            dst_TVALID => dst_TVALID,
            dst_TREADY => dst_TREADY,
            dst_TDEST => dst_TDEST
        );

    ap_rst_n_if_U : component stream_ap_rst_n_if
        generic map (
            RESET_ACTIVE_LOW => RESET_ACTIVE_LOW)
        port map (
            dout => sig_stream_ap_rst_n,
            din => aresetn);

end architecture;

