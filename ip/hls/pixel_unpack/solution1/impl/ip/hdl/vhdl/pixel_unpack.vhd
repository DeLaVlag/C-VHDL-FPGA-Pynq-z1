-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pixel_unpack is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    control : IN STD_LOGIC;
    ap_rst_n_control : IN STD_LOGIC );
end;


architecture behav of pixel_unpack is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pixel_unpack,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.877000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=239,HLS_SYN_LUT=201}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_pp4_stg0_fsm_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_pp4_stg1_fsm_12 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_pp4_stg2_fsm_13 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_pp4_stg3_fsm_14 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_st18_fsm_15 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal mode : STD_LOGIC_VECTOR (31 downto 0);
    signal mode_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mode_0_vld_reg : STD_LOGIC := '0';
    signal mode_0_ack_out : STD_LOGIC;
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp4_stg0_fsm_11 : STD_LOGIC;
    signal ap_sig_66 : BOOLEAN;
    signal ap_reg_ppiten_pp4_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp4_it1 : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_pp4_stg1_fsm_12 : STD_LOGIC;
    signal ap_sig_78 : BOOLEAN;
    signal ap_sig_cseq_ST_pp4_stg2_fsm_13 : STD_LOGIC;
    signal ap_sig_87 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_96 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_104 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_120 : BOOLEAN;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp4_stg3_fsm_14 : STD_LOGIC;
    signal ap_sig_129 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_144 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_152 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_160 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_169 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_178 : BOOLEAN;
    signal ap_rst_n_control_inv : STD_LOGIC;
    signal reg_181 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_ioackin_out_stream_TREADY : STD_LOGIC;
    signal grp_fu_151_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_185 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_189 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_193 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_136_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_2_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_1_reg_347 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_360_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_360_2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_264_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_reg_366 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_4_reg_371_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_4_reg_371_2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_268_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_377 : STD_LOGIC_VECTOR (15 downto 0);
    signal last_9_2_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_9_2_reg_382 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_309_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_387 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_3_reg_392 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_281 : BOOLEAN;
    signal grp_read_fu_96_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_201_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_14_1_fu_210_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_8_fu_225_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_8_1_fu_230_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_6_fu_239_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_6_1_fu_244_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_6_2_fu_249_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_6_3_fu_254_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_fu_259_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_3_1_fu_323_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_3_2_fu_331_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal has_user_V_2_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ioackin_out_stream_TREADY : STD_LOGIC := '0';
    signal tmp_12_fu_197_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_221_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_235_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_15 : STD_LOGIC;
    signal ap_sig_544 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);

    component pixel_unpack_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        mode : OUT STD_LOGIC_VECTOR (31 downto 0);
        clk : IN STD_LOGIC;
        rst : IN STD_LOGIC );
    end component;



begin
    pixel_unpack_AXILiteS_s_axi_U : component pixel_unpack_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        mode => mode,
        clk => control,
        rst => ap_rst_n_control_inv);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_out_stream_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_out_stream_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and ((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))))) then 
                    ap_reg_ioackin_out_stream_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = out_stream_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = out_stream_TREADY)))) then 
                    ap_reg_ioackin_out_stream_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp4_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) and not((last_9_2_reg_382 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv32_0 = grp_read_fu_96_p2))) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp4_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_reg_ppiten_pp4_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv32_0 = grp_read_fu_96_p2))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    mode_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))))) then
                empty_4_reg_371_1 <= in_stream_TUSER;
                empty_4_reg_371_2 <= in_stream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))))) then
                empty_reg_360_1 <= in_stream_TUSER;
                empty_reg_360_2 <= in_stream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then
                last_1_reg_347 <= in_stream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then
                last_2_reg_342 <= in_stream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and ((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))))) then
                last_9_2_reg_382 <= last_9_2_fu_303_p2;
                p_Result_3_3_reg_392 <= in_stream_TDATA(31 downto 8);
                tmp_6_reg_387 <= tmp_6_fu_309_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then
                last_reg_352 <= in_stream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = mode_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = mode_0_vld_reg) and (ap_const_logic_1 = mode_0_ack_out)))) then
                mode_0_data_reg <= mode;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))))) then
                reg_181 <= in_stream_TDATA(15 downto 8);
                reg_189 <= in_stream_TDATA(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))))) then
                reg_185 <= in_stream_TDATA(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))))) then
                reg_193 <= in_stream_TDATA(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))))) then
                tmp_2_reg_366 <= tmp_2_fu_264_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))))) then
                tmp_4_reg_377 <= tmp_4_fu_268_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (in_stream_TVALID, ap_CS_fsm, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_ioackin_out_stream_TREADY, grp_fu_136_p1, last_2_reg_342, last_1_reg_347, last_reg_352, grp_read_fu_96_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st2_fsm_1 => 
                if ((not((ap_const_lv32_0 = grp_read_fu_96_p2)) and not((ap_const_lv32_1 = grp_read_fu_96_p2)) and not((ap_const_lv32_2 = grp_read_fu_96_p2)) and not((ap_const_lv32_3 = grp_read_fu_96_p2)) and not((ap_const_lv32_4 = grp_read_fu_96_p2)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                elsif ((ap_const_lv32_0 = grp_read_fu_96_p2)) then
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_11;
                elsif ((ap_const_lv32_1 = grp_read_fu_96_p2)) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                elsif ((ap_const_lv32_2 = grp_read_fu_96_p2)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                elsif ((ap_const_lv32_3 = grp_read_fu_96_p2)) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if ((not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)) and (last_2_reg_342 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                elsif ((not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)) and not((last_2_reg_342 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                if ((not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)) and (last_1_reg_347 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                elsif ((not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)) and not((last_1_reg_347 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                if ((not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)) and (last_reg_352 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                elsif ((not((ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)) and not((last_reg_352 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                if ((not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) and (grp_fu_136_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                elsif ((not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))) and not((grp_fu_136_p1 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_pp4_stg0_fsm_11 => 
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then
                    ap_NS_fsm <= ap_ST_pp4_stg1_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_11;
                end if;
            when ap_ST_pp4_stg1_fsm_12 => 
                if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it0)))))) then
                    ap_NS_fsm <= ap_ST_pp4_stg2_fsm_13;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp4_it0)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg1_fsm_12;
                end if;
            when ap_ST_pp4_stg2_fsm_13 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and ((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) then
                    ap_NS_fsm <= ap_ST_pp4_stg3_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg2_fsm_13;
                end if;
            when ap_ST_pp4_stg3_fsm_14 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) then
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg3_fsm_14;
                end if;
            when ap_ST_st18_fsm_15 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_rst_n_control_inv_assign_proc : process(ap_rst_n_control)
    begin
                ap_rst_n_control_inv <= not(ap_rst_n_control);
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_104_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_104 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_120_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_120 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_129_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_129 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_144_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_144 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_152_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_152 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_160_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_160 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_169_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_169 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_178_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_178 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_281_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_281 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_544_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_544 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_66_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_66 <= (ap_CS_fsm(11 downto 11) = ap_const_lv1_1);
    end process;


    ap_sig_78_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_78 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_87_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_87 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_96_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_96 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_cseq_ST_pp4_stg0_fsm_11_assign_proc : process(ap_sig_66)
    begin
        if (ap_sig_66) then 
            ap_sig_cseq_ST_pp4_stg0_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg0_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp4_stg1_fsm_12_assign_proc : process(ap_sig_78)
    begin
        if (ap_sig_78) then 
            ap_sig_cseq_ST_pp4_stg1_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg1_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp4_stg2_fsm_13_assign_proc : process(ap_sig_87)
    begin
        if (ap_sig_87) then 
            ap_sig_cseq_ST_pp4_stg2_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg2_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp4_stg3_fsm_14_assign_proc : process(ap_sig_129)
    begin
        if (ap_sig_129) then 
            ap_sig_cseq_ST_pp4_stg3_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg3_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_160)
    begin
        if (ap_sig_160) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_96)
    begin
        if (ap_sig_96) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_15_assign_proc : process(ap_sig_544)
    begin
        if (ap_sig_544) then 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_281)
    begin
        if (ap_sig_281) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_120)
    begin
        if (ap_sig_120) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_178)
    begin
        if (ap_sig_178) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_169)
    begin
        if (ap_sig_169) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_104)
    begin
        if (ap_sig_104) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_144)
    begin
        if (ap_sig_144) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_152)
    begin
        if (ap_sig_152) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_out_stream_TREADY_assign_proc : process(out_stream_TREADY, ap_reg_ioackin_out_stream_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) then 
            ap_sig_ioackin_out_stream_TREADY <= out_stream_TREADY;
        else 
            ap_sig_ioackin_out_stream_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_136_p1 <= in_stream_TLAST;
    grp_fu_151_p4 <= in_stream_TDATA(31 downto 24);
    grp_read_fu_96_p2 <= mode_0_data_reg;
    has_user_V_2_fu_290_p2 <= (tmp4_fu_284_p2 or empty_reg_360_1);

    in_stream_TDATA_blk_n_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_TREADY_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, ap_sig_ioackin_out_stream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and ((in_stream_TVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_out_stream_TREADY))))))) then 
            in_stream_TREADY <= ap_const_logic_1;
        else 
            in_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    last_9_2_fu_303_p2 <= (tmp5_fu_297_p2 or empty_reg_360_2);

    mode_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st18_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_15)) then 
            mode_0_ack_out <= ap_const_logic_1;
        else 
            mode_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    out_stream_TDATA_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp4_stg3_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, tmp_2_reg_366, p_Result_3_3_reg_392, p_Result_2_fu_201_p3, p_Result_14_1_fu_210_p4, p_Result_8_fu_225_p1, p_Result_8_1_fu_230_p1, p_Result_6_fu_239_p1, p_Result_6_1_fu_244_p1, p_Result_6_2_fu_249_p1, p_Result_6_3_fu_254_p1, tmp_9_fu_259_p1, p_Result_3_1_fu_323_p3, p_Result_3_2_fu_331_p3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))))) then 
            out_stream_TDATA <= p_Result_3_3_reg_392;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))))) then 
            out_stream_TDATA <= p_Result_3_2_fu_331_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14))) then 
            out_stream_TDATA <= p_Result_3_1_fu_323_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))))) then 
            out_stream_TDATA <= tmp_2_reg_366;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((in_stream_TVALID = ap_const_logic_0)))) then 
            out_stream_TDATA <= tmp_9_fu_259_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_stream_TDATA <= p_Result_6_3_fu_254_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            out_stream_TDATA <= p_Result_6_2_fu_249_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            out_stream_TDATA <= p_Result_6_1_fu_244_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((in_stream_TVALID = ap_const_logic_0)))) then 
            out_stream_TDATA <= p_Result_6_fu_239_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_stream_TDATA <= p_Result_8_1_fu_230_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_stream_TVALID = ap_const_logic_0)))) then 
            out_stream_TDATA <= p_Result_8_fu_225_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            out_stream_TDATA <= p_Result_14_1_fu_210_p4;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((in_stream_TVALID = ap_const_logic_0)))) then 
            out_stream_TDATA <= p_Result_2_fu_201_p3;
        else 
            out_stream_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_stream_TDATA_blk_n_assign_proc : process(out_stream_TREADY, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp4_stg3_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12)) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_stream_TLAST_assign_proc : process(in_stream_TVALID, in_stream_TLAST, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp4_stg3_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, last_2_reg_342, last_1_reg_347, last_reg_352, last_9_2_reg_382)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))))) then 
            out_stream_TLAST <= last_9_2_reg_382;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((in_stream_TVALID = ap_const_logic_0)))) then 
            out_stream_TLAST <= in_stream_TLAST;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_stream_TLAST <= last_reg_352;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_stream_TLAST <= last_1_reg_347;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            out_stream_TLAST <= last_2_reg_342;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14)) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)))))) then 
            out_stream_TLAST <= ap_const_lv1_0;
        else 
            out_stream_TLAST <= "X";
        end if; 
    end process;


    out_stream_TUSER_assign_proc : process(in_stream_TVALID, in_stream_TUSER, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp4_stg3_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, has_user_V_2_fu_290_p2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))))) then 
            out_stream_TUSER <= has_user_V_2_fu_290_p2;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14)) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0)))))) then 
            out_stream_TUSER <= ap_const_lv1_0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((in_stream_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((in_stream_TVALID = ap_const_logic_0))))) then 
            out_stream_TUSER <= in_stream_TUSER;
        else 
            out_stream_TUSER <= "X";
        end if; 
    end process;


    out_stream_TVALID_assign_proc : process(in_stream_TVALID, ap_sig_cseq_ST_pp4_stg0_fsm_11, ap_reg_ppiten_pp4_it0, ap_reg_ppiten_pp4_it1, ap_sig_cseq_ST_pp4_stg1_fsm_12, ap_sig_cseq_ST_pp4_stg2_fsm_13, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp4_stg3_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, ap_reg_ioackin_out_stream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((in_stream_TVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg2_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg3_fsm_14) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg1_fsm_12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and (in_stream_TVALID = ap_const_logic_0))) and (ap_const_logic_0 = ap_reg_ioackin_out_stream_TREADY)))) then 
            out_stream_TVALID <= ap_const_logic_1;
        else 
            out_stream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_14_1_fu_210_p4 <= ((reg_185 & reg_181) & reg_189);
    p_Result_2_fu_201_p3 <= (grp_fu_151_p4 & tmp_12_fu_197_p1);
    p_Result_3_1_fu_323_p3 <= (tmp_4_reg_377 & reg_185);
    p_Result_3_2_fu_331_p3 <= (tmp_6_reg_387 & reg_193);
    p_Result_6_1_fu_244_p1 <= std_logic_vector(resize(unsigned(reg_181),24));
    p_Result_6_2_fu_249_p1 <= std_logic_vector(resize(unsigned(reg_189),24));
    p_Result_6_3_fu_254_p1 <= std_logic_vector(resize(unsigned(reg_185),24));
    p_Result_6_fu_239_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_235_p1),24));
    p_Result_8_1_fu_230_p1 <= std_logic_vector(resize(unsigned(reg_193),24));
    p_Result_8_fu_225_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_221_p1),24));
    tmp4_fu_284_p2 <= (empty_4_reg_371_1 or in_stream_TUSER);
    tmp5_fu_297_p2 <= (empty_4_reg_371_2 or in_stream_TLAST);
    tmp_10_fu_235_p1 <= in_stream_TDATA(8 - 1 downto 0);
    tmp_11_fu_221_p1 <= in_stream_TDATA(16 - 1 downto 0);
    tmp_12_fu_197_p1 <= in_stream_TDATA(16 - 1 downto 0);
    tmp_2_fu_264_p1 <= in_stream_TDATA(24 - 1 downto 0);
    tmp_4_fu_268_p1 <= in_stream_TDATA(16 - 1 downto 0);
    tmp_6_fu_309_p1 <= in_stream_TDATA(8 - 1 downto 0);
    tmp_9_fu_259_p1 <= in_stream_TDATA(24 - 1 downto 0);
end behav;
