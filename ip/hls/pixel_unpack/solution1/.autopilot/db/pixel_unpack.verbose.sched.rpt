

================================================================
== Vivado HLS Report for 'pixel_unpack'
================================================================
* Date:           Sun Oct 15 10:20:15 2017

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        pixel_unpack
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   7.00|      2.88|        0.88|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         6|          4|          4|     ?|    yes   |
        |- Loop 2  |    ?|    ?|         1|          1|          1|     ?|    yes   |
        |- Loop 3  |    ?|    ?|         4|          4|          4|     ?|    yes   |
        |- Loop 4  |    ?|    ?|         2|          2|          2|     ?|    yes   |
        |- Loop 5  |    ?|    ?|         2|          2|          2|     ?|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 2
  * Pipeline-1: initiation interval (II) = 2, depth = 2
  * Pipeline-2: initiation interval (II) = 4, depth = 4
  * Pipeline-3: initiation interval (II) = 1, depth = 1
  * Pipeline-4: initiation interval (II) = 4, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 18
* Pipeline: 5
  Pipeline-0: II = 2, D = 2, States = { 3 4 }
  Pipeline-1: II = 2, D = 2, States = { 5 6 }
  Pipeline-2: II = 4, D = 4, States = { 7 8 9 10 }
  Pipeline-3: II = 1, D = 1, States = { 11 }
  Pipeline-4: II = 4, D = 6, States = { 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (mode_read == 4)
	5  / (mode_read == 3)
	7  / (mode_read == 2)
	11  / (mode_read == 1)
	12  / (mode_read == 0)
	18  / (mode_read != 0 & mode_read != 1 & mode_read != 2 & mode_read != 3 & mode_read != 4)
3 --> 
	4  / true
4 --> 
	18  / (last_2)
	3  / (!last_2)
5 --> 
	6  / true
6 --> 
	18  / (last_1)
	5  / (!last_1)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	18  / (last)
	7  / (!last)
11 --> 
	18  / (in_stream_last_V_val3)
	11  / (!in_stream_last_V_val3)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / (last_9_2)
	12  / (!last_9_2)
18 --> 
* FSM state operations: 

 <State 1>: 1.00ns
ST_1: mode_read [2/2] 1.00ns
:0  %mode_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %mode)


 <State 2>: 2.88ns
ST_2: mode_read [1/2] 1.00ns
:0  %mode_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %mode)

ST_2: stg_21 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %in_stream_data_V), !map !57

ST_2: stg_22 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_stream_user_V), !map !63

ST_2: stg_23 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_stream_last_V), !map !67

ST_2: stg_24 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i24* %out_stream_data_V), !map !71

ST_2: stg_25 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_stream_user_V), !map !77

ST_2: stg_26 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_stream_last_V), !map !81

ST_2: stg_27 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mode), !map !85

ST_2: stg_28 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @pixel_unpack_str) nounwind

ST_2: stg_29 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: stg_30 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @p_str2, [1 x i8]* @p_str1) nounwind

ST_2: stg_31 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface(i32 %mode, [10 x i8]* @p_str3, i32 1, i32 1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: stg_32 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecInterface(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V, [5 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 24, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: stg_33 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, [5 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 96, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: stg_34 [1/1] 1.88ns
:14  switch i32 %mode_read, label %.loopexit [
    i32 0, label %.preheader512.preheader
    i32 1, label %.preheader510
    i32 2, label %.preheader508
    i32 3, label %.preheader504
    i32 4, label %.preheader
  ]


 <State 3>: 0.00ns
ST_3: empty_13 [1/1] 0.00ns
.preheader:2  %empty_13 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_3: data_V_2 [1/1] 0.00ns
.preheader:3  %data_V_2 = extractvalue { i32, i1, i1 } %empty_13, 0

ST_3: user_V_2 [1/1] 0.00ns
.preheader:4  %user_V_2 = extractvalue { i32, i1, i1 } %empty_13, 1

ST_3: last_2 [1/1] 0.00ns
.preheader:5  %last_2 = extractvalue { i32, i1, i1 } %empty_13, 2

ST_3: p_Result_s [1/1] 0.00ns
.preheader:6  %p_Result_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V_2, i32 8, i32 15)

ST_3: p_Result_1 [1/1] 0.00ns
.preheader:7  %p_Result_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V_2, i32 24, i32 31)

ST_3: tmp_12 [1/1] 0.00ns
.preheader:8  %tmp_12 = trunc i32 %data_V_2 to i16

ST_3: p_Result_2 [1/1] 0.00ns
.preheader:9  %p_Result_2 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %p_Result_1, i16 %tmp_12)

ST_3: stg_43 [1/1] 0.00ns
.preheader:10  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_2, i1 %user_V_2, i1 false)

ST_3: p_Result_9_1 [1/1] 0.00ns
.preheader:11  %p_Result_9_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V_2, i32 16, i32 23)


 <State 4>: 0.00ns
ST_4: tmp_1 [1/1] 0.00ns
.preheader:0  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str10)

ST_4: stg_46 [1/1] 0.00ns
.preheader:1  call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_4: p_Result_14_1 [1/1] 0.00ns
.preheader:12  %p_Result_14_1 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %p_Result_1, i8 %p_Result_s, i8 %p_Result_9_1)

ST_4: stg_48 [1/1] 0.00ns
.preheader:13  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_14_1, i1 false, i1 %last_2)

ST_4: empty_14 [1/1] 0.00ns
.preheader:14  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str10, i32 %tmp_1)

ST_4: stg_50 [1/1] 0.00ns
.preheader:15  br i1 %last_2, label %.loopexit, label %.preheader


 <State 5>: 0.00ns
ST_5: empty_11 [1/1] 0.00ns
.preheader504:2  %empty_11 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_5: data_V_1 [1/1] 0.00ns
.preheader504:3  %data_V_1 = extractvalue { i32, i1, i1 } %empty_11, 0

ST_5: user_V_1 [1/1] 0.00ns
.preheader504:4  %user_V_1 = extractvalue { i32, i1, i1 } %empty_11, 1

ST_5: last_1 [1/1] 0.00ns
.preheader504:5  %last_1 = extractvalue { i32, i1, i1 } %empty_11, 2

ST_5: tmp_11 [1/1] 0.00ns
.preheader504:6  %tmp_11 = trunc i32 %data_V_1 to i16

ST_5: p_Result_8 [1/1] 0.00ns
.preheader504:7  %p_Result_8 = zext i16 %tmp_11 to i24

ST_5: stg_57 [1/1] 0.00ns
.preheader504:8  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_8, i1 %user_V_1, i1 false)

ST_5: p_Result_7_1 [1/1] 0.00ns
.preheader504:9  %p_Result_7_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %data_V_1, i32 16, i32 31)


 <State 6>: 0.00ns
ST_6: tmp_s [1/1] 0.00ns
.preheader504:0  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9)

ST_6: stg_60 [1/1] 0.00ns
.preheader504:1  call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_6: p_Result_8_1 [1/1] 0.00ns
.preheader504:10  %p_Result_8_1 = zext i16 %p_Result_7_1 to i24

ST_6: stg_62 [1/1] 0.00ns
.preheader504:11  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_8_1, i1 false, i1 %last_1)

ST_6: empty_12 [1/1] 0.00ns
.preheader504:12  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_s)

ST_6: stg_64 [1/1] 0.00ns
.preheader504:13  br i1 %last_1, label %.loopexit, label %.preheader504


 <State 7>: 0.00ns
ST_7: empty_9 [1/1] 0.00ns
.preheader508:2  %empty_9 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_7: data_V [1/1] 0.00ns
.preheader508:3  %data_V = extractvalue { i32, i1, i1 } %empty_9, 0

ST_7: user_V [1/1] 0.00ns
.preheader508:4  %user_V = extractvalue { i32, i1, i1 } %empty_9, 1

ST_7: last [1/1] 0.00ns
.preheader508:5  %last = extractvalue { i32, i1, i1 } %empty_9, 2

ST_7: tmp_10 [1/1] 0.00ns
.preheader508:6  %tmp_10 = trunc i32 %data_V to i8

ST_7: p_Result_6 [1/1] 0.00ns
.preheader508:7  %p_Result_6 = zext i8 %tmp_10 to i24

ST_7: stg_71 [1/1] 0.00ns
.preheader508:8  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_6, i1 %user_V, i1 false)

ST_7: p_Result_5_1 [1/1] 0.00ns
.preheader508:9  %p_Result_5_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V, i32 8, i32 15)

ST_7: p_Result_5_2 [1/1] 0.00ns
.preheader508:12  %p_Result_5_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V, i32 16, i32 23)

ST_7: p_Result_5_3 [1/1] 0.00ns
.preheader508:15  %p_Result_5_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V, i32 24, i32 31)


 <State 8>: 0.00ns
ST_8: p_Result_6_1 [1/1] 0.00ns
.preheader508:10  %p_Result_6_1 = zext i8 %p_Result_5_1 to i24

ST_8: stg_76 [1/1] 0.00ns
.preheader508:11  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_6_1, i1 false, i1 false)


 <State 9>: 0.00ns
ST_9: p_Result_6_2 [1/1] 0.00ns
.preheader508:13  %p_Result_6_2 = zext i8 %p_Result_5_2 to i24

ST_9: stg_78 [1/1] 0.00ns
.preheader508:14  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_6_2, i1 false, i1 false)


 <State 10>: 0.00ns
ST_10: tmp_8 [1/1] 0.00ns
.preheader508:0  %tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8)

ST_10: stg_80 [1/1] 0.00ns
.preheader508:1  call void (...)* @_ssdm_op_SpecPipeline(i32 4, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_10: p_Result_6_3 [1/1] 0.00ns
.preheader508:16  %p_Result_6_3 = zext i8 %p_Result_5_3 to i24

ST_10: stg_82 [1/1] 0.00ns
.preheader508:17  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_6_3, i1 false, i1 %last)

ST_10: empty_10 [1/1] 0.00ns
.preheader508:18  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_8)

ST_10: stg_84 [1/1] 0.00ns
.preheader508:19  br i1 %last, label %.loopexit, label %.preheader508


 <State 11>: 0.00ns
ST_11: tmp_7 [1/1] 0.00ns
.preheader510:0  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_11: stg_86 [1/1] 0.00ns
.preheader510:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_11: empty_7 [1/1] 0.00ns
.preheader510:2  %empty_7 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_11: p_Val2_s [1/1] 0.00ns
.preheader510:3  %p_Val2_s = extractvalue { i32, i1, i1 } %empty_7, 0

ST_11: in_stream_user_V_val3 [1/1] 0.00ns
.preheader510:4  %in_stream_user_V_val3 = extractvalue { i32, i1, i1 } %empty_7, 1

ST_11: in_stream_last_V_val3 [1/1] 0.00ns
.preheader510:5  %in_stream_last_V_val3 = extractvalue { i32, i1, i1 } %empty_7, 2

ST_11: tmp_9 [1/1] 0.00ns
.preheader510:6  %tmp_9 = trunc i32 %p_Val2_s to i24

ST_11: stg_92 [1/1] 0.00ns
.preheader510:7  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %tmp_9, i1 %in_stream_user_V_val3, i1 %in_stream_last_V_val3)

ST_11: empty_8 [1/1] 0.00ns
.preheader510:8  %empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_7)

ST_11: stg_94 [1/1] 0.00ns
.preheader510:9  br i1 %in_stream_last_V_val3, label %.loopexit, label %.preheader510


 <State 12>: 0.00ns
ST_12: empty [1/1] 0.00ns
.preheader512.preheader:2  %empty = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_12: in_stream_data_V_val [1/1] 0.00ns
.preheader512.preheader:3  %in_stream_data_V_val = extractvalue { i32, i1, i1 } %empty, 0

ST_12: tmp_2 [1/1] 0.00ns
.preheader512.preheader:18  %tmp_2 = trunc i32 %in_stream_data_V_val to i24

ST_12: tmp_3 [1/1] 0.00ns
.preheader512.preheader:20  %tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %in_stream_data_V_val, i32 24, i32 31)


 <State 13>: 0.00ns
ST_13: empty_4 [1/1] 0.00ns
.preheader512.preheader:6  %empty_4 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_13: in_stream_data_V_val1 [1/1] 0.00ns
.preheader512.preheader:7  %in_stream_data_V_val1 = extractvalue { i32, i1, i1 } %empty_4, 0

ST_13: tmp_4 [1/1] 0.00ns
.preheader512.preheader:21  %tmp_4 = trunc i32 %in_stream_data_V_val1 to i16

ST_13: tmp_5 [1/1] 0.00ns
.preheader512.preheader:24  %tmp_5 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %in_stream_data_V_val1, i32 16, i32 31)


 <State 14>: 1.37ns
ST_14: in_stream_user_V_val [1/1] 0.00ns (grouped into LUT with out node has_user_V_2)
.preheader512.preheader:4  %in_stream_user_V_val = extractvalue { i32, i1, i1 } %empty, 1

ST_14: in_stream_last_V_val [1/1] 0.00ns (grouped into LUT with out node last_9_2)
.preheader512.preheader:5  %in_stream_last_V_val = extractvalue { i32, i1, i1 } %empty, 2

ST_14: in_stream_user_V_val1 [1/1] 0.00ns (grouped into LUT with out node has_user_V_2)
.preheader512.preheader:8  %in_stream_user_V_val1 = extractvalue { i32, i1, i1 } %empty_4, 1

ST_14: in_stream_last_V_val1 [1/1] 0.00ns (grouped into LUT with out node last_9_2)
.preheader512.preheader:9  %in_stream_last_V_val1 = extractvalue { i32, i1, i1 } %empty_4, 2

ST_14: empty_5 [1/1] 0.00ns
.preheader512.preheader:10  %empty_5 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %in_stream_data_V, i1* %in_stream_user_V, i1* %in_stream_last_V)

ST_14: in_stream_data_V_val2 [1/1] 0.00ns
.preheader512.preheader:11  %in_stream_data_V_val2 = extractvalue { i32, i1, i1 } %empty_5, 0

ST_14: in_stream_user_V_val2 [1/1] 0.00ns (grouped into LUT with out node has_user_V_2)
.preheader512.preheader:12  %in_stream_user_V_val2 = extractvalue { i32, i1, i1 } %empty_5, 1

ST_14: in_stream_last_V_val2 [1/1] 0.00ns (grouped into LUT with out node last_9_2)
.preheader512.preheader:13  %in_stream_last_V_val2 = extractvalue { i32, i1, i1 } %empty_5, 2

ST_14: tmp4 [1/1] 0.00ns (grouped into LUT with out node has_user_V_2)
.preheader512.preheader:14  %tmp4 = or i1 %in_stream_user_V_val1, %in_stream_user_V_val2

ST_14: has_user_V_2 [1/1] 1.37ns (out node of the LUT)
.preheader512.preheader:15  %has_user_V_2 = or i1 %tmp4, %in_stream_user_V_val

ST_14: tmp5 [1/1] 0.00ns (grouped into LUT with out node last_9_2)
.preheader512.preheader:16  %tmp5 = or i1 %in_stream_last_V_val1, %in_stream_last_V_val2

ST_14: last_9_2 [1/1] 1.37ns (out node of the LUT)
.preheader512.preheader:17  %last_9_2 = or i1 %tmp5, %in_stream_last_V_val

ST_14: stg_115 [1/1] 0.00ns
.preheader512.preheader:19  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %tmp_2, i1 %has_user_V_2, i1 false)

ST_14: tmp_6 [1/1] 0.00ns
.preheader512.preheader:25  %tmp_6 = trunc i32 %in_stream_data_V_val2 to i8

ST_14: p_Result_3_3 [1/1] 0.00ns
.preheader512.preheader:28  %p_Result_3_3 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %in_stream_data_V_val2, i32 8, i32 31)


 <State 15>: 0.00ns
ST_15: p_Result_3_1 [1/1] 0.00ns
.preheader512.preheader:22  %p_Result_3_1 = call i24 @_ssdm_op_BitConcatenate.i24.i16.i8(i16 %tmp_4, i8 %tmp_3)

ST_15: stg_119 [1/1] 0.00ns
.preheader512.preheader:23  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_3_1, i1 false, i1 false)


 <State 16>: 0.00ns
ST_16: p_Result_3_2 [1/1] 0.00ns
.preheader512.preheader:26  %p_Result_3_2 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %tmp_6, i16 %tmp_5)

ST_16: stg_121 [1/1] 0.00ns
.preheader512.preheader:27  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_3_2, i1 false, i1 false)


 <State 17>: 0.00ns
ST_17: tmp [1/1] 0.00ns
.preheader512.preheader:0  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_17: stg_123 [1/1] 0.00ns
.preheader512.preheader:1  call void (...)* @_ssdm_op_SpecPipeline(i32 4, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_17: stg_124 [1/1] 0.00ns
.preheader512.preheader:29  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_stream_data_V, i1* %out_stream_user_V, i1* %out_stream_last_V, i24 %p_Result_3_3, i1 false, i1 %last_9_2)

ST_17: empty_6 [1/1] 0.00ns
.preheader512.preheader:30  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp)

ST_17: stg_126 [1/1] 0.00ns
.preheader512.preheader:31  br i1 %last_9_2, label %.loopexit, label %.preheader512.preheader


 <State 18>: 0.00ns
ST_18: stg_127 [1/1] 0.00ns
.loopexit:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
