// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pixel_unpack.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pixel_unpack::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pixel_unpack::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> pixel_unpack::ap_ST_st1_fsm_0 = "1";
const sc_lv<16> pixel_unpack::ap_ST_st2_fsm_1 = "10";
const sc_lv<16> pixel_unpack::ap_ST_st3_fsm_2 = "100";
const sc_lv<16> pixel_unpack::ap_ST_st4_fsm_3 = "1000";
const sc_lv<16> pixel_unpack::ap_ST_st5_fsm_4 = "10000";
const sc_lv<16> pixel_unpack::ap_ST_st6_fsm_5 = "100000";
const sc_lv<16> pixel_unpack::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<16> pixel_unpack::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<16> pixel_unpack::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<16> pixel_unpack::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<16> pixel_unpack::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<16> pixel_unpack::ap_ST_pp4_stg0_fsm_11 = "100000000000";
const sc_lv<16> pixel_unpack::ap_ST_pp4_stg1_fsm_12 = "1000000000000";
const sc_lv<16> pixel_unpack::ap_ST_pp4_stg2_fsm_13 = "10000000000000";
const sc_lv<16> pixel_unpack::ap_ST_pp4_stg3_fsm_14 = "100000000000000";
const sc_lv<16> pixel_unpack::ap_ST_st18_fsm_15 = "1000000000000000";
const sc_lv<32> pixel_unpack::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pixel_unpack::ap_const_lv32_B = "1011";
const sc_lv<1> pixel_unpack::ap_const_lv1_1 = "1";
const sc_lv<32> pixel_unpack::ap_const_lv32_C = "1100";
const sc_lv<32> pixel_unpack::ap_const_lv32_D = "1101";
const sc_lv<32> pixel_unpack::ap_const_lv32_A = "1010";
const sc_lv<32> pixel_unpack::ap_const_lv32_6 = "110";
const sc_lv<32> pixel_unpack::ap_const_lv32_4 = "100";
const sc_lv<32> pixel_unpack::ap_const_lv32_2 = "10";
const sc_lv<32> pixel_unpack::ap_const_lv32_E = "1110";
const sc_lv<32> pixel_unpack::ap_const_lv32_7 = "111";
const sc_lv<32> pixel_unpack::ap_const_lv32_8 = "1000";
const sc_lv<32> pixel_unpack::ap_const_lv32_9 = "1001";
const sc_lv<32> pixel_unpack::ap_const_lv32_5 = "101";
const sc_lv<32> pixel_unpack::ap_const_lv32_3 = "11";
const int pixel_unpack::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> pixel_unpack::ap_const_lv32_1 = "1";
const sc_lv<1> pixel_unpack::ap_const_lv1_0 = "0";
const sc_lv<32> pixel_unpack::ap_const_lv32_F = "1111";
const sc_lv<32> pixel_unpack::ap_const_lv32_18 = "11000";
const sc_lv<32> pixel_unpack::ap_const_lv32_1F = "11111";
const sc_lv<32> pixel_unpack::ap_const_lv32_10 = "10000";
const sc_lv<32> pixel_unpack::ap_const_lv32_17 = "10111";

pixel_unpack::pixel_unpack(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pixel_unpack_AXILiteS_s_axi_U = new pixel_unpack_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("pixel_unpack_AXILiteS_s_axi_U");
    pixel_unpack_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    pixel_unpack_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    pixel_unpack_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    pixel_unpack_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    pixel_unpack_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    pixel_unpack_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    pixel_unpack_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    pixel_unpack_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    pixel_unpack_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    pixel_unpack_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    pixel_unpack_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    pixel_unpack_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    pixel_unpack_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    pixel_unpack_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    pixel_unpack_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    pixel_unpack_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    pixel_unpack_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    pixel_unpack_AXILiteS_s_axi_U->ACLK(ap_clk);
    pixel_unpack_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    pixel_unpack_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    pixel_unpack_AXILiteS_s_axi_U->mode(mode);
    pixel_unpack_AXILiteS_s_axi_U->clk(control);
    pixel_unpack_AXILiteS_s_axi_U->rst(ap_rst_n_control_inv);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_rst_n_control_inv);
    sensitive << ( ap_rst_n_control );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_104);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_129);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_144);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_152);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_160);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_169);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_178);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_281);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_544);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp4_stg0_fsm_11);
    sensitive << ( ap_sig_66 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp4_stg1_fsm_12);
    sensitive << ( ap_sig_78 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp4_stg2_fsm_13);
    sensitive << ( ap_sig_87 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp4_stg3_fsm_14);
    sensitive << ( ap_sig_129 );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_160 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_96 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_15);
    sensitive << ( ap_sig_544 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_281 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_120 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_178 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_112 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_169 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_104 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_144 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_152 );

    SC_METHOD(thread_ap_sig_ioackin_out_stream_TREADY);
    sensitive << ( out_stream_TREADY );
    sensitive << ( ap_reg_ioackin_out_stream_TREADY );

    SC_METHOD(thread_grp_fu_136_p1);
    sensitive << ( in_stream_TLAST );

    SC_METHOD(thread_grp_fu_151_p4);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_grp_read_fu_96_p2);
    sensitive << ( mode_0_data_reg );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_has_user_V_2_fu_290_p2);
    sensitive << ( empty_reg_360_1 );
    sensitive << ( tmp4_fu_284_p2 );

    SC_METHOD(thread_in_stream_TDATA_blk_n);
    sensitive << ( in_stream_TVALID );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_in_stream_TREADY);
    sensitive << ( in_stream_TVALID );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_ioackin_out_stream_TREADY );

    SC_METHOD(thread_last_9_2_fu_303_p2);
    sensitive << ( empty_reg_360_2 );
    sensitive << ( tmp5_fu_297_p2 );

    SC_METHOD(thread_mode_0_ack_out);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_15 );

    SC_METHOD(thread_out_stream_TDATA);
    sensitive << ( in_stream_TVALID );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg3_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_2_reg_366 );
    sensitive << ( p_Result_3_3_reg_392 );
    sensitive << ( p_Result_2_fu_201_p3 );
    sensitive << ( p_Result_14_1_fu_210_p4 );
    sensitive << ( p_Result_8_fu_225_p1 );
    sensitive << ( p_Result_8_1_fu_230_p1 );
    sensitive << ( p_Result_6_fu_239_p1 );
    sensitive << ( p_Result_6_1_fu_244_p1 );
    sensitive << ( p_Result_6_2_fu_249_p1 );
    sensitive << ( p_Result_6_3_fu_254_p1 );
    sensitive << ( tmp_9_fu_259_p1 );
    sensitive << ( p_Result_3_1_fu_323_p3 );
    sensitive << ( p_Result_3_2_fu_331_p3 );

    SC_METHOD(thread_out_stream_TDATA_blk_n);
    sensitive << ( out_stream_TREADY );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg3_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_out_stream_TLAST);
    sensitive << ( in_stream_TVALID );
    sensitive << ( in_stream_TLAST );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg3_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( last_2_reg_342 );
    sensitive << ( last_1_reg_347 );
    sensitive << ( last_reg_352 );
    sensitive << ( last_9_2_reg_382 );

    SC_METHOD(thread_out_stream_TUSER);
    sensitive << ( in_stream_TVALID );
    sensitive << ( in_stream_TUSER );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg3_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( has_user_V_2_fu_290_p2 );

    SC_METHOD(thread_out_stream_TVALID);
    sensitive << ( in_stream_TVALID );
    sensitive << ( ap_sig_cseq_ST_pp4_stg0_fsm_11 );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg2_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg3_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_reg_ioackin_out_stream_TREADY );

    SC_METHOD(thread_p_Result_14_1_fu_210_p4);
    sensitive << ( reg_181 );
    sensitive << ( reg_185 );
    sensitive << ( reg_189 );

    SC_METHOD(thread_p_Result_2_fu_201_p3);
    sensitive << ( grp_fu_151_p4 );
    sensitive << ( tmp_12_fu_197_p1 );

    SC_METHOD(thread_p_Result_3_1_fu_323_p3);
    sensitive << ( reg_185 );
    sensitive << ( tmp_4_reg_377 );

    SC_METHOD(thread_p_Result_3_2_fu_331_p3);
    sensitive << ( reg_193 );
    sensitive << ( tmp_6_reg_387 );

    SC_METHOD(thread_p_Result_6_1_fu_244_p1);
    sensitive << ( reg_181 );

    SC_METHOD(thread_p_Result_6_2_fu_249_p1);
    sensitive << ( reg_189 );

    SC_METHOD(thread_p_Result_6_3_fu_254_p1);
    sensitive << ( reg_185 );

    SC_METHOD(thread_p_Result_6_fu_239_p1);
    sensitive << ( tmp_10_fu_235_p1 );

    SC_METHOD(thread_p_Result_8_1_fu_230_p1);
    sensitive << ( reg_193 );

    SC_METHOD(thread_p_Result_8_fu_225_p1);
    sensitive << ( tmp_11_fu_221_p1 );

    SC_METHOD(thread_tmp4_fu_284_p2);
    sensitive << ( in_stream_TUSER );
    sensitive << ( empty_4_reg_371_1 );

    SC_METHOD(thread_tmp5_fu_297_p2);
    sensitive << ( in_stream_TLAST );
    sensitive << ( empty_4_reg_371_2 );

    SC_METHOD(thread_tmp_10_fu_235_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_tmp_11_fu_221_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_tmp_12_fu_197_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_tmp_2_fu_264_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_tmp_4_fu_268_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_tmp_6_fu_309_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_tmp_9_fu_259_p1);
    sensitive << ( in_stream_TDATA );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( in_stream_TVALID );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp4_it0 );
    sensitive << ( ap_reg_ppiten_pp4_it1 );
    sensitive << ( ap_sig_cseq_ST_pp4_stg1_fsm_12 );
    sensitive << ( ap_sig_ioackin_out_stream_TREADY );
    sensitive << ( grp_fu_136_p1 );
    sensitive << ( last_2_reg_342 );
    sensitive << ( last_1_reg_347 );
    sensitive << ( last_reg_352 );
    sensitive << ( grp_read_fu_96_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    mode_0_data_reg = "00000000000000000000000000000000";
    mode_0_vld_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000000001";
    ap_reg_ppiten_pp4_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp4_it1 = SC_LOGIC_0;
    ap_reg_ioackin_out_stream_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pixel_unpack_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_stream_TDATA, "(port)in_stream_TDATA");
    sc_trace(mVcdFile, in_stream_TVALID, "(port)in_stream_TVALID");
    sc_trace(mVcdFile, in_stream_TREADY, "(port)in_stream_TREADY");
    sc_trace(mVcdFile, in_stream_TUSER, "(port)in_stream_TUSER");
    sc_trace(mVcdFile, in_stream_TLAST, "(port)in_stream_TLAST");
    sc_trace(mVcdFile, out_stream_TDATA, "(port)out_stream_TDATA");
    sc_trace(mVcdFile, out_stream_TVALID, "(port)out_stream_TVALID");
    sc_trace(mVcdFile, out_stream_TREADY, "(port)out_stream_TREADY");
    sc_trace(mVcdFile, out_stream_TUSER, "(port)out_stream_TUSER");
    sc_trace(mVcdFile, out_stream_TLAST, "(port)out_stream_TLAST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, control, "(port)control");
    sc_trace(mVcdFile, ap_rst_n_control, "(port)ap_rst_n_control");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, mode, "mode");
    sc_trace(mVcdFile, mode_0_data_reg, "mode_0_data_reg");
    sc_trace(mVcdFile, mode_0_vld_reg, "mode_0_vld_reg");
    sc_trace(mVcdFile, mode_0_ack_out, "mode_0_ack_out");
    sc_trace(mVcdFile, in_stream_TDATA_blk_n, "in_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp4_stg0_fsm_11, "ap_sig_cseq_ST_pp4_stg0_fsm_11");
    sc_trace(mVcdFile, ap_sig_66, "ap_sig_66");
    sc_trace(mVcdFile, ap_reg_ppiten_pp4_it0, "ap_reg_ppiten_pp4_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp4_it1, "ap_reg_ppiten_pp4_it1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp4_stg1_fsm_12, "ap_sig_cseq_ST_pp4_stg1_fsm_12");
    sc_trace(mVcdFile, ap_sig_78, "ap_sig_78");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp4_stg2_fsm_13, "ap_sig_cseq_ST_pp4_stg2_fsm_13");
    sc_trace(mVcdFile, ap_sig_87, "ap_sig_87");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_96, "ap_sig_96");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_104, "ap_sig_104");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_112, "ap_sig_112");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_120, "ap_sig_120");
    sc_trace(mVcdFile, out_stream_TDATA_blk_n, "out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp4_stg3_fsm_14, "ap_sig_cseq_ST_pp4_stg3_fsm_14");
    sc_trace(mVcdFile, ap_sig_129, "ap_sig_129");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_144, "ap_sig_144");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_152, "ap_sig_152");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_160, "ap_sig_160");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_169, "ap_sig_169");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_178, "ap_sig_178");
    sc_trace(mVcdFile, ap_rst_n_control_inv, "ap_rst_n_control_inv");
    sc_trace(mVcdFile, reg_181, "reg_181");
    sc_trace(mVcdFile, ap_sig_ioackin_out_stream_TREADY, "ap_sig_ioackin_out_stream_TREADY");
    sc_trace(mVcdFile, grp_fu_151_p4, "grp_fu_151_p4");
    sc_trace(mVcdFile, reg_185, "reg_185");
    sc_trace(mVcdFile, reg_189, "reg_189");
    sc_trace(mVcdFile, reg_193, "reg_193");
    sc_trace(mVcdFile, grp_fu_136_p1, "grp_fu_136_p1");
    sc_trace(mVcdFile, last_2_reg_342, "last_2_reg_342");
    sc_trace(mVcdFile, last_1_reg_347, "last_1_reg_347");
    sc_trace(mVcdFile, last_reg_352, "last_reg_352");
    sc_trace(mVcdFile, empty_reg_360_1, "empty_reg_360_1");
    sc_trace(mVcdFile, empty_reg_360_2, "empty_reg_360_2");
    sc_trace(mVcdFile, tmp_2_fu_264_p1, "tmp_2_fu_264_p1");
    sc_trace(mVcdFile, tmp_2_reg_366, "tmp_2_reg_366");
    sc_trace(mVcdFile, empty_4_reg_371_1, "empty_4_reg_371_1");
    sc_trace(mVcdFile, empty_4_reg_371_2, "empty_4_reg_371_2");
    sc_trace(mVcdFile, tmp_4_fu_268_p1, "tmp_4_fu_268_p1");
    sc_trace(mVcdFile, tmp_4_reg_377, "tmp_4_reg_377");
    sc_trace(mVcdFile, last_9_2_fu_303_p2, "last_9_2_fu_303_p2");
    sc_trace(mVcdFile, last_9_2_reg_382, "last_9_2_reg_382");
    sc_trace(mVcdFile, tmp_6_fu_309_p1, "tmp_6_fu_309_p1");
    sc_trace(mVcdFile, tmp_6_reg_387, "tmp_6_reg_387");
    sc_trace(mVcdFile, p_Result_3_3_reg_392, "p_Result_3_3_reg_392");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_281, "ap_sig_281");
    sc_trace(mVcdFile, grp_read_fu_96_p2, "grp_read_fu_96_p2");
    sc_trace(mVcdFile, p_Result_2_fu_201_p3, "p_Result_2_fu_201_p3");
    sc_trace(mVcdFile, p_Result_14_1_fu_210_p4, "p_Result_14_1_fu_210_p4");
    sc_trace(mVcdFile, p_Result_8_fu_225_p1, "p_Result_8_fu_225_p1");
    sc_trace(mVcdFile, p_Result_8_1_fu_230_p1, "p_Result_8_1_fu_230_p1");
    sc_trace(mVcdFile, p_Result_6_fu_239_p1, "p_Result_6_fu_239_p1");
    sc_trace(mVcdFile, p_Result_6_1_fu_244_p1, "p_Result_6_1_fu_244_p1");
    sc_trace(mVcdFile, p_Result_6_2_fu_249_p1, "p_Result_6_2_fu_249_p1");
    sc_trace(mVcdFile, p_Result_6_3_fu_254_p1, "p_Result_6_3_fu_254_p1");
    sc_trace(mVcdFile, tmp_9_fu_259_p1, "tmp_9_fu_259_p1");
    sc_trace(mVcdFile, p_Result_3_1_fu_323_p3, "p_Result_3_1_fu_323_p3");
    sc_trace(mVcdFile, p_Result_3_2_fu_331_p3, "p_Result_3_2_fu_331_p3");
    sc_trace(mVcdFile, has_user_V_2_fu_290_p2, "has_user_V_2_fu_290_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_out_stream_TREADY, "ap_reg_ioackin_out_stream_TREADY");
    sc_trace(mVcdFile, tmp_12_fu_197_p1, "tmp_12_fu_197_p1");
    sc_trace(mVcdFile, tmp_11_fu_221_p1, "tmp_11_fu_221_p1");
    sc_trace(mVcdFile, tmp_10_fu_235_p1, "tmp_10_fu_235_p1");
    sc_trace(mVcdFile, tmp4_fu_284_p2, "tmp4_fu_284_p2");
    sc_trace(mVcdFile, tmp5_fu_297_p2, "tmp5_fu_297_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_15, "ap_sig_cseq_ST_st18_fsm_15");
    sc_trace(mVcdFile, ap_sig_544, "ap_sig_544");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("pixel_unpack.hdltvin.dat");
    mHdltvoutHandle.open("pixel_unpack.hdltvout.dat");
}

pixel_unpack::~pixel_unpack() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pixel_unpack_AXILiteS_s_axi_U;
}

void pixel_unpack::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pixel_unpack::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_out_stream_TREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
              !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
              !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
              !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
              !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && (esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
              !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
              !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))))) {
            ap_reg_ioackin_out_stream_TREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                     !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                     !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
                     !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                     !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_stream_TREADY.read())))) {
            ap_reg_ioackin_out_stream_TREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp4_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) && 
             !esl_seteq<1,1,1>(last_9_2_reg_382.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp4_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,32,32>(ap_const_lv32_0, grp_read_fu_96_p2.read()))) {
            ap_reg_ppiten_pp4_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp4_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) {
            ap_reg_ppiten_pp4_it1 = ap_reg_ppiten_pp4_it0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,32,32>(ap_const_lv32_0, grp_read_fu_96_p2.read()))) {
            ap_reg_ppiten_pp4_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))))) {
        empty_4_reg_371_1 = in_stream_TUSER.read();
        empty_4_reg_371_2 = in_stream_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))))) {
        empty_reg_360_1 = in_stream_TUSER.read();
        empty_reg_360_2 = in_stream_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) {
        last_1_reg_347 = in_stream_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) {
        last_2_reg_342 = in_stream_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && (esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))))) {
        last_9_2_reg_382 = last_9_2_fu_303_p2.read();
        p_Result_3_3_reg_392 = in_stream_TDATA.read().range(31, 8);
        tmp_6_reg_387 = tmp_6_fu_309_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) {
        last_reg_352 = in_stream_TLAST.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, mode_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, mode_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, mode_0_ack_out.read())))) {
        mode_0_data_reg = mode.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
  !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
  !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))))) {
        reg_181 = in_stream_TDATA.read().range(15, 8);
        reg_189 = in_stream_TDATA.read().range(23, 16);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
  !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
  !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))))) {
        reg_185 = in_stream_TDATA.read().range(31, 24);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
  !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))))) {
        reg_193 = in_stream_TDATA.read().range(31, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))))) {
        tmp_2_reg_366 = tmp_2_fu_264_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))))) {
        tmp_4_reg_377 = tmp_4_fu_268_p1.read();
    }
}

void pixel_unpack::thread_ap_rst_n_control_inv() {
    ap_rst_n_control_inv =  (sc_logic) (~ap_rst_n_control.read());
}

void pixel_unpack::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pixel_unpack::thread_ap_sig_104() {
    ap_sig_104 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void pixel_unpack::thread_ap_sig_112() {
    ap_sig_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void pixel_unpack::thread_ap_sig_120() {
    ap_sig_120 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void pixel_unpack::thread_ap_sig_129() {
    ap_sig_129 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void pixel_unpack::thread_ap_sig_144() {
    ap_sig_144 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void pixel_unpack::thread_ap_sig_152() {
    ap_sig_152 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void pixel_unpack::thread_ap_sig_160() {
    ap_sig_160 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void pixel_unpack::thread_ap_sig_169() {
    ap_sig_169 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void pixel_unpack::thread_ap_sig_178() {
    ap_sig_178 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void pixel_unpack::thread_ap_sig_281() {
    ap_sig_281 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void pixel_unpack::thread_ap_sig_544() {
    ap_sig_544 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void pixel_unpack::thread_ap_sig_66() {
    ap_sig_66 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(11, 11), ap_const_lv1_1);
}

void pixel_unpack::thread_ap_sig_78() {
    ap_sig_78 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void pixel_unpack::thread_ap_sig_87() {
    ap_sig_87 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void pixel_unpack::thread_ap_sig_96() {
    ap_sig_96 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void pixel_unpack::thread_ap_sig_cseq_ST_pp4_stg0_fsm_11() {
    if (ap_sig_66.read()) {
        ap_sig_cseq_ST_pp4_stg0_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp4_stg0_fsm_11 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_pp4_stg1_fsm_12() {
    if (ap_sig_78.read()) {
        ap_sig_cseq_ST_pp4_stg1_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp4_stg1_fsm_12 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_pp4_stg2_fsm_13() {
    if (ap_sig_87.read()) {
        ap_sig_cseq_ST_pp4_stg2_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp4_stg2_fsm_13 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_pp4_stg3_fsm_14() {
    if (ap_sig_129.read()) {
        ap_sig_cseq_ST_pp4_stg3_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp4_stg3_fsm_14 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_160.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_96.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st18_fsm_15() {
    if (ap_sig_544.read()) {
        ap_sig_cseq_ST_st18_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_15 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_281.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_120.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_178.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_112.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_169.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_104.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_144.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_152.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void pixel_unpack::thread_ap_sig_ioackin_out_stream_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) {
        ap_sig_ioackin_out_stream_TREADY = out_stream_TREADY.read();
    } else {
        ap_sig_ioackin_out_stream_TREADY = ap_const_logic_1;
    }
}

void pixel_unpack::thread_grp_fu_136_p1() {
    grp_fu_136_p1 = in_stream_TLAST.read();
}

void pixel_unpack::thread_grp_fu_151_p4() {
    grp_fu_151_p4 = in_stream_TDATA.read().range(31, 24);
}

void pixel_unpack::thread_grp_read_fu_96_p2() {
    grp_read_fu_96_p2 = mode_0_data_reg.read();
}

void pixel_unpack::thread_has_user_V_2_fu_290_p2() {
    has_user_V_2_fu_290_p2 = (tmp4_fu_284_p2.read() | empty_reg_360_1.read());
}

void pixel_unpack::thread_in_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()))) {
        in_stream_TDATA_blk_n = in_stream_TVALID.read();
    } else {
        in_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void pixel_unpack::thread_in_stream_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
          !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
          !(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && (esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))))) {
        in_stream_TREADY = ap_const_logic_1;
    } else {
        in_stream_TREADY = ap_const_logic_0;
    }
}

void pixel_unpack::thread_last_9_2_fu_303_p2() {
    last_9_2_fu_303_p2 = (tmp5_fu_297_p2.read() | empty_reg_360_2.read());
}

void pixel_unpack::thread_mode_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_15.read())) {
        mode_0_ack_out = ap_const_logic_1;
    } else {
        mode_0_ack_out = ap_const_logic_0;
    }
}

void pixel_unpack::thread_out_stream_TDATA() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)))) {
        out_stream_TDATA = p_Result_3_3_reg_392.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)))) {
        out_stream_TDATA = p_Result_3_2_fu_331_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read()))) {
        out_stream_TDATA = p_Result_3_1_fu_323_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)))) {
        out_stream_TDATA = tmp_2_reg_366.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) {
        out_stream_TDATA = tmp_9_fu_259_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        out_stream_TDATA = p_Result_6_3_fu_254_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        out_stream_TDATA = p_Result_6_2_fu_249_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        out_stream_TDATA = p_Result_6_1_fu_244_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
                !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) {
        out_stream_TDATA = p_Result_6_fu_239_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        out_stream_TDATA = p_Result_8_1_fu_230_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) {
        out_stream_TDATA = p_Result_8_fu_225_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        out_stream_TDATA = p_Result_14_1_fu_210_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) {
        out_stream_TDATA = p_Result_2_fu_201_p3.read();
    } else {
        out_stream_TDATA = "XXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void pixel_unpack::thread_out_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        out_stream_TDATA_blk_n = out_stream_TREADY.read();
    } else {
        out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void pixel_unpack::thread_out_stream_TLAST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)))) {
        out_stream_TLAST = last_9_2_reg_382.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) {
        out_stream_TLAST = in_stream_TLAST.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        out_stream_TLAST = last_reg_352.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        out_stream_TLAST = last_1_reg_347.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        out_stream_TLAST = last_2_reg_342.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))))) {
        out_stream_TLAST = ap_const_lv1_0;
    } else {
        out_stream_TLAST =  (sc_lv<1>) ("X");
    }
}

void pixel_unpack::thread_out_stream_TUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)))) {
        out_stream_TUSER = has_user_V_2_fu_290_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0))))) {
        out_stream_TUSER = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                 !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)))) {
        out_stream_TUSER = in_stream_TUSER.read();
    } else {
        out_stream_TUSER =  (sc_lv<1>) ("X");
    }
}

void pixel_unpack::thread_out_stream_TVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
          !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
          !esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg2_fsm_13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg3_fsm_14.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg0_fsm_11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_stream_TREADY.read())))) {
        out_stream_TVALID = ap_const_logic_1;
    } else {
        out_stream_TVALID = ap_const_logic_0;
    }
}

void pixel_unpack::thread_p_Result_14_1_fu_210_p4() {
    p_Result_14_1_fu_210_p4 = esl_concat<16,8>(esl_concat<8,8>(reg_185.read(), reg_181.read()), reg_189.read());
}

void pixel_unpack::thread_p_Result_2_fu_201_p3() {
    p_Result_2_fu_201_p3 = esl_concat<8,16>(grp_fu_151_p4.read(), tmp_12_fu_197_p1.read());
}

void pixel_unpack::thread_p_Result_3_1_fu_323_p3() {
    p_Result_3_1_fu_323_p3 = esl_concat<16,8>(tmp_4_reg_377.read(), reg_185.read());
}

void pixel_unpack::thread_p_Result_3_2_fu_331_p3() {
    p_Result_3_2_fu_331_p3 = esl_concat<8,16>(tmp_6_reg_387.read(), reg_193.read());
}

void pixel_unpack::thread_p_Result_6_1_fu_244_p1() {
    p_Result_6_1_fu_244_p1 = esl_zext<24,8>(reg_181.read());
}

void pixel_unpack::thread_p_Result_6_2_fu_249_p1() {
    p_Result_6_2_fu_249_p1 = esl_zext<24,8>(reg_189.read());
}

void pixel_unpack::thread_p_Result_6_3_fu_254_p1() {
    p_Result_6_3_fu_254_p1 = esl_zext<24,8>(reg_185.read());
}

void pixel_unpack::thread_p_Result_6_fu_239_p1() {
    p_Result_6_fu_239_p1 = esl_zext<24,8>(tmp_10_fu_235_p1.read());
}

void pixel_unpack::thread_p_Result_8_1_fu_230_p1() {
    p_Result_8_1_fu_230_p1 = esl_zext<24,16>(reg_193.read());
}

void pixel_unpack::thread_p_Result_8_fu_225_p1() {
    p_Result_8_fu_225_p1 = esl_zext<24,16>(tmp_11_fu_221_p1.read());
}

void pixel_unpack::thread_tmp4_fu_284_p2() {
    tmp4_fu_284_p2 = (empty_4_reg_371_1.read() | in_stream_TUSER.read());
}

void pixel_unpack::thread_tmp5_fu_297_p2() {
    tmp5_fu_297_p2 = (empty_4_reg_371_2.read() | in_stream_TLAST.read());
}

void pixel_unpack::thread_tmp_10_fu_235_p1() {
    tmp_10_fu_235_p1 = in_stream_TDATA.read().range(8-1, 0);
}

void pixel_unpack::thread_tmp_11_fu_221_p1() {
    tmp_11_fu_221_p1 = in_stream_TDATA.read().range(16-1, 0);
}

void pixel_unpack::thread_tmp_12_fu_197_p1() {
    tmp_12_fu_197_p1 = in_stream_TDATA.read().range(16-1, 0);
}

void pixel_unpack::thread_tmp_2_fu_264_p1() {
    tmp_2_fu_264_p1 = in_stream_TDATA.read().range(24-1, 0);
}

void pixel_unpack::thread_tmp_4_fu_268_p1() {
    tmp_4_fu_268_p1 = in_stream_TDATA.read().range(16-1, 0);
}

void pixel_unpack::thread_tmp_6_fu_309_p1() {
    tmp_6_fu_309_p1 = in_stream_TDATA.read().range(8-1, 0);
}

void pixel_unpack::thread_tmp_9_fu_259_p1() {
    tmp_9_fu_259_p1 = in_stream_TDATA.read().range(24-1, 0);
}

void pixel_unpack::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 2 : 
            if ((!esl_seteq<1,32,32>(ap_const_lv32_0, grp_read_fu_96_p2.read()) && !esl_seteq<1,32,32>(ap_const_lv32_1, grp_read_fu_96_p2.read()) && !esl_seteq<1,32,32>(ap_const_lv32_2, grp_read_fu_96_p2.read()) && !esl_seteq<1,32,32>(ap_const_lv32_3, grp_read_fu_96_p2.read()) && !esl_seteq<1,32,32>(ap_const_lv32_4, grp_read_fu_96_p2.read()))) {
                ap_NS_fsm = ap_ST_st18_fsm_15;
            } else if (esl_seteq<1,32,32>(ap_const_lv32_0, grp_read_fu_96_p2.read())) {
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_11;
            } else if (esl_seteq<1,32,32>(ap_const_lv32_1, grp_read_fu_96_p2.read())) {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            } else if (esl_seteq<1,32,32>(ap_const_lv32_2, grp_read_fu_96_p2.read())) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else if (esl_seteq<1,32,32>(ap_const_lv32_3, grp_read_fu_96_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            if ((!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()) && esl_seteq<1,1,1>(last_2_reg_342.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()) && !esl_seteq<1,1,1>(last_2_reg_342.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st18_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 32 : 
            if ((!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()) && esl_seteq<1,1,1>(last_1_reg_347.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()) && !esl_seteq<1,1,1>(last_1_reg_347.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st18_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 512 : 
            if ((!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()) && esl_seteq<1,1,1>(last_reg_352.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()) && !esl_seteq<1,1,1>(last_reg_352.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st18_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) && esl_seteq<1,1,1>(grp_fu_136_p1.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            } else if ((!(esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())) && !esl_seteq<1,1,1>(grp_fu_136_p1.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st18_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 2048 : 
            if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) {
                ap_NS_fsm = ap_ST_pp4_stg1_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_11;
            }
            break;
        case 4096 : 
            if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read())))) {
                ap_NS_fsm = ap_ST_pp4_stg2_fsm_13;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp4_stg1_fsm_12.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && 
  esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()))) {
                ap_NS_fsm = ap_ST_st18_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_pp4_stg1_fsm_12;
            }
            break;
        case 8192 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && (esl_seteq<1,1,1>(in_stream_TVALID.read(), ap_const_logic_0) || 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read())))) {
                ap_NS_fsm = ap_ST_pp4_stg3_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_pp4_stg2_fsm_13;
            }
            break;
        case 16384 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp4_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_stream_TREADY.read()))) {
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_pp4_stg3_fsm_14;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

void pixel_unpack::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TDATA\" :  \"" << in_stream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TVALID\" :  \"" << in_stream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_stream_TREADY\" :  \"" << in_stream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TUSER\" :  \"" << in_stream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TLAST\" :  \"" << in_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDATA\" :  \"" << out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TVALID\" :  \"" << out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_TREADY\" :  \"" << out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TUSER\" :  \"" << out_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TLAST\" :  \"" << out_stream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n_control\" :  \"" << ap_rst_n_control.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

