

================================================================
== Vivado HLS Report for 'color_convert'
================================================================
* Date:           Sun Oct 15 10:20:50 2017

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        color_convert
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   7.00|      6.38|        0.88|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    7|    7|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 1
  Pipeline-0: II = 1, D = 8, States = { 1 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
* FSM state operations: 

 <State 1>: 1.00ns
ST_1: bias_c3_V_read [2/2] 1.00ns
_ifconv:0  %bias_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c3_V)

ST_1: bias_c2_V_read [2/2] 1.00ns
_ifconv:1  %bias_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c2_V)

ST_1: bias_c1_V_read [2/2] 1.00ns
_ifconv:2  %bias_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c1_V)

ST_1: c3_c3_V_read [2/2] 1.00ns
_ifconv:3  %c3_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c3_V)

ST_1: c3_c2_V_read [2/2] 1.00ns
_ifconv:4  %c3_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c2_V)

ST_1: c3_c1_V_read [2/2] 1.00ns
_ifconv:5  %c3_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c1_V)

ST_1: c2_c3_V_read [2/2] 1.00ns
_ifconv:6  %c2_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c3_V)

ST_1: c2_c2_V_read [2/2] 1.00ns
_ifconv:7  %c2_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c2_V)

ST_1: c2_c1_V_read [2/2] 1.00ns
_ifconv:8  %c2_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c1_V)

ST_1: c1_c3_V_read [2/2] 1.00ns
_ifconv:9  %c1_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c3_V)

ST_1: c1_c2_V_read [2/2] 1.00ns
_ifconv:10  %c1_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c2_V)

ST_1: c1_c1_V_read [2/2] 1.00ns
_ifconv:11  %c1_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c1_V)

ST_1: empty [1/1] 0.00ns
_ifconv:40  %empty = call { i24, i1, i1 } @_ssdm_op_Read.axis.volatile.i24P.i1P.i1P(i24* %in_data_data, i1* %in_data_user_V, i1* %in_data_last_V)

ST_1: in_data_data_tmp [1/1] 0.00ns
_ifconv:41  %in_data_data_tmp = extractvalue { i24, i1, i1 } %empty, 0

ST_1: in_data_user_V_tmp [1/1] 0.00ns
_ifconv:42  %in_data_user_V_tmp = extractvalue { i24, i1, i1 } %empty, 1

ST_1: in_data_last_V_tmp [1/1] 0.00ns
_ifconv:43  %in_data_last_V_tmp = extractvalue { i24, i1, i1 } %empty, 2

ST_1: loc_V [1/1] 0.00ns
_ifconv:44  %loc_V = trunc i24 %in_data_data_tmp to i8

ST_1: loc_V_1 [1/1] 0.00ns
_ifconv:45  %loc_V_1 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %in_data_data_tmp, i32 8, i32 15)

ST_1: loc_V_2 [1/1] 0.00ns
_ifconv:46  %loc_V_2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %in_data_data_tmp, i32 16, i32 23)


 <State 2>: 1.00ns
ST_2: bias_c3_V_read [1/2] 1.00ns
_ifconv:0  %bias_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c3_V)

ST_2: bias_c2_V_read [1/2] 1.00ns
_ifconv:1  %bias_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c2_V)

ST_2: bias_c1_V_read [1/2] 1.00ns
_ifconv:2  %bias_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c1_V)

ST_2: c3_c3_V_read [1/2] 1.00ns
_ifconv:3  %c3_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c3_V)

ST_2: c3_c2_V_read [1/2] 1.00ns
_ifconv:4  %c3_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c2_V)

ST_2: c3_c1_V_read [1/2] 1.00ns
_ifconv:5  %c3_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c1_V)

ST_2: c2_c3_V_read [1/2] 1.00ns
_ifconv:6  %c2_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c3_V)

ST_2: c2_c2_V_read [1/2] 1.00ns
_ifconv:7  %c2_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c2_V)

ST_2: c2_c1_V_read [1/2] 1.00ns
_ifconv:8  %c2_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c1_V)

ST_2: c1_c3_V_read [1/2] 1.00ns
_ifconv:9  %c1_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c3_V)

ST_2: c1_c2_V_read [1/2] 1.00ns
_ifconv:10  %c1_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c2_V)

ST_2: c1_c1_V_read [1/2] 1.00ns
_ifconv:11  %c1_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c1_V)


 <State 3>: 6.08ns
ST_3: OP1_V_1 [1/1] 0.00ns
_ifconv:50  %OP1_V_1 = zext i8 %loc_V_1 to i18

ST_3: OP2_V_1 [1/1] 0.00ns
_ifconv:51  %OP2_V_1 = sext i10 %c1_c2_V_read to i18

ST_3: p_Val2_1 [2/2] 6.08ns
_ifconv:52  %p_Val2_1 = mul i18 %OP1_V_1, %OP2_V_1

ST_3: OP2_V_4 [1/1] 0.00ns
_ifconv:92  %OP2_V_4 = sext i10 %c2_c2_V_read to i18

ST_3: p_Val2_9 [2/2] 6.08ns
_ifconv:93  %p_Val2_9 = mul i18 %OP1_V_1, %OP2_V_4

ST_3: OP2_V_7 [1/1] 0.00ns
_ifconv:132  %OP2_V_7 = sext i10 %c3_c2_V_read to i18

ST_3: p_Val2_16 [2/2] 6.08ns
_ifconv:133  %p_Val2_16 = mul i18 %OP1_V_1, %OP2_V_7


 <State 4>: 6.08ns
ST_4: p_Val2_1 [1/2] 6.08ns
_ifconv:52  %p_Val2_1 = mul i18 %OP1_V_1, %OP2_V_1

ST_4: p_Val2_9 [1/2] 6.08ns
_ifconv:93  %p_Val2_9 = mul i18 %OP1_V_1, %OP2_V_4

ST_4: p_Val2_16 [1/2] 6.08ns
_ifconv:133  %p_Val2_16 = mul i18 %OP1_V_1, %OP2_V_7


 <State 5>: 6.38ns
ST_5: OP1_V [1/1] 0.00ns
_ifconv:47  %OP1_V = zext i8 %loc_V to i18

ST_5: OP2_V [1/1] 0.00ns
_ifconv:48  %OP2_V = sext i10 %c1_c1_V_read to i18

ST_5: p_Val2_s [1/1] 3.36ns
_ifconv:49  %p_Val2_s = mul i18 %OP1_V, %OP2_V

ST_5: tmp [1/1] 0.00ns
_ifconv:53  %tmp = sext i18 %p_Val2_s to i19

ST_5: tmp_4 [1/1] 0.00ns
_ifconv:54  %tmp_4 = sext i18 %p_Val2_1 to i19

ST_5: p_Val2_2 [1/1] 3.02ns
_ifconv:55  %p_Val2_2 = add i19 %tmp_4, %tmp

ST_5: OP2_V_3 [1/1] 0.00ns
_ifconv:90  %OP2_V_3 = sext i10 %c2_c1_V_read to i18

ST_5: p_Val2_8 [1/1] 3.36ns
_ifconv:91  %p_Val2_8 = mul i18 %OP1_V, %OP2_V_3

ST_5: tmp_6 [1/1] 0.00ns
_ifconv:94  %tmp_6 = sext i18 %p_Val2_8 to i19

ST_5: tmp_1 [1/1] 0.00ns
_ifconv:95  %tmp_1 = sext i18 %p_Val2_9 to i19

ST_5: p_Val2_11 [1/1] 3.02ns
_ifconv:96  %p_Val2_11 = add i19 %tmp_1, %tmp_6

ST_5: OP2_V_6 [1/1] 0.00ns
_ifconv:130  %OP2_V_6 = sext i10 %c3_c1_V_read to i18

ST_5: p_Val2_17 [1/1] 3.36ns
_ifconv:131  %p_Val2_17 = mul i18 %OP1_V, %OP2_V_6

ST_5: tmp_17 [1/1] 0.00ns
_ifconv:134  %tmp_17 = sext i18 %p_Val2_17 to i19

ST_5: tmp_18 [1/1] 0.00ns
_ifconv:135  %tmp_18 = sext i18 %p_Val2_16 to i19

ST_5: p_Val2_19 [1/1] 3.02ns
_ifconv:136  %p_Val2_19 = add i19 %tmp_18, %tmp_17


 <State 6>: 6.38ns
ST_6: OP1_V_2 [1/1] 0.00ns
_ifconv:56  %OP1_V_2 = zext i8 %loc_V_2 to i18

ST_6: OP2_V_2 [1/1] 0.00ns
_ifconv:57  %OP2_V_2 = sext i10 %c1_c3_V_read to i18

ST_6: p_Val2_3 [1/1] 3.36ns
_ifconv:58  %p_Val2_3 = mul i18 %OP1_V_2, %OP2_V_2

ST_6: tmp_9 [1/1] 0.00ns
_ifconv:59  %tmp_9 = sext i19 %p_Val2_2 to i20

ST_6: tmp_s [1/1] 0.00ns
_ifconv:60  %tmp_s = sext i18 %p_Val2_3 to i20

ST_6: p_Val2_4 [1/1] 3.02ns
_ifconv:61  %p_Val2_4 = add i20 %tmp_s, %tmp_9

ST_6: tmp_28 [1/1] 0.00ns
_ifconv:67  %tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_4, i32 7)

ST_6: OP2_V_5 [1/1] 0.00ns
_ifconv:97  %OP2_V_5 = sext i10 %c2_c3_V_read to i18

ST_6: p_Val2_10 [1/1] 3.36ns
_ifconv:98  %p_Val2_10 = mul i18 %OP1_V_2, %OP2_V_5

ST_6: tmp_10 [1/1] 0.00ns
_ifconv:99  %tmp_10 = sext i19 %p_Val2_11 to i20

ST_6: tmp_11 [1/1] 0.00ns
_ifconv:100  %tmp_11 = sext i18 %p_Val2_10 to i20

ST_6: p_Val2_12 [1/1] 3.02ns
_ifconv:101  %p_Val2_12 = add i20 %tmp_11, %tmp_10

ST_6: tmp_32 [1/1] 0.00ns
_ifconv:107  %tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_12, i32 7)

ST_6: OP2_V_8 [1/1] 0.00ns
_ifconv:137  %OP2_V_8 = sext i10 %c3_c3_V_read to i18

ST_6: p_Val2_18 [1/1] 3.36ns
_ifconv:138  %p_Val2_18 = mul i18 %OP1_V_2, %OP2_V_8

ST_6: tmp_19 [1/1] 0.00ns
_ifconv:139  %tmp_19 = sext i19 %p_Val2_19 to i20

ST_6: tmp_20 [1/1] 0.00ns
_ifconv:140  %tmp_20 = sext i18 %p_Val2_18 to i20

ST_6: p_Val2_20 [1/1] 3.02ns
_ifconv:141  %p_Val2_20 = add i20 %tmp_20, %tmp_19

ST_6: tmp_36 [1/1] 0.00ns
_ifconv:147  %tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_20, i32 7)


 <State 7>: 5.17ns
ST_7: tmp_3 [1/1] 0.00ns
_ifconv:62  %tmp_3 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c1_V_read, i8 0)

ST_7: tmp_3_cast [1/1] 0.00ns
_ifconv:63  %tmp_3_cast = sext i18 %tmp_3 to i20

ST_7: p_Val2_5 [1/1] 2.08ns
_ifconv:64  %p_Val2_5 = add i20 %p_Val2_4, %tmp_3_cast

ST_7: signbit [1/1] 0.00ns
_ifconv:65  %signbit = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_5, i32 19)

ST_7: p_Val2_6 [1/1] 0.00ns
_ifconv:66  %p_Val2_6 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %p_Val2_5, i32 8, i32 15)

ST_7: tmp_7 [1/1] 0.00ns
_ifconv:68  %tmp_7 = zext i1 %tmp_28 to i8

ST_7: tmp_29 [1/1] 0.00ns (grouped into LUT with out node carry)
_ifconv:69  %tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_5, i32 15)

ST_7: p_Val2_7 [1/1] 1.72ns
_ifconv:70  %p_Val2_7 = add i8 %tmp_7, %p_Val2_6

ST_7: tmp_30 [1/1] 0.00ns (grouped into LUT with out node carry)
_ifconv:71  %tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_7, i32 7)

ST_7: tmp_5 [1/1] 0.00ns (grouped into LUT with out node carry)
_ifconv:72  %tmp_5 = xor i1 %tmp_30, true

ST_7: carry [1/1] 1.37ns (out node of the LUT)
_ifconv:73  %carry = and i1 %tmp_29, %tmp_5

ST_7: tmp_2 [1/1] 0.00ns
_ifconv:74  %tmp_2 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %p_Val2_5, i32 16, i32 19)

ST_7: Range1_all_ones [1/1] 1.88ns
_ifconv:75  %Range1_all_ones = icmp eq i4 %tmp_2, -1

ST_7: Range1_all_zeros [1/1] 1.88ns
_ifconv:76  %Range1_all_zeros = icmp eq i4 %tmp_2, 0

ST_7: tmp_12 [1/1] 0.00ns
_ifconv:102  %tmp_12 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c2_V_read, i8 0)

ST_7: tmp_16_cast [1/1] 0.00ns
_ifconv:103  %tmp_16_cast = sext i18 %tmp_12 to i20

ST_7: p_Val2_13 [1/1] 2.08ns
_ifconv:104  %p_Val2_13 = add i20 %p_Val2_12, %tmp_16_cast

ST_7: signbit_1 [1/1] 0.00ns
_ifconv:105  %signbit_1 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_13, i32 19)

ST_7: p_Val2_14 [1/1] 0.00ns
_ifconv:106  %p_Val2_14 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %p_Val2_13, i32 8, i32 15)

ST_7: tmp_13 [1/1] 0.00ns
_ifconv:108  %tmp_13 = zext i1 %tmp_32 to i8

ST_7: tmp_33 [1/1] 0.00ns (grouped into LUT with out node carry_1)
_ifconv:109  %tmp_33 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_13, i32 15)

ST_7: p_Val2_15 [1/1] 1.72ns
_ifconv:110  %p_Val2_15 = add i8 %tmp_13, %p_Val2_14

ST_7: tmp_34 [1/1] 0.00ns (grouped into LUT with out node carry_1)
_ifconv:111  %tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_15, i32 7)

ST_7: tmp_14 [1/1] 0.00ns (grouped into LUT with out node carry_1)
_ifconv:112  %tmp_14 = xor i1 %tmp_34, true

ST_7: carry_1 [1/1] 1.37ns (out node of the LUT)
_ifconv:113  %carry_1 = and i1 %tmp_33, %tmp_14

ST_7: tmp_15 [1/1] 0.00ns
_ifconv:114  %tmp_15 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %p_Val2_13, i32 16, i32 19)

ST_7: Range1_all_ones_1 [1/1] 1.88ns
_ifconv:115  %Range1_all_ones_1 = icmp eq i4 %tmp_15, -1

ST_7: Range1_all_zeros_1 [1/1] 1.88ns
_ifconv:116  %Range1_all_zeros_1 = icmp eq i4 %tmp_15, 0

ST_7: tmp_21 [1/1] 0.00ns
_ifconv:142  %tmp_21 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c3_V_read, i8 0)

ST_7: tmp_27_cast [1/1] 0.00ns
_ifconv:143  %tmp_27_cast = sext i18 %tmp_21 to i20

ST_7: p_Val2_21 [1/1] 2.08ns
_ifconv:144  %p_Val2_21 = add i20 %p_Val2_20, %tmp_27_cast

ST_7: signbit_2 [1/1] 0.00ns
_ifconv:145  %signbit_2 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_21, i32 19)

ST_7: p_Val2_22 [1/1] 0.00ns
_ifconv:146  %p_Val2_22 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %p_Val2_21, i32 8, i32 15)

ST_7: tmp_22 [1/1] 0.00ns
_ifconv:148  %tmp_22 = zext i1 %tmp_36 to i8

ST_7: tmp_37 [1/1] 0.00ns (grouped into LUT with out node carry_2)
_ifconv:149  %tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_21, i32 15)

ST_7: p_Val2_23 [1/1] 1.72ns
_ifconv:150  %p_Val2_23 = add i8 %tmp_22, %p_Val2_22

ST_7: tmp_38 [1/1] 0.00ns (grouped into LUT with out node carry_2)
_ifconv:151  %tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_23, i32 7)

ST_7: tmp_23 [1/1] 0.00ns (grouped into LUT with out node carry_2)
_ifconv:152  %tmp_23 = xor i1 %tmp_38, true

ST_7: carry_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:153  %carry_2 = and i1 %tmp_37, %tmp_23

ST_7: tmp_24 [1/1] 0.00ns
_ifconv:154  %tmp_24 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %p_Val2_21, i32 16, i32 19)

ST_7: Range1_all_ones_2 [1/1] 1.88ns
_ifconv:155  %Range1_all_ones_2 = icmp eq i4 %tmp_24, -1

ST_7: Range1_all_zeros_2 [1/1] 1.88ns
_ifconv:156  %Range1_all_zeros_2 = icmp eq i4 %tmp_24, 0


 <State 8>: 4.11ns
ST_8: stg_127 [1/1] 0.00ns
_ifconv:12  call void (...)* @_ssdm_op_SpecBitsMap(i24* %in_data_data), !map !79

ST_8: stg_128 [1/1] 0.00ns
_ifconv:13  call void (...)* @_ssdm_op_SpecBitsMap(i24* %out_data_data), !map !89

ST_8: stg_129 [1/1] 0.00ns
_ifconv:14  call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_data_user_V), !map !99

ST_8: stg_130 [1/1] 0.00ns
_ifconv:15  call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_data_last_V), !map !103

ST_8: stg_131 [1/1] 0.00ns
_ifconv:16  call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_data_user_V), !map !107

ST_8: stg_132 [1/1] 0.00ns
_ifconv:17  call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_data_last_V), !map !111

ST_8: stg_133 [1/1] 0.00ns
_ifconv:18  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c1_V), !map !115

ST_8: stg_134 [1/1] 0.00ns
_ifconv:19  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c2_V), !map !121

ST_8: stg_135 [1/1] 0.00ns
_ifconv:20  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c3_V), !map !125

ST_8: stg_136 [1/1] 0.00ns
_ifconv:21  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c1_V), !map !129

ST_8: stg_137 [1/1] 0.00ns
_ifconv:22  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c2_V), !map !133

ST_8: stg_138 [1/1] 0.00ns
_ifconv:23  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c3_V), !map !137

ST_8: stg_139 [1/1] 0.00ns
_ifconv:24  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c1_V), !map !141

ST_8: stg_140 [1/1] 0.00ns
_ifconv:25  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c2_V), !map !145

ST_8: stg_141 [1/1] 0.00ns
_ifconv:26  call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c3_V), !map !149

ST_8: stg_142 [1/1] 0.00ns
_ifconv:27  call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c1_V), !map !153

ST_8: stg_143 [1/1] 0.00ns
_ifconv:28  call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c2_V), !map !157

ST_8: stg_144 [1/1] 0.00ns
_ifconv:29  call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c3_V), !map !161

ST_8: stg_145 [1/1] 0.00ns
_ifconv:30  call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @color_convert_str) nounwind

ST_8: stg_146 [1/1] 0.00ns
_ifconv:31  call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @p_str, [1 x i8]* @p_str1) nounwind

ST_8: stg_147 [1/1] 0.00ns
_ifconv:32  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_148 [1/1] 0.00ns
_ifconv:33  call void (...)* @_ssdm_op_SpecInterface(i10 %c1_c1_V, i10 %c1_c2_V, i10 %c1_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_149 [1/1] 0.00ns
_ifconv:34  call void (...)* @_ssdm_op_SpecInterface(i10 %c2_c1_V, i10 %c2_c2_V, i10 %c2_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_150 [1/1] 0.00ns
_ifconv:35  call void (...)* @_ssdm_op_SpecInterface(i10 %c3_c1_V, i10 %c3_c2_V, i10 %c3_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_151 [1/1] 0.00ns
_ifconv:36  call void (...)* @_ssdm_op_SpecInterface(i10 %bias_c1_V, i10 %bias_c2_V, i10 %bias_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_152 [1/1] 0.00ns
_ifconv:37  call void (...)* @_ssdm_op_SpecInterface(i24* %in_data_data, i1* %in_data_user_V, i1* %in_data_last_V, [5 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_153 [1/1] 0.00ns
_ifconv:38  call void (...)* @_ssdm_op_SpecInterface(i24* %out_data_data, i1* %out_data_user_V, i1* %out_data_last_V, [5 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: stg_154 [1/1] 0.00ns
_ifconv:39  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: deleted_zeros [1/1] 0.00ns (grouped into LUT with out node p_39_demorgan_i)
_ifconv:77  %deleted_zeros = select i1 %carry, i1 %Range1_all_ones, i1 %Range1_all_zeros

ST_8: p_38_i [1/1] 1.37ns
_ifconv:78  %p_38_i = and i1 %carry, %Range1_all_ones

ST_8: tmp_8 [1/1] 0.00ns (grouped into LUT with out node p_s)
_ifconv:79  %tmp_8 = xor i1 %p_38_i, true

ST_8: neg_src [1/1] 0.00ns (grouped into LUT with out node p_s)
_ifconv:80  %neg_src = and i1 %signbit, %tmp_8

ST_8: p_39_demorgan_i [1/1] 1.37ns (out node of the LUT)
_ifconv:81  %p_39_demorgan_i = or i1 %deleted_zeros, %signbit

ST_8: signbit_not [1/1] 0.00ns (grouped into LUT with out node neg_src_5_not)
_ifconv:82  %signbit_not = xor i1 %signbit, true

ST_8: neg_src_5_not [1/1] 1.37ns (out node of the LUT)
_ifconv:83  %neg_src_5_not = or i1 %p_38_i, %signbit_not

ST_8: brmerge_i_i_not [1/1] 0.00ns (grouped into LUT with out node out1_V)
_ifconv:84  %brmerge_i_i_not = and i1 %p_39_demorgan_i, %neg_src_5_not

ST_8: p_39_demorgan_i_not [1/1] 0.00ns (grouped into LUT with out node out1_V)
_ifconv:85  %p_39_demorgan_i_not = xor i1 %p_39_demorgan_i, true

ST_8: brmerge [1/1] 0.00ns (grouped into LUT with out node out1_V)
_ifconv:86  %brmerge = or i1 %neg_src_5_not, %p_39_demorgan_i_not

ST_8: p_mux [1/1] 0.00ns (grouped into LUT with out node out1_V)
_ifconv:87  %p_mux = select i1 %brmerge_i_i_not, i8 %p_Val2_7, i8 -1

ST_8: p_s [1/1] 1.37ns (out node of the LUT)
_ifconv:88  %p_s = select i1 %neg_src, i8 0, i8 %p_Val2_7

ST_8: out1_V [1/1] 1.37ns (out node of the LUT)
_ifconv:89  %out1_V = select i1 %brmerge, i8 %p_mux, i8 %p_s

ST_8: deleted_zeros_1 [1/1] 0.00ns (grouped into LUT with out node p_39_demorgan_i1)
_ifconv:117  %deleted_zeros_1 = select i1 %carry_1, i1 %Range1_all_ones_1, i1 %Range1_all_zeros_1

ST_8: p_38_i1 [1/1] 1.37ns
_ifconv:118  %p_38_i1 = and i1 %carry_1, %Range1_all_ones_1

ST_8: tmp_16 [1/1] 0.00ns (grouped into LUT with out node p_1)
_ifconv:119  %tmp_16 = xor i1 %p_38_i1, true

ST_8: neg_src_6 [1/1] 0.00ns (grouped into LUT with out node p_1)
_ifconv:120  %neg_src_6 = and i1 %signbit_1, %tmp_16

ST_8: p_39_demorgan_i1 [1/1] 1.37ns (out node of the LUT)
_ifconv:121  %p_39_demorgan_i1 = or i1 %deleted_zeros_1, %signbit_1

ST_8: signbit_1_not [1/1] 0.00ns (grouped into LUT with out node neg_src_not)
_ifconv:122  %signbit_1_not = xor i1 %signbit_1, true

ST_8: neg_src_not [1/1] 1.37ns (out node of the LUT)
_ifconv:123  %neg_src_not = or i1 %p_38_i1, %signbit_1_not

ST_8: brmerge_i_i466_not [1/1] 0.00ns (grouped into LUT with out node out2_V)
_ifconv:124  %brmerge_i_i466_not = and i1 %p_39_demorgan_i1, %neg_src_not

ST_8: p_39_demorgan_i464_not [1/1] 0.00ns (grouped into LUT with out node out2_V)
_ifconv:125  %p_39_demorgan_i464_not = xor i1 %p_39_demorgan_i1, true

ST_8: brmerge1 [1/1] 0.00ns (grouped into LUT with out node out2_V)
_ifconv:126  %brmerge1 = or i1 %neg_src_not, %p_39_demorgan_i464_not

ST_8: p_mux1 [1/1] 0.00ns (grouped into LUT with out node out2_V)
_ifconv:127  %p_mux1 = select i1 %brmerge_i_i466_not, i8 %p_Val2_15, i8 -1

ST_8: p_1 [1/1] 1.37ns (out node of the LUT)
_ifconv:128  %p_1 = select i1 %neg_src_6, i8 0, i8 %p_Val2_15

ST_8: out2_V [1/1] 1.37ns (out node of the LUT)
_ifconv:129  %out2_V = select i1 %brmerge1, i8 %p_mux1, i8 %p_1

ST_8: deleted_zeros_2 [1/1] 0.00ns (grouped into LUT with out node p_39_demorgan_i2)
_ifconv:157  %deleted_zeros_2 = select i1 %carry_2, i1 %Range1_all_ones_2, i1 %Range1_all_zeros_2

ST_8: p_38_i2 [1/1] 1.37ns
_ifconv:158  %p_38_i2 = and i1 %carry_2, %Range1_all_ones_2

ST_8: tmp_25 [1/1] 0.00ns (grouped into LUT with out node p_2)
_ifconv:159  %tmp_25 = xor i1 %p_38_i2, true

ST_8: neg_src_7 [1/1] 0.00ns (grouped into LUT with out node p_2)
_ifconv:160  %neg_src_7 = and i1 %signbit_2, %tmp_25

ST_8: p_39_demorgan_i2 [1/1] 1.37ns (out node of the LUT)
_ifconv:161  %p_39_demorgan_i2 = or i1 %deleted_zeros_2, %signbit_2

ST_8: signbit_2_not [1/1] 0.00ns (grouped into LUT with out node neg_src_6_not)
_ifconv:162  %signbit_2_not = xor i1 %signbit_2, true

ST_8: neg_src_6_not [1/1] 1.37ns (out node of the LUT)
_ifconv:163  %neg_src_6_not = or i1 %p_38_i2, %signbit_2_not

ST_8: brmerge_i_i490_not [1/1] 0.00ns (grouped into LUT with out node out3_V)
_ifconv:164  %brmerge_i_i490_not = and i1 %p_39_demorgan_i2, %neg_src_6_not

ST_8: p_39_demorgan_i488_not [1/1] 0.00ns (grouped into LUT with out node out3_V)
_ifconv:165  %p_39_demorgan_i488_not = xor i1 %p_39_demorgan_i2, true

ST_8: brmerge2 [1/1] 0.00ns (grouped into LUT with out node out3_V)
_ifconv:166  %brmerge2 = or i1 %neg_src_6_not, %p_39_demorgan_i488_not

ST_8: p_mux2 [1/1] 0.00ns (grouped into LUT with out node out3_V)
_ifconv:167  %p_mux2 = select i1 %brmerge_i_i490_not, i8 %p_Val2_23, i8 -1

ST_8: p_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:168  %p_2 = select i1 %neg_src_7, i8 0, i8 %p_Val2_23

ST_8: out3_V [1/1] 1.37ns (out node of the LUT)
_ifconv:169  %out3_V = select i1 %brmerge2, i8 %p_mux2, i8 %p_2

ST_8: out_data_data_tmp [1/1] 0.00ns
_ifconv:170  %out_data_data_tmp = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %out3_V, i8 %out2_V, i8 %out1_V)

ST_8: stg_195 [1/1] 0.00ns
_ifconv:171  call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %out_data_data, i1* %out_data_user_V, i1* %out_data_last_V, i24 %out_data_data_tmp, i1 %in_data_user_V_tmp, i1 %in_data_last_V_tmp)

ST_8: stg_196 [1/1] 0.00ns
_ifconv:172  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 <State 5>: 6.38ns
The critical path consists of the following:
	'mul' operation ('__Val2__', color_convert/color_convert.cpp:46) (3.36 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:46) (3.02 ns)

 <State 6>: 6.38ns
The critical path consists of the following:
	'mul' operation ('__Val2__', color_convert/color_convert.cpp:45) (3.36 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:45) (3.02 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
