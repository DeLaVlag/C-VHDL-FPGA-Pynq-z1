-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity color_convert is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_data_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_data_TVALID : IN STD_LOGIC;
    in_data_TREADY : OUT STD_LOGIC;
    in_data_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_data_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_data_TVALID : OUT STD_LOGIC;
    out_data_TREADY : IN STD_LOGIC;
    out_data_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    control : IN STD_LOGIC;
    ap_rst_n_control : IN STD_LOGIC );
end;


architecture behav of color_convert is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "color_convert,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.380000,HLS_SYN_LAT=7,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=9,HLS_SYN_FF=715,HLS_SYN_LUT=607}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal c1_c1_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c1_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c1_c1_V_0_vld_reg : STD_LOGIC := '0';
    signal c1_c1_V_0_ack_out : STD_LOGIC;
    signal c1_c2_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c2_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c1_c2_V_0_vld_reg : STD_LOGIC := '0';
    signal c1_c2_V_0_ack_out : STD_LOGIC;
    signal c1_c3_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c3_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c1_c3_V_0_vld_reg : STD_LOGIC := '0';
    signal c1_c3_V_0_ack_out : STD_LOGIC;
    signal c2_c1_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c1_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c2_c1_V_0_vld_reg : STD_LOGIC := '0';
    signal c2_c1_V_0_ack_out : STD_LOGIC;
    signal c2_c2_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c2_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c2_c2_V_0_vld_reg : STD_LOGIC := '0';
    signal c2_c2_V_0_ack_out : STD_LOGIC;
    signal c2_c3_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c3_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c2_c3_V_0_vld_reg : STD_LOGIC := '0';
    signal c2_c3_V_0_ack_out : STD_LOGIC;
    signal c3_c1_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c1_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c3_c1_V_0_vld_reg : STD_LOGIC := '0';
    signal c3_c1_V_0_ack_out : STD_LOGIC;
    signal c3_c2_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c2_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c3_c2_V_0_vld_reg : STD_LOGIC := '0';
    signal c3_c2_V_0_ack_out : STD_LOGIC;
    signal c3_c3_V : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c3_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal c3_c3_V_0_vld_reg : STD_LOGIC := '0';
    signal c3_c3_V_0_ack_out : STD_LOGIC;
    signal bias_c1_V : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c1_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal bias_c1_V_0_vld_reg : STD_LOGIC := '0';
    signal bias_c1_V_0_ack_out : STD_LOGIC;
    signal bias_c2_V : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c2_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal bias_c2_V_0_vld_reg : STD_LOGIC := '0';
    signal bias_c2_V_0_ack_out : STD_LOGIC;
    signal bias_c3_V : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c3_V_0_data_reg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal bias_c3_V_0_vld_reg : STD_LOGIC := '0';
    signal bias_c3_V_0_ack_out : STD_LOGIC;
    signal in_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_293 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal out_data_TDATA_blk_n : STD_LOGIC;
    signal ap_rst_n_control_inv : STD_LOGIC;
    signal in_data_user_V_tmp_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_out_data_TREADY : STD_LOGIC;
    signal ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_data_last_V_tmp_reg_904 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_fu_213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_909 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_909_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_909_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_909_pp0_iter3 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_reg_914 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_914_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_reg_919 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_2_reg_919_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_2_reg_919_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_2_reg_919_pp0_iter3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_2_reg_919_pp0_iter4 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_c3_V_read_reg_924 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter5 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c2_V_read_reg_929 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter5 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c1_V_read_reg_934 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter5 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c3_V_read_reg_939 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter4 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c2_V_read_reg_944 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c1_V_read_reg_949 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c3_V_read_reg_954 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter4 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c2_V_read_reg_959 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c1_V_read_reg_964 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c3_V_read_reg_969 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter4 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c2_V_read_reg_974 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c1_V_read_reg_979 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter3 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP1_V_1_fu_237_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_243_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_reg_1006 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_252_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_9_reg_1011 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_261_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_16_reg_1016 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_848_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_2_reg_1021 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_882_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_11_reg_1026 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_874_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_19_reg_1031 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_890_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_4_reg_1036 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_28_reg_1041 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_856_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_12_reg_1046 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_32_reg_1051 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_865_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_20_reg_1056 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_36_reg_1061 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_reg_1066 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_fu_375_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_reg_1073 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_1085 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_1091 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_1_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_15_fu_468_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_15_reg_1103 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_1_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1121 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_2_reg_1126 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_23_fu_561_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_23_reg_1133 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_2_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_2_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_1145 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_1151 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ioackin_out_data_TREADY : STD_LOGIC := '0';
    signal grp_fu_243_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_252_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_261_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_330_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_3_cast_fu_337_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_5_fu_341_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_5_fu_341_p2 : signal is "no";
    signal tmp_7_fu_364_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_fu_354_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_381_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_401_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_423_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_16_cast_fu_430_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_13_fu_434_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of p_Val2_13_fu_434_p2 : signal is "no";
    signal tmp_13_fu_457_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_14_fu_447_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_460_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_494_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_fu_516_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_cast_fu_523_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_21_fu_527_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of p_Val2_21_fu_527_p2 : signal is "no";
    signal tmp_22_fu_550_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_22_fu_540_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_567_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_553_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_587_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_38_i_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_609_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_5_not_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_fu_663_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_fu_670_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i1_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_1_not_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i1_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i464_not_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i466_not_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_6_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux1_fu_739_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_fu_746_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i2_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_761_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_2_not_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i2_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_6_not_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i488_not_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i490_not_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_7_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux2_fu_815_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_fu_822_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out3_V_fu_829_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out2_V_fu_753_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out1_V_fu_677_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_848_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_fu_267_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_856_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_2_fu_288_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_865_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_874_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_882_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_890_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_243_ce : STD_LOGIC;
    signal grp_fu_252_ce : STD_LOGIC;
    signal grp_fu_261_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;

    component color_convert_mul_8ns_10s_18_2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component color_convert_mac_muladd_8ns_10s_18s_19_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component color_convert_mac_muladd_8ns_10s_19s_20_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component color_convert_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        c1_c1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c1_c2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c1_c3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_c1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_c2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_c3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_c1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_c2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_c3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_c1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_c2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_c3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
        clk : IN STD_LOGIC;
        rst : IN STD_LOGIC );
    end component;



begin
    color_convert_AXILiteS_s_axi_U : component color_convert_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        c1_c1_V => c1_c1_V,
        c1_c2_V => c1_c2_V,
        c1_c3_V => c1_c3_V,
        c2_c1_V => c2_c1_V,
        c2_c2_V => c2_c2_V,
        c2_c3_V => c2_c3_V,
        c3_c1_V => c3_c1_V,
        c3_c2_V => c3_c2_V,
        c3_c3_V => c3_c3_V,
        bias_c1_V => bias_c1_V,
        bias_c2_V => bias_c2_V,
        bias_c3_V => bias_c3_V,
        clk => control,
        rst => ap_rst_n_control_inv);

    color_convert_mul_8ns_10s_18_2_U1 : component color_convert_mul_8ns_10s_18_2
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_243_p0,
        din1 => c1_c2_V_read_reg_974,
        ce => grp_fu_243_ce,
        dout => grp_fu_243_p2);

    color_convert_mul_8ns_10s_18_2_U2 : component color_convert_mul_8ns_10s_18_2
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_252_p0,
        din1 => c2_c2_V_read_reg_959,
        ce => grp_fu_252_ce,
        dout => grp_fu_252_p2);

    color_convert_mul_8ns_10s_18_2_U3 : component color_convert_mul_8ns_10s_18_2
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_261_p0,
        din1 => c3_c2_V_read_reg_944,
        ce => grp_fu_261_ce,
        dout => grp_fu_261_p2);

    color_convert_mac_muladd_8ns_10s_18s_19_1_U4 : component color_convert_mac_muladd_8ns_10s_18s_19_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_848_p0,
        din1 => ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter3,
        din2 => p_Val2_1_reg_1006,
        dout => grp_fu_848_p3);

    color_convert_mac_muladd_8ns_10s_19s_20_1_U5 : component color_convert_mac_muladd_8ns_10s_19s_20_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_856_p0,
        din1 => ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter4,
        din2 => p_Val2_11_reg_1026,
        dout => grp_fu_856_p3);

    color_convert_mac_muladd_8ns_10s_19s_20_1_U6 : component color_convert_mac_muladd_8ns_10s_19s_20_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_865_p0,
        din1 => ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter4,
        din2 => p_Val2_19_reg_1031,
        dout => grp_fu_865_p3);

    color_convert_mac_muladd_8ns_10s_18s_19_1_U7 : component color_convert_mac_muladd_8ns_10s_18s_19_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_874_p0,
        din1 => ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter3,
        din2 => p_Val2_16_reg_1016,
        dout => grp_fu_874_p3);

    color_convert_mac_muladd_8ns_10s_18s_19_1_U8 : component color_convert_mac_muladd_8ns_10s_18s_19_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_882_p0,
        din1 => ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter3,
        din2 => p_Val2_9_reg_1011,
        dout => grp_fu_882_p3);

    color_convert_mac_muladd_8ns_10s_19s_20_1_U9 : component color_convert_mac_muladd_8ns_10s_19s_20_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_890_p0,
        din1 => ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter4,
        din2 => p_Val2_2_reg_1021,
        dout => grp_fu_890_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_out_data_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_out_data_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))))) then 
                    ap_reg_ioackin_out_data_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = out_data_TREADY)))) then 
                    ap_reg_ioackin_out_data_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    bias_c1_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    bias_c2_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    bias_c3_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c1_c1_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c1_c2_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c1_c3_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c2_c1_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c2_c2_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c2_c3_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c3_c1_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c3_c2_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    c3_c3_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))) then
                Range1_all_ones_1_reg_1115 <= Range1_all_ones_1_fu_504_p2;
                Range1_all_ones_2_reg_1145 <= Range1_all_ones_2_fu_597_p2;
                Range1_all_ones_reg_1085 <= Range1_all_ones_fu_411_p2;
                Range1_all_zeros_1_reg_1121 <= Range1_all_zeros_1_fu_510_p2;
                Range1_all_zeros_2_reg_1151 <= Range1_all_zeros_2_fu_603_p2;
                Range1_all_zeros_reg_1091 <= Range1_all_zeros_fu_417_p2;
                ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter2 <= bias_c1_V_read_reg_934;
                ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter3 <= ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter2;
                ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter4 <= ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter3;
                ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter5 <= ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter4;
                ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter2 <= bias_c2_V_read_reg_929;
                ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter3 <= ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter2;
                ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter4 <= ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter3;
                ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter5 <= ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter4;
                ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter2 <= bias_c3_V_read_reg_924;
                ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter3 <= ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter2;
                ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter4 <= ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter3;
                ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter5 <= ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter4;
                ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter2 <= c1_c1_V_read_reg_979;
                ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter3 <= ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter2;
                ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter2 <= c1_c3_V_read_reg_969;
                ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter3 <= ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter2;
                ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter4 <= ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter3;
                ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter2 <= c2_c1_V_read_reg_964;
                ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter3 <= ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter2;
                ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter2 <= c2_c3_V_read_reg_954;
                ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter3 <= ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter2;
                ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter4 <= ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter3;
                ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter2 <= c3_c1_V_read_reg_949;
                ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter3 <= ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter2;
                ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter2 <= c3_c3_V_read_reg_939;
                ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter3 <= ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter2;
                ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter4 <= ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter3;
                ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter2 <= ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter1;
                ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter3 <= ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter2;
                ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter4 <= ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter3;
                ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter5 <= ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter4;
                ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter6 <= ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter5;
                ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter2 <= ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter1;
                ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter3 <= ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter2;
                ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter4 <= ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter3;
                ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter5 <= ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter4;
                ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter6 <= ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter5;
                ap_reg_ppstg_loc_V_2_reg_919_pp0_iter2 <= ap_reg_ppstg_loc_V_2_reg_919_pp0_iter1;
                ap_reg_ppstg_loc_V_2_reg_919_pp0_iter3 <= ap_reg_ppstg_loc_V_2_reg_919_pp0_iter2;
                ap_reg_ppstg_loc_V_2_reg_919_pp0_iter4 <= ap_reg_ppstg_loc_V_2_reg_919_pp0_iter3;
                ap_reg_ppstg_loc_V_reg_909_pp0_iter2 <= ap_reg_ppstg_loc_V_reg_909_pp0_iter1;
                ap_reg_ppstg_loc_V_reg_909_pp0_iter3 <= ap_reg_ppstg_loc_V_reg_909_pp0_iter2;
                carry_1_reg_1109 <= carry_1_fu_488_p2;
                carry_2_reg_1139 <= carry_2_fu_581_p2;
                carry_reg_1079 <= carry_fu_395_p2;
                p_Val2_15_reg_1103 <= p_Val2_15_fu_468_p2;
                p_Val2_16_reg_1016 <= grp_fu_261_p2;
                p_Val2_1_reg_1006 <= grp_fu_243_p2;
                p_Val2_23_reg_1133 <= p_Val2_23_fu_561_p2;
                p_Val2_7_reg_1073 <= p_Val2_7_fu_375_p2;
                p_Val2_9_reg_1011 <= grp_fu_252_p2;
                signbit_1_reg_1096 <= p_Val2_13_fu_434_p2(19 downto 19);
                signbit_2_reg_1126 <= p_Val2_21_fu_527_p2(19 downto 19);
                signbit_reg_1066 <= p_Val2_5_fu_341_p2(19 downto 19);
                tmp_28_reg_1041 <= grp_fu_890_p3(7 downto 7);
                tmp_32_reg_1051 <= grp_fu_856_p3(7 downto 7);
                tmp_36_reg_1061 <= grp_fu_865_p3(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then
                ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter1 <= in_data_last_V_tmp_reg_904;
                ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter1 <= in_data_user_V_tmp_reg_899;
                ap_reg_ppstg_loc_V_1_reg_914_pp0_iter1 <= loc_V_1_reg_914;
                ap_reg_ppstg_loc_V_2_reg_919_pp0_iter1 <= loc_V_2_reg_919;
                ap_reg_ppstg_loc_V_reg_909_pp0_iter1 <= loc_V_reg_909;
                bias_c1_V_read_reg_934 <= bias_c1_V_0_data_reg;
                bias_c2_V_read_reg_929 <= bias_c2_V_0_data_reg;
                bias_c3_V_read_reg_924 <= bias_c3_V_0_data_reg;
                c1_c1_V_read_reg_979 <= c1_c1_V_0_data_reg;
                c1_c2_V_read_reg_974 <= c1_c2_V_0_data_reg;
                c1_c3_V_read_reg_969 <= c1_c3_V_0_data_reg;
                c2_c1_V_read_reg_964 <= c2_c1_V_0_data_reg;
                c2_c2_V_read_reg_959 <= c2_c2_V_0_data_reg;
                c2_c3_V_read_reg_954 <= c2_c3_V_0_data_reg;
                c3_c1_V_read_reg_949 <= c3_c1_V_0_data_reg;
                c3_c2_V_read_reg_944 <= c3_c2_V_0_data_reg;
                c3_c3_V_read_reg_939 <= c3_c3_V_0_data_reg;
                in_data_last_V_tmp_reg_904 <= in_data_TLAST;
                in_data_user_V_tmp_reg_899 <= in_data_TUSER;
                loc_V_1_reg_914 <= in_data_TDATA(15 downto 8);
                loc_V_2_reg_919 <= in_data_TDATA(23 downto 16);
                loc_V_reg_909 <= loc_V_fu_213_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = bias_c1_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = bias_c1_V_0_vld_reg) and (ap_const_logic_1 = bias_c1_V_0_ack_out)))) then
                bias_c1_V_0_data_reg <= bias_c1_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = bias_c2_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = bias_c2_V_0_vld_reg) and (ap_const_logic_1 = bias_c2_V_0_ack_out)))) then
                bias_c2_V_0_data_reg <= bias_c2_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = bias_c3_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = bias_c3_V_0_vld_reg) and (ap_const_logic_1 = bias_c3_V_0_ack_out)))) then
                bias_c3_V_0_data_reg <= bias_c3_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c1_c1_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c1_c1_V_0_vld_reg) and (ap_const_logic_1 = c1_c1_V_0_ack_out)))) then
                c1_c1_V_0_data_reg <= c1_c1_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c1_c2_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c1_c2_V_0_vld_reg) and (ap_const_logic_1 = c1_c2_V_0_ack_out)))) then
                c1_c2_V_0_data_reg <= c1_c2_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c1_c3_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c1_c3_V_0_vld_reg) and (ap_const_logic_1 = c1_c3_V_0_ack_out)))) then
                c1_c3_V_0_data_reg <= c1_c3_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c2_c1_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c2_c1_V_0_vld_reg) and (ap_const_logic_1 = c2_c1_V_0_ack_out)))) then
                c2_c1_V_0_data_reg <= c2_c1_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c2_c2_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c2_c2_V_0_vld_reg) and (ap_const_logic_1 = c2_c2_V_0_ack_out)))) then
                c2_c2_V_0_data_reg <= c2_c2_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c2_c3_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c2_c3_V_0_vld_reg) and (ap_const_logic_1 = c2_c3_V_0_ack_out)))) then
                c2_c3_V_0_data_reg <= c2_c3_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c3_c1_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c3_c1_V_0_vld_reg) and (ap_const_logic_1 = c3_c1_V_0_ack_out)))) then
                c3_c1_V_0_data_reg <= c3_c1_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c3_c2_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c3_c2_V_0_vld_reg) and (ap_const_logic_1 = c3_c2_V_0_ack_out)))) then
                c3_c2_V_0_data_reg <= c3_c2_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = c3_c3_V_0_vld_reg)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = c3_c3_V_0_vld_reg) and (ap_const_logic_1 = c3_c3_V_0_ack_out)))) then
                c3_c3_V_0_data_reg <= c3_c3_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then
                p_Val2_11_reg_1026 <= grp_fu_882_p3;
                p_Val2_19_reg_1031 <= grp_fu_874_p3;
                p_Val2_2_reg_1021 <= grp_fu_848_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then
                p_Val2_12_reg_1046 <= grp_fu_856_p3;
                p_Val2_20_reg_1056 <= grp_fu_865_p3;
                p_Val2_4_reg_1036 <= grp_fu_890_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (in_data_TVALID, ap_CS_fsm, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    OP1_V_1_fu_237_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_loc_V_1_reg_914_pp0_iter1),18));
    OP1_V_2_fu_288_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_loc_V_2_reg_919_pp0_iter4),18));
    OP1_V_fu_267_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_loc_V_reg_909_pp0_iter3),18));
    Range1_all_ones_1_fu_504_p2 <= "1" when (tmp_15_fu_494_p4 = ap_const_lv4_F) else "0";
    Range1_all_ones_2_fu_597_p2 <= "1" when (tmp_24_fu_587_p4 = ap_const_lv4_F) else "0";
    Range1_all_ones_fu_411_p2 <= "1" when (tmp_2_fu_401_p4 = ap_const_lv4_F) else "0";
    Range1_all_zeros_1_fu_510_p2 <= "1" when (tmp_15_fu_494_p4 = ap_const_lv4_0) else "0";
    Range1_all_zeros_2_fu_603_p2 <= "1" when (tmp_24_fu_587_p4 = ap_const_lv4_0) else "0";
    Range1_all_zeros_fu_417_p2 <= "1" when (tmp_2_fu_401_p4 = ap_const_lv4_0) else "0";

    ap_rst_n_control_inv_assign_proc : process(ap_rst_n_control)
    begin
                ap_rst_n_control_inv <= not(ap_rst_n_control);
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_293_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_293 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_293)
    begin
        if (ap_sig_293) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_out_data_TREADY_assign_proc : process(out_data_TREADY, ap_reg_ioackin_out_data_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_out_data_TREADY)) then 
            ap_sig_ioackin_out_data_TREADY <= out_data_TREADY;
        else 
            ap_sig_ioackin_out_data_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    ap_sig_pprstidle_pp0 <= ap_const_logic_0;

    bias_c1_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            bias_c1_V_0_ack_out <= ap_const_logic_1;
        else 
            bias_c1_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    bias_c2_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            bias_c2_V_0_ack_out <= ap_const_logic_1;
        else 
            bias_c2_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    bias_c3_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            bias_c3_V_0_ack_out <= ap_const_logic_1;
        else 
            bias_c3_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_733_p2 <= (neg_src_not_fu_715_p2 or p_39_demorgan_i464_not_fu_727_p2);
    brmerge2_fu_809_p2 <= (neg_src_6_not_fu_791_p2 or p_39_demorgan_i488_not_fu_803_p2);
    brmerge_fu_657_p2 <= (neg_src_5_not_fu_639_p2 or p_39_demorgan_i_not_fu_651_p2);
    brmerge_i_i466_not_fu_721_p2 <= (p_39_demorgan_i1_fu_705_p2 and neg_src_not_fu_715_p2);
    brmerge_i_i490_not_fu_797_p2 <= (p_39_demorgan_i2_fu_781_p2 and neg_src_6_not_fu_791_p2);
    brmerge_i_i_not_fu_645_p2 <= (p_39_demorgan_i_fu_629_p2 and neg_src_5_not_fu_639_p2);

    c1_c1_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c1_c1_V_0_ack_out <= ap_const_logic_1;
        else 
            c1_c1_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c1_c2_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c1_c2_V_0_ack_out <= ap_const_logic_1;
        else 
            c1_c2_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c1_c3_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c1_c3_V_0_ack_out <= ap_const_logic_1;
        else 
            c1_c3_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c2_c1_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c2_c1_V_0_ack_out <= ap_const_logic_1;
        else 
            c2_c1_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c2_c2_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c2_c2_V_0_ack_out <= ap_const_logic_1;
        else 
            c2_c2_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c2_c3_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c2_c3_V_0_ack_out <= ap_const_logic_1;
        else 
            c2_c3_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c3_c1_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c3_c1_V_0_ack_out <= ap_const_logic_1;
        else 
            c3_c1_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c3_c2_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c3_c2_V_0_ack_out <= ap_const_logic_1;
        else 
            c3_c2_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c3_c3_V_0_ack_out_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            c3_c3_V_0_ack_out <= ap_const_logic_1;
        else 
            c3_c3_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    carry_1_fu_488_p2 <= (tmp_33_fu_460_p3 and tmp_14_fu_482_p2);
    carry_2_fu_581_p2 <= (tmp_37_fu_553_p3 and tmp_23_fu_575_p2);
    carry_fu_395_p2 <= (tmp_29_fu_367_p3 and tmp_5_fu_389_p2);
    deleted_zeros_1_fu_685_p3 <= 
        Range1_all_ones_1_reg_1115 when (carry_1_reg_1109(0) = '1') else 
        Range1_all_zeros_1_reg_1121;
    deleted_zeros_2_fu_761_p3 <= 
        Range1_all_ones_2_reg_1145 when (carry_2_reg_1139(0) = '1') else 
        Range1_all_zeros_2_reg_1151;
    deleted_zeros_fu_609_p3 <= 
        Range1_all_ones_reg_1085 when (carry_reg_1079(0) = '1') else 
        Range1_all_zeros_reg_1091;

    grp_fu_243_ce_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            grp_fu_243_ce <= ap_const_logic_1;
        else 
            grp_fu_243_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_243_p0 <= OP1_V_1_fu_237_p1(8 - 1 downto 0);

    grp_fu_252_ce_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            grp_fu_252_ce <= ap_const_logic_1;
        else 
            grp_fu_252_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_252_p0 <= OP1_V_1_fu_237_p1(8 - 1 downto 0);

    grp_fu_261_ce_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY)))))) then 
            grp_fu_261_ce <= ap_const_logic_1;
        else 
            grp_fu_261_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_261_p0 <= OP1_V_1_fu_237_p1(8 - 1 downto 0);
    grp_fu_848_p0 <= OP1_V_fu_267_p1(8 - 1 downto 0);
    grp_fu_856_p0 <= OP1_V_2_fu_288_p1(8 - 1 downto 0);
    grp_fu_865_p0 <= OP1_V_2_fu_288_p1(8 - 1 downto 0);
    grp_fu_874_p0 <= OP1_V_fu_267_p1(8 - 1 downto 0);
    grp_fu_882_p0 <= OP1_V_fu_267_p1(8 - 1 downto 0);
    grp_fu_890_p0 <= OP1_V_2_fu_288_p1(8 - 1 downto 0);

    in_data_TDATA_blk_n_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            in_data_TDATA_blk_n <= in_data_TVALID;
        else 
            in_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_data_TREADY_assign_proc : process(in_data_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it7, ap_sig_ioackin_out_data_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_const_logic_1) and not((((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_sig_ioackin_out_data_TREADY))))))) then 
            in_data_TREADY <= ap_const_logic_1;
        else 
            in_data_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_fu_213_p1 <= in_data_TDATA(8 - 1 downto 0);
    neg_src_5_not_fu_639_p2 <= (p_38_i_fu_614_p2 or signbit_not_fu_634_p2);
    neg_src_6_fu_700_p2 <= (signbit_1_reg_1096 and tmp_16_fu_694_p2);
    neg_src_6_not_fu_791_p2 <= (p_38_i2_fu_766_p2 or signbit_2_not_fu_786_p2);
    neg_src_7_fu_776_p2 <= (signbit_2_reg_1126 and tmp_25_fu_770_p2);
    neg_src_fu_624_p2 <= (signbit_reg_1066 and tmp_8_fu_618_p2);
    neg_src_not_fu_715_p2 <= (p_38_i1_fu_690_p2 or signbit_1_not_fu_710_p2);
    out1_V_fu_677_p3 <= 
        p_mux_fu_663_p3 when (brmerge_fu_657_p2(0) = '1') else 
        p_s_fu_670_p3;
    out2_V_fu_753_p3 <= 
        p_mux1_fu_739_p3 when (brmerge1_fu_733_p2(0) = '1') else 
        p_1_fu_746_p3;
    out3_V_fu_829_p3 <= 
        p_mux2_fu_815_p3 when (brmerge2_fu_809_p2(0) = '1') else 
        p_2_fu_822_p3;
    out_data_TDATA <= ((out3_V_fu_829_p3 & out2_V_fu_753_p3) & out1_V_fu_677_p3);

    out_data_TDATA_blk_n_assign_proc : process(out_data_TREADY, ap_reg_ppiten_pp0_it7)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            out_data_TDATA_blk_n <= out_data_TREADY;
        else 
            out_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_data_TLAST <= ap_reg_ppstg_in_data_last_V_tmp_reg_904_pp0_iter6;
    out_data_TUSER <= ap_reg_ppstg_in_data_user_V_tmp_reg_899_pp0_iter6;

    out_data_TVALID_assign_proc : process(in_data_TVALID, ap_reg_ppiten_pp0_it7, ap_reg_ioackin_out_data_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_1 = ap_const_logic_1) and (in_data_TVALID = ap_const_logic_0))) and (ap_const_logic_0 = ap_reg_ioackin_out_data_TREADY)))) then 
            out_data_TVALID <= ap_const_logic_1;
        else 
            out_data_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_746_p3 <= 
        ap_const_lv8_0 when (neg_src_6_fu_700_p2(0) = '1') else 
        p_Val2_15_reg_1103;
    p_2_fu_822_p3 <= 
        ap_const_lv8_0 when (neg_src_7_fu_776_p2(0) = '1') else 
        p_Val2_23_reg_1133;
    p_38_i1_fu_690_p2 <= (carry_1_reg_1109 and Range1_all_ones_1_reg_1115);
    p_38_i2_fu_766_p2 <= (carry_2_reg_1139 and Range1_all_ones_2_reg_1145);
    p_38_i_fu_614_p2 <= (carry_reg_1079 and Range1_all_ones_reg_1085);
    p_39_demorgan_i1_fu_705_p2 <= (deleted_zeros_1_fu_685_p3 or signbit_1_reg_1096);
    p_39_demorgan_i2_fu_781_p2 <= (deleted_zeros_2_fu_761_p3 or signbit_2_reg_1126);
    p_39_demorgan_i464_not_fu_727_p2 <= (p_39_demorgan_i1_fu_705_p2 xor ap_const_lv1_1);
    p_39_demorgan_i488_not_fu_803_p2 <= (p_39_demorgan_i2_fu_781_p2 xor ap_const_lv1_1);
    p_39_demorgan_i_fu_629_p2 <= (deleted_zeros_fu_609_p3 or signbit_reg_1066);
    p_39_demorgan_i_not_fu_651_p2 <= (p_39_demorgan_i_fu_629_p2 xor ap_const_lv1_1);
    p_Val2_13_fu_434_p2 <= std_logic_vector(signed(p_Val2_12_reg_1046) + signed(tmp_16_cast_fu_430_p1));
    p_Val2_14_fu_447_p4 <= p_Val2_13_fu_434_p2(15 downto 8);
    p_Val2_15_fu_468_p2 <= std_logic_vector(unsigned(tmp_13_fu_457_p1) + unsigned(p_Val2_14_fu_447_p4));
    p_Val2_21_fu_527_p2 <= std_logic_vector(signed(p_Val2_20_reg_1056) + signed(tmp_27_cast_fu_523_p1));
    p_Val2_22_fu_540_p4 <= p_Val2_21_fu_527_p2(15 downto 8);
    p_Val2_23_fu_561_p2 <= std_logic_vector(unsigned(tmp_22_fu_550_p1) + unsigned(p_Val2_22_fu_540_p4));
    p_Val2_5_fu_341_p2 <= std_logic_vector(signed(p_Val2_4_reg_1036) + signed(tmp_3_cast_fu_337_p1));
    p_Val2_6_fu_354_p4 <= p_Val2_5_fu_341_p2(15 downto 8);
    p_Val2_7_fu_375_p2 <= std_logic_vector(unsigned(tmp_7_fu_364_p1) + unsigned(p_Val2_6_fu_354_p4));
    p_mux1_fu_739_p3 <= 
        p_Val2_15_reg_1103 when (brmerge_i_i466_not_fu_721_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_mux2_fu_815_p3 <= 
        p_Val2_23_reg_1133 when (brmerge_i_i490_not_fu_797_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_mux_fu_663_p3 <= 
        p_Val2_7_reg_1073 when (brmerge_i_i_not_fu_645_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_s_fu_670_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_624_p2(0) = '1') else 
        p_Val2_7_reg_1073;
    signbit_1_not_fu_710_p2 <= (signbit_1_reg_1096 xor ap_const_lv1_1);
    signbit_2_not_fu_786_p2 <= (signbit_2_reg_1126 xor ap_const_lv1_1);
    signbit_not_fu_634_p2 <= (signbit_reg_1066 xor ap_const_lv1_1);
    tmp_12_fu_423_p3 <= (ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter5 & ap_const_lv8_0);
    tmp_13_fu_457_p1 <= std_logic_vector(resize(unsigned(tmp_32_reg_1051),8));
    tmp_14_fu_482_p2 <= (tmp_34_fu_474_p3 xor ap_const_lv1_1);
    tmp_15_fu_494_p4 <= p_Val2_13_fu_434_p2(19 downto 16);
        tmp_16_cast_fu_430_p1 <= std_logic_vector(resize(signed(tmp_12_fu_423_p3),20));

    tmp_16_fu_694_p2 <= (p_38_i1_fu_690_p2 xor ap_const_lv1_1);
    tmp_21_fu_516_p3 <= (ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter5 & ap_const_lv8_0);
    tmp_22_fu_550_p1 <= std_logic_vector(resize(unsigned(tmp_36_reg_1061),8));
    tmp_23_fu_575_p2 <= (tmp_38_fu_567_p3 xor ap_const_lv1_1);
    tmp_24_fu_587_p4 <= p_Val2_21_fu_527_p2(19 downto 16);
    tmp_25_fu_770_p2 <= (p_38_i2_fu_766_p2 xor ap_const_lv1_1);
        tmp_27_cast_fu_523_p1 <= std_logic_vector(resize(signed(tmp_21_fu_516_p3),20));

    tmp_29_fu_367_p3 <= p_Val2_5_fu_341_p2(15 downto 15);
    tmp_2_fu_401_p4 <= p_Val2_5_fu_341_p2(19 downto 16);
    tmp_30_fu_381_p3 <= p_Val2_7_fu_375_p2(7 downto 7);
    tmp_33_fu_460_p3 <= p_Val2_13_fu_434_p2(15 downto 15);
    tmp_34_fu_474_p3 <= p_Val2_15_fu_468_p2(7 downto 7);
    tmp_37_fu_553_p3 <= p_Val2_21_fu_527_p2(15 downto 15);
    tmp_38_fu_567_p3 <= p_Val2_23_fu_561_p2(7 downto 7);
        tmp_3_cast_fu_337_p1 <= std_logic_vector(resize(signed(tmp_3_fu_330_p3),20));

    tmp_3_fu_330_p3 <= (ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter5 & ap_const_lv8_0);
    tmp_5_fu_389_p2 <= (tmp_30_fu_381_p3 xor ap_const_lv1_1);
    tmp_7_fu_364_p1 <= std_logic_vector(resize(unsigned(tmp_28_reg_1041),8));
    tmp_8_fu_618_p2 <= (p_38_i_fu_614_p2 xor ap_const_lv1_1);
end behav;
