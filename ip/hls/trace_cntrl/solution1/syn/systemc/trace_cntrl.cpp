// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "trace_cntrl.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic trace_cntrl::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic trace_cntrl::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> trace_cntrl::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> trace_cntrl::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<3> trace_cntrl::ap_ST_st4_fsm_2 = "100";
const sc_lv<32> trace_cntrl::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> trace_cntrl::ap_const_lv1_1 = "1";
const sc_lv<32> trace_cntrl::ap_const_lv32_1 = "1";
const sc_lv<1> trace_cntrl::ap_const_lv1_0 = "0";
const int trace_cntrl::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> trace_cntrl::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> trace_cntrl::ap_const_lv32_2 = "10";

trace_cntrl::trace_cntrl(sc_module_name name) : sc_module(name), mVcdFile(0) {
    trace_cntrl_trace_cntrl_s_axi_U = new trace_cntrl_trace_cntrl_s_axi<C_S_AXI_TRACE_CNTRL_ADDR_WIDTH,C_S_AXI_TRACE_CNTRL_DATA_WIDTH>("trace_cntrl_trace_cntrl_s_axi_U");
    trace_cntrl_trace_cntrl_s_axi_U->AWVALID(s_axi_trace_cntrl_AWVALID);
    trace_cntrl_trace_cntrl_s_axi_U->AWREADY(s_axi_trace_cntrl_AWREADY);
    trace_cntrl_trace_cntrl_s_axi_U->AWADDR(s_axi_trace_cntrl_AWADDR);
    trace_cntrl_trace_cntrl_s_axi_U->WVALID(s_axi_trace_cntrl_WVALID);
    trace_cntrl_trace_cntrl_s_axi_U->WREADY(s_axi_trace_cntrl_WREADY);
    trace_cntrl_trace_cntrl_s_axi_U->WDATA(s_axi_trace_cntrl_WDATA);
    trace_cntrl_trace_cntrl_s_axi_U->WSTRB(s_axi_trace_cntrl_WSTRB);
    trace_cntrl_trace_cntrl_s_axi_U->ARVALID(s_axi_trace_cntrl_ARVALID);
    trace_cntrl_trace_cntrl_s_axi_U->ARREADY(s_axi_trace_cntrl_ARREADY);
    trace_cntrl_trace_cntrl_s_axi_U->ARADDR(s_axi_trace_cntrl_ARADDR);
    trace_cntrl_trace_cntrl_s_axi_U->RVALID(s_axi_trace_cntrl_RVALID);
    trace_cntrl_trace_cntrl_s_axi_U->RREADY(s_axi_trace_cntrl_RREADY);
    trace_cntrl_trace_cntrl_s_axi_U->RDATA(s_axi_trace_cntrl_RDATA);
    trace_cntrl_trace_cntrl_s_axi_U->RRESP(s_axi_trace_cntrl_RRESP);
    trace_cntrl_trace_cntrl_s_axi_U->BVALID(s_axi_trace_cntrl_BVALID);
    trace_cntrl_trace_cntrl_s_axi_U->BREADY(s_axi_trace_cntrl_BREADY);
    trace_cntrl_trace_cntrl_s_axi_U->BRESP(s_axi_trace_cntrl_BRESP);
    trace_cntrl_trace_cntrl_s_axi_U->ACLK(ap_clk);
    trace_cntrl_trace_cntrl_s_axi_U->ARESET(ap_rst_n_inv);
    trace_cntrl_trace_cntrl_s_axi_U->ACLK_EN(ap_var_for_const0);
    trace_cntrl_trace_cntrl_s_axi_U->ap_start(ap_start);
    trace_cntrl_trace_cntrl_s_axi_U->interrupt(interrupt);
    trace_cntrl_trace_cntrl_s_axi_U->ap_ready(ap_ready);
    trace_cntrl_trace_cntrl_s_axi_U->ap_done(ap_done);
    trace_cntrl_trace_cntrl_s_axi_U->ap_idle(ap_idle);
    trace_cntrl_trace_cntrl_s_axi_U->data_compare_V(data_compare_V);
    trace_cntrl_trace_cntrl_s_axi_U->length_r(length_r);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_TDATA_blk_n);
    sensitive << ( A_TVALID );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_1_fu_171_p2 );

    SC_METHOD(thread_A_TREADY);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_1_fu_171_p2 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( ap_sig_ioackin_B_TREADY );

    SC_METHOD(thread_A_temp_last_V_fu_223_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_1_fu_171_p2 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( tmp_reg_269 );
    sensitive << ( ap_sig_121 );
    sensitive << ( ap_sig_ioackin_B_TREADY );
    sensitive << ( tmp_7_fu_214_p2 );
    sensitive << ( samples_fu_74 );

    SC_METHOD(thread_B_TDATA);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_data_V_reg_284 );

    SC_METHOD(thread_B_TDATA_blk_n);
    sensitive << ( B_TREADY );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );

    SC_METHOD(thread_B_TDEST);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_dest_V_reg_309 );

    SC_METHOD(thread_B_TID);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_id_V_reg_304 );

    SC_METHOD(thread_B_TKEEP);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_keep_V_reg_289 );

    SC_METHOD(thread_B_TLAST);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_last_V_reg_319 );

    SC_METHOD(thread_B_TSTRB);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_strb_V_reg_294 );

    SC_METHOD(thread_B_TUSER);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( A_temp_user_V_reg_299 );

    SC_METHOD(thread_B_TVALID);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( ap_reg_ioackin_B_TREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_121);
    sensitive << ( A_TVALID );
    sensitive << ( tmp_1_fu_171_p2 );

    SC_METHOD(thread_ap_sig_20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_280);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_53 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_20 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_2);
    sensitive << ( ap_sig_280 );

    SC_METHOD(thread_ap_sig_ioackin_B_TREADY);
    sensitive << ( B_TREADY );
    sensitive << ( ap_reg_ioackin_B_TREADY );

    SC_METHOD(thread_i_1_fu_234_p2);
    sensitive << ( i_fu_78 );

    SC_METHOD(thread_match_phi_fu_141_p4);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( match_reg_137 );
    sensitive << ( tmp_1_reg_280 );

    SC_METHOD(thread_samples_1_fu_228_p2);
    sensitive << ( samples_fu_74 );

    SC_METHOD(thread_tmp_1_fu_171_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( length_read_reg_264 );
    sensitive << ( ap_sig_121 );
    sensitive << ( ap_sig_ioackin_B_TREADY );
    sensitive << ( i_fu_78 );

    SC_METHOD(thread_tmp_2_fu_154_p1);
    sensitive << ( data_compare_V );

    SC_METHOD(thread_tmp_3_fu_200_p1);
    sensitive << ( A_TDATA );

    SC_METHOD(thread_tmp_5_fu_204_p2);
    sensitive << ( tmp_2_reg_274 );
    sensitive << ( tmp_3_fu_200_p1 );

    SC_METHOD(thread_tmp_6_fu_209_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_1_fu_171_p2 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( tmp_2_reg_274 );
    sensitive << ( ap_sig_121 );
    sensitive << ( ap_sig_ioackin_B_TREADY );
    sensitive << ( tmp_5_fu_204_p2 );

    SC_METHOD(thread_tmp_7_fu_214_p2);
    sensitive << ( match_phi_fu_141_p4 );
    sensitive << ( tmp_6_fu_209_p2 );

    SC_METHOD(thread_tmp_fu_148_p2);
    sensitive << ( length_r );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_1_fu_171_p2 );
    sensitive << ( tmp_7_reg_314 );
    sensitive << ( ap_sig_121 );
    sensitive << ( ap_sig_ioackin_B_TREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ioackin_B_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "trace_cntrl_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, A_TDATA, "(port)A_TDATA");
    sc_trace(mVcdFile, A_TVALID, "(port)A_TVALID");
    sc_trace(mVcdFile, A_TREADY, "(port)A_TREADY");
    sc_trace(mVcdFile, A_TKEEP, "(port)A_TKEEP");
    sc_trace(mVcdFile, A_TSTRB, "(port)A_TSTRB");
    sc_trace(mVcdFile, A_TUSER, "(port)A_TUSER");
    sc_trace(mVcdFile, A_TLAST, "(port)A_TLAST");
    sc_trace(mVcdFile, A_TID, "(port)A_TID");
    sc_trace(mVcdFile, A_TDEST, "(port)A_TDEST");
    sc_trace(mVcdFile, B_TDATA, "(port)B_TDATA");
    sc_trace(mVcdFile, B_TVALID, "(port)B_TVALID");
    sc_trace(mVcdFile, B_TREADY, "(port)B_TREADY");
    sc_trace(mVcdFile, B_TKEEP, "(port)B_TKEEP");
    sc_trace(mVcdFile, B_TSTRB, "(port)B_TSTRB");
    sc_trace(mVcdFile, B_TUSER, "(port)B_TUSER");
    sc_trace(mVcdFile, B_TLAST, "(port)B_TLAST");
    sc_trace(mVcdFile, B_TID, "(port)B_TID");
    sc_trace(mVcdFile, B_TDEST, "(port)B_TDEST");
    sc_trace(mVcdFile, s_axi_trace_cntrl_AWVALID, "(port)s_axi_trace_cntrl_AWVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_AWREADY, "(port)s_axi_trace_cntrl_AWREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_AWADDR, "(port)s_axi_trace_cntrl_AWADDR");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WVALID, "(port)s_axi_trace_cntrl_WVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WREADY, "(port)s_axi_trace_cntrl_WREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WDATA, "(port)s_axi_trace_cntrl_WDATA");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WSTRB, "(port)s_axi_trace_cntrl_WSTRB");
    sc_trace(mVcdFile, s_axi_trace_cntrl_ARVALID, "(port)s_axi_trace_cntrl_ARVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_ARREADY, "(port)s_axi_trace_cntrl_ARREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_ARADDR, "(port)s_axi_trace_cntrl_ARADDR");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RVALID, "(port)s_axi_trace_cntrl_RVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RREADY, "(port)s_axi_trace_cntrl_RREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RDATA, "(port)s_axi_trace_cntrl_RDATA");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RRESP, "(port)s_axi_trace_cntrl_RRESP");
    sc_trace(mVcdFile, s_axi_trace_cntrl_BVALID, "(port)s_axi_trace_cntrl_BVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_BREADY, "(port)s_axi_trace_cntrl_BREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_BRESP, "(port)s_axi_trace_cntrl_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_20, "ap_sig_20");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, data_compare_V, "data_compare_V");
    sc_trace(mVcdFile, length_r, "length_r");
    sc_trace(mVcdFile, A_TDATA_blk_n, "A_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_53, "ap_sig_53");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, tmp_1_fu_171_p2, "tmp_1_fu_171_p2");
    sc_trace(mVcdFile, B_TDATA_blk_n, "B_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_7_reg_314, "tmp_7_reg_314");
    sc_trace(mVcdFile, match_reg_137, "match_reg_137");
    sc_trace(mVcdFile, length_read_reg_264, "length_read_reg_264");
    sc_trace(mVcdFile, tmp_fu_148_p2, "tmp_fu_148_p2");
    sc_trace(mVcdFile, tmp_reg_269, "tmp_reg_269");
    sc_trace(mVcdFile, tmp_2_fu_154_p1, "tmp_2_fu_154_p1");
    sc_trace(mVcdFile, tmp_2_reg_274, "tmp_2_reg_274");
    sc_trace(mVcdFile, tmp_1_reg_280, "tmp_1_reg_280");
    sc_trace(mVcdFile, ap_sig_121, "ap_sig_121");
    sc_trace(mVcdFile, ap_sig_ioackin_B_TREADY, "ap_sig_ioackin_B_TREADY");
    sc_trace(mVcdFile, A_temp_data_V_reg_284, "A_temp_data_V_reg_284");
    sc_trace(mVcdFile, A_temp_keep_V_reg_289, "A_temp_keep_V_reg_289");
    sc_trace(mVcdFile, A_temp_strb_V_reg_294, "A_temp_strb_V_reg_294");
    sc_trace(mVcdFile, A_temp_user_V_reg_299, "A_temp_user_V_reg_299");
    sc_trace(mVcdFile, A_temp_id_V_reg_304, "A_temp_id_V_reg_304");
    sc_trace(mVcdFile, A_temp_dest_V_reg_309, "A_temp_dest_V_reg_309");
    sc_trace(mVcdFile, tmp_7_fu_214_p2, "tmp_7_fu_214_p2");
    sc_trace(mVcdFile, A_temp_last_V_fu_223_p2, "A_temp_last_V_fu_223_p2");
    sc_trace(mVcdFile, A_temp_last_V_reg_319, "A_temp_last_V_reg_319");
    sc_trace(mVcdFile, match_phi_fu_141_p4, "match_phi_fu_141_p4");
    sc_trace(mVcdFile, samples_fu_74, "samples_fu_74");
    sc_trace(mVcdFile, samples_1_fu_228_p2, "samples_1_fu_228_p2");
    sc_trace(mVcdFile, i_fu_78, "i_fu_78");
    sc_trace(mVcdFile, i_1_fu_234_p2, "i_1_fu_234_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_B_TREADY, "ap_reg_ioackin_B_TREADY");
    sc_trace(mVcdFile, tmp_3_fu_200_p1, "tmp_3_fu_200_p1");
    sc_trace(mVcdFile, tmp_5_fu_204_p2, "tmp_5_fu_204_p2");
    sc_trace(mVcdFile, tmp_6_fu_209_p2, "tmp_6_fu_209_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_2, "ap_sig_cseq_ST_st4_fsm_2");
    sc_trace(mVcdFile, ap_sig_280, "ap_sig_280");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("trace_cntrl.hdltvin.dat");
    mHdltvoutHandle.open("trace_cntrl.hdltvout.dat");
}

trace_cntrl::~trace_cntrl() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete trace_cntrl_trace_cntrl_s_axi_U;
}

void trace_cntrl::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void trace_cntrl::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_B_TREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
              !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read())))))) {
            ap_reg_ioackin_B_TREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_121.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, B_TREADY.read())))) {
            ap_reg_ioackin_B_TREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && 
                     !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read())))))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_214_p2.read()))) {
        i_fu_78 = i_1_fu_234_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_fu_78 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_280.read()))) {
        match_reg_137 = tmp_7_reg_314.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        match_reg_137 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_214_p2.read()))) {
        samples_fu_74 = samples_1_fu_228_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        samples_fu_74 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
        A_temp_data_V_reg_284 = A_TDATA.read();
        A_temp_dest_V_reg_309 = A_TDEST.read();
        A_temp_id_V_reg_304 = A_TID.read();
        A_temp_keep_V_reg_289 = A_TKEEP.read();
        A_temp_strb_V_reg_294 = A_TSTRB.read();
        A_temp_user_V_reg_299 = A_TUSER.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_214_p2.read()))) {
        A_temp_last_V_reg_319 = A_temp_last_V_fu_223_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        length_read_reg_264 = length_r.read();
        tmp_2_reg_274 = tmp_2_fu_154_p1.read();
        tmp_reg_269 = tmp_fu_148_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
        tmp_1_reg_280 = tmp_1_fu_171_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
        tmp_7_reg_314 = tmp_7_fu_214_p2.read();
    }
}

void trace_cntrl::thread_A_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0))) {
        A_TDATA_blk_n = A_TVALID.read();
    } else {
        A_TDATA_blk_n = ap_const_logic_1;
    }
}

void trace_cntrl::thread_A_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read())))))) {
        A_TREADY = ap_const_logic_1;
    } else {
        A_TREADY = ap_const_logic_0;
    }
}

void trace_cntrl::thread_A_temp_last_V_fu_223_p2() {
    A_temp_last_V_fu_223_p2 = (!samples_fu_74.read().is_01() || !tmp_reg_269.read().is_01())? sc_lv<1>(): sc_lv<1>(samples_fu_74.read() == tmp_reg_269.read());
}

void trace_cntrl::thread_B_TDATA() {
    B_TDATA = A_temp_data_V_reg_284.read();
}

void trace_cntrl::thread_B_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()))) {
        B_TDATA_blk_n = B_TREADY.read();
    } else {
        B_TDATA_blk_n = ap_const_logic_1;
    }
}

void trace_cntrl::thread_B_TDEST() {
    B_TDEST = A_temp_dest_V_reg_309.read();
}

void trace_cntrl::thread_B_TID() {
    B_TID = A_temp_id_V_reg_304.read();
}

void trace_cntrl::thread_B_TKEEP() {
    B_TKEEP = A_temp_keep_V_reg_289.read();
}

void trace_cntrl::thread_B_TLAST() {
    B_TLAST = A_temp_last_V_reg_319.read();
}

void trace_cntrl::thread_B_TSTRB() {
    B_TSTRB = A_temp_strb_V_reg_294.read();
}

void trace_cntrl::thread_B_TUSER() {
    B_TUSER = A_temp_user_V_reg_299.read();
}

void trace_cntrl::thread_B_TVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_121.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_B_TREADY.read())))) {
        B_TVALID = ap_const_logic_1;
    } else {
        B_TVALID = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void trace_cntrl::thread_ap_sig_121() {
    ap_sig_121 = (!esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(A_TVALID.read(), ap_const_logic_0));
}

void trace_cntrl::thread_ap_sig_20() {
    ap_sig_20 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void trace_cntrl::thread_ap_sig_280() {
    ap_sig_280 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void trace_cntrl::thread_ap_sig_53() {
    ap_sig_53 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void trace_cntrl::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_53.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_20.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_sig_cseq_ST_st4_fsm_2() {
    if (ap_sig_280.read()) {
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_0;
    }
}

void trace_cntrl::thread_ap_sig_ioackin_B_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_B_TREADY.read())) {
        ap_sig_ioackin_B_TREADY = B_TREADY.read();
    } else {
        ap_sig_ioackin_B_TREADY = ap_const_logic_1;
    }
}

void trace_cntrl::thread_i_1_fu_234_p2() {
    i_1_fu_234_p2 = (!i_fu_78.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_fu_78.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void trace_cntrl::thread_match_phi_fu_141_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_280.read()))) {
        match_phi_fu_141_p4 = tmp_7_reg_314.read();
    } else {
        match_phi_fu_141_p4 = match_reg_137.read();
    }
}

void trace_cntrl::thread_samples_1_fu_228_p2() {
    samples_1_fu_228_p2 = (!samples_fu_74.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(samples_fu_74.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void trace_cntrl::thread_tmp_1_fu_171_p2() {
    tmp_1_fu_171_p2 = (!i_fu_78.read().is_01() || !length_read_reg_264.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_fu_78.read()) < sc_bigint<32>(length_read_reg_264.read()));
}

void trace_cntrl::thread_tmp_2_fu_154_p1() {
    tmp_2_fu_154_p1 = data_compare_V.read().range(32-1, 0);
}

void trace_cntrl::thread_tmp_3_fu_200_p1() {
    tmp_3_fu_200_p1 = A_TDATA.read().range(32-1, 0);
}

void trace_cntrl::thread_tmp_5_fu_204_p2() {
    tmp_5_fu_204_p2 = (tmp_2_reg_274.read() & tmp_3_fu_200_p1.read());
}

void trace_cntrl::thread_tmp_6_fu_209_p2() {
    tmp_6_fu_209_p2 = (!tmp_5_fu_204_p2.read().is_01() || !tmp_2_reg_274.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_204_p2.read() == tmp_2_reg_274.read());
}

void trace_cntrl::thread_tmp_7_fu_214_p2() {
    tmp_7_fu_214_p2 = (tmp_6_fu_209_p2.read() | match_phi_fu_141_p4.read());
}

void trace_cntrl::thread_tmp_fu_148_p2() {
    tmp_fu_148_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !length_r.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(length_r.read()));
}

void trace_cntrl::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(tmp_1_fu_171_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_121.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_314.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_B_TREADY.read()))))) {
                ap_NS_fsm = ap_ST_st4_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void trace_cntrl::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TDATA\" :  \"" << A_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TVALID\" :  \"" << A_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"A_TREADY\" :  \"" << A_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TKEEP\" :  \"" << A_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TSTRB\" :  \"" << A_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TUSER\" :  \"" << A_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TLAST\" :  \"" << A_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TID\" :  \"" << A_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_TDEST\" :  \"" << A_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TDATA\" :  \"" << B_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TVALID\" :  \"" << B_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_TREADY\" :  \"" << B_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TKEEP\" :  \"" << B_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TSTRB\" :  \"" << B_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TUSER\" :  \"" << B_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TLAST\" :  \"" << B_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TID\" :  \"" << B_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_TDEST\" :  \"" << B_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_AWVALID\" :  \"" << s_axi_trace_cntrl_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_AWREADY\" :  \"" << s_axi_trace_cntrl_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_AWADDR\" :  \"" << s_axi_trace_cntrl_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_WVALID\" :  \"" << s_axi_trace_cntrl_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_WREADY\" :  \"" << s_axi_trace_cntrl_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_WDATA\" :  \"" << s_axi_trace_cntrl_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_WSTRB\" :  \"" << s_axi_trace_cntrl_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_ARVALID\" :  \"" << s_axi_trace_cntrl_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_ARREADY\" :  \"" << s_axi_trace_cntrl_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_ARADDR\" :  \"" << s_axi_trace_cntrl_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_RVALID\" :  \"" << s_axi_trace_cntrl_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_RREADY\" :  \"" << s_axi_trace_cntrl_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_RDATA\" :  \"" << s_axi_trace_cntrl_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_RRESP\" :  \"" << s_axi_trace_cntrl_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_BVALID\" :  \"" << s_axi_trace_cntrl_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_BREADY\" :  \"" << s_axi_trace_cntrl_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_BRESP\" :  \"" << s_axi_trace_cntrl_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

