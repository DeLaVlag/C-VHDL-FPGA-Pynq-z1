// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _trace_cntrl_HH_
#define _trace_cntrl_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "trace_cntrl_trace_cntrl_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_TRACE_CNTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_TRACE_CNTRL_DATA_WIDTH = 32>
struct trace_cntrl : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<64> > A_TDATA;
    sc_in< sc_logic > A_TVALID;
    sc_out< sc_logic > A_TREADY;
    sc_in< sc_lv<8> > A_TKEEP;
    sc_in< sc_lv<8> > A_TSTRB;
    sc_in< sc_lv<2> > A_TUSER;
    sc_in< sc_lv<1> > A_TLAST;
    sc_in< sc_lv<5> > A_TID;
    sc_in< sc_lv<1> > A_TDEST;
    sc_out< sc_lv<64> > B_TDATA;
    sc_out< sc_logic > B_TVALID;
    sc_in< sc_logic > B_TREADY;
    sc_out< sc_lv<8> > B_TKEEP;
    sc_out< sc_lv<8> > B_TSTRB;
    sc_out< sc_lv<2> > B_TUSER;
    sc_out< sc_lv<1> > B_TLAST;
    sc_out< sc_lv<5> > B_TID;
    sc_out< sc_lv<1> > B_TDEST;
    sc_in< sc_logic > s_axi_trace_cntrl_AWVALID;
    sc_out< sc_logic > s_axi_trace_cntrl_AWREADY;
    sc_in< sc_uint<C_S_AXI_TRACE_CNTRL_ADDR_WIDTH> > s_axi_trace_cntrl_AWADDR;
    sc_in< sc_logic > s_axi_trace_cntrl_WVALID;
    sc_out< sc_logic > s_axi_trace_cntrl_WREADY;
    sc_in< sc_uint<C_S_AXI_TRACE_CNTRL_DATA_WIDTH> > s_axi_trace_cntrl_WDATA;
    sc_in< sc_uint<C_S_AXI_TRACE_CNTRL_DATA_WIDTH/8> > s_axi_trace_cntrl_WSTRB;
    sc_in< sc_logic > s_axi_trace_cntrl_ARVALID;
    sc_out< sc_logic > s_axi_trace_cntrl_ARREADY;
    sc_in< sc_uint<C_S_AXI_TRACE_CNTRL_ADDR_WIDTH> > s_axi_trace_cntrl_ARADDR;
    sc_out< sc_logic > s_axi_trace_cntrl_RVALID;
    sc_in< sc_logic > s_axi_trace_cntrl_RREADY;
    sc_out< sc_uint<C_S_AXI_TRACE_CNTRL_DATA_WIDTH> > s_axi_trace_cntrl_RDATA;
    sc_out< sc_lv<2> > s_axi_trace_cntrl_RRESP;
    sc_out< sc_logic > s_axi_trace_cntrl_BVALID;
    sc_in< sc_logic > s_axi_trace_cntrl_BREADY;
    sc_out< sc_lv<2> > s_axi_trace_cntrl_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    trace_cntrl(sc_module_name name);
    SC_HAS_PROCESS(trace_cntrl);

    ~trace_cntrl();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    trace_cntrl_trace_cntrl_s_axi<C_S_AXI_TRACE_CNTRL_ADDR_WIDTH,C_S_AXI_TRACE_CNTRL_DATA_WIDTH>* trace_cntrl_trace_cntrl_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_20;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<64> > data_compare_V;
    sc_signal< sc_lv<32> > length_r;
    sc_signal< sc_logic > A_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_53;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<1> > tmp_1_fu_171_p2;
    sc_signal< sc_logic > B_TDATA_blk_n;
    sc_signal< sc_lv<1> > tmp_7_reg_314;
    sc_signal< sc_lv<1> > match_reg_137;
    sc_signal< sc_lv<32> > length_read_reg_264;
    sc_signal< sc_lv<32> > tmp_fu_148_p2;
    sc_signal< sc_lv<32> > tmp_reg_269;
    sc_signal< sc_lv<32> > tmp_2_fu_154_p1;
    sc_signal< sc_lv<32> > tmp_2_reg_274;
    sc_signal< sc_lv<1> > tmp_1_reg_280;
    sc_signal< bool > ap_sig_121;
    sc_signal< sc_logic > ap_sig_ioackin_B_TREADY;
    sc_signal< sc_lv<64> > A_temp_data_V_reg_284;
    sc_signal< sc_lv<8> > A_temp_keep_V_reg_289;
    sc_signal< sc_lv<8> > A_temp_strb_V_reg_294;
    sc_signal< sc_lv<2> > A_temp_user_V_reg_299;
    sc_signal< sc_lv<5> > A_temp_id_V_reg_304;
    sc_signal< sc_lv<1> > A_temp_dest_V_reg_309;
    sc_signal< sc_lv<1> > tmp_7_fu_214_p2;
    sc_signal< sc_lv<1> > A_temp_last_V_fu_223_p2;
    sc_signal< sc_lv<1> > A_temp_last_V_reg_319;
    sc_signal< sc_lv<1> > match_phi_fu_141_p4;
    sc_signal< sc_lv<32> > samples_fu_74;
    sc_signal< sc_lv<32> > samples_1_fu_228_p2;
    sc_signal< sc_lv<32> > i_fu_78;
    sc_signal< sc_lv<32> > i_1_fu_234_p2;
    sc_signal< sc_logic > ap_reg_ioackin_B_TREADY;
    sc_signal< sc_lv<32> > tmp_3_fu_200_p1;
    sc_signal< sc_lv<32> > tmp_5_fu_204_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_209_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_2;
    sc_signal< bool > ap_sig_280;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st4_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_TDATA_blk_n();
    void thread_A_TREADY();
    void thread_A_temp_last_V_fu_223_p2();
    void thread_B_TDATA();
    void thread_B_TDATA_blk_n();
    void thread_B_TDEST();
    void thread_B_TID();
    void thread_B_TKEEP();
    void thread_B_TLAST();
    void thread_B_TSTRB();
    void thread_B_TUSER();
    void thread_B_TVALID();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_121();
    void thread_ap_sig_20();
    void thread_ap_sig_280();
    void thread_ap_sig_53();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st4_fsm_2();
    void thread_ap_sig_ioackin_B_TREADY();
    void thread_i_1_fu_234_p2();
    void thread_match_phi_fu_141_p4();
    void thread_samples_1_fu_228_p2();
    void thread_tmp_1_fu_171_p2();
    void thread_tmp_2_fu_154_p1();
    void thread_tmp_3_fu_200_p1();
    void thread_tmp_5_fu_204_p2();
    void thread_tmp_6_fu_209_p2();
    void thread_tmp_7_fu_214_p2();
    void thread_tmp_fu_148_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
